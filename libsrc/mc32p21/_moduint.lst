gpasm-1.7.0_beta1 (Nov 23 2015)_moduint.asm       2015-12-9  21:31:48          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : ANSI-C Compiler
                      00003 ; Version 0.0.4 (Nov 23 2015) (Linux)
                      00004 ; This file was generated Wed Dec  9 21:31:48 2015
                      00005 ;--------------------------------------------------------
                      00006 ; MC3X port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc/_moduint.c"
                      00009         list    p=3221
                      00010         radix dec
                      00011         include "3221.inc"
                      00001                 LIST
                      00002 ;mc32p21.inc    Standard Header File, Version 1.00 by Sinomcu
                      00261                 LIST
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015 
                      00016         extern STK06
                      00017         extern STK05
                      00018         extern STK04
                      00019         extern STK03
                      00020         extern STK02
                      00021         extern STK01
                      00022         extern STK00
                      00023 ;--------------------------------------------------------
                      00024 ; global declarations
                      00025 ;--------------------------------------------------------
                      00026         global  __moduint
                      00027 
                      00028 ;--------------------------------------------------------
                      00029 ; global definitions
                      00030 ;--------------------------------------------------------
                      00031 ;--------------------------------------------------------
                      00032 ; absolute symbol definitions
                      00033 ;--------------------------------------------------------
                      00034 ;--------------------------------------------------------
                      00035 ; compiler-defined variables
                      00036 ;--------------------------------------------------------
                      00037 UDL__moduint_0  udata
0000                  00038 r0x1001 res     1
0000                  00039 r0x1000 res     1
0001                  00040 r0x1003 res     1
0001                  00041 r0x1002 res     1
0002                  00042 r0x1004 res     1
0002                  00043 r0x1006 res     1
                      00044 ;--------------------------------------------------------
                      00045 ; initialized data
                      00046 ;--------------------------------------------------------
                      00047 ;--------------------------------------------------------
                      00048 ; overlayable items in internal ram 
                      00049 ;--------------------------------------------------------
                      00050 ;       udata_ovr
                      00051 ;--------------------------------------------------------
                      00052 ; code
                      00053 ;--------------------------------------------------------
                      00054 code__moduint   code
                      00055 ;***
                      00056 ;  pBlock Stats: dbName = C
                      00057 ;***
                      00058 ;entry:  __moduint      ;Function start
                      00059 ; 2 exit points
                      00060 ;has an exit
                      00061 ;12 compiler assigned registers:
                      00062 ;   r0x1000
                      00063 ;   STK00
                      00064 ;   r0x1001
                      00065 ;   STK01
                      00066 ;   r0x1002
                      00067 ;   STK02
                      00068 ;   r0x1003
                      00069 ;   r0x1004
                      00070 ;   r0x1005
                      00071 ;   r0x1006
                      00072 ;   r0x1007
                      00073 ;   r0x1008
                      00074 ;; Starting pCode block
                      00075 ;;[ICODE] ../libsdcc/_moduint.c:30:  _entry($12) :
                      00076 ;;[ICODE] ../libsdcc/_moduint.c:30:     proc __moduint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int function ( unsigned-int fixed, unsigned-int fixed) fixed}
0000                  00077 __moduint       ;Function start
                      00078 ; 2 exit points
                      00079 ;;[ICODE] ../libsdcc/_moduint.c:30: iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_a_1_1}[r0x1000 r0x1001 ] = recv __moduint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int function ( unsigned-int fixed, unsigned-int fixed) fixed}
                      00080 ;       .line   30; "../libsdcc/_moduint.c"     _moduint (unsigned int a, unsigned int b)
0000   5600           00081         MOVRA   r0x1000
0001   5800           00082         MOVAR   STK00
0002   5600           00083         MOVRA   r0x1001
                      00084 ;;[ICODE] ../libsdcc/_moduint.c:30: iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ] = recv __moduint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int function ( unsigned-int fixed, unsigned-int fixed) fixed}
0003   5800           00085         MOVAR   STK01
0004   5600           00086         MOVRA   r0x1002
0005   5800           00087         MOVAR   STK02
0006   5600           00088         MOVRA   r0x1003
                      00089 ;;[ICODE] ../libsdcc/_moduint.c:35:     if iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ] != 0 goto preHeaderLbl0($15)
                      00090 ;       .line   35; "../libsdcc/_moduint.c"     if (!b) return (unsigned int)-1;
0007   5800           00091         MOVAR   r0x1003
0008   5C00           00092         ORAR    r0x1002
0009   E587           00093         JBSET   STATUS,2
000A   A000           00094         GOTO    _00119_DS_
                      00095 ;;[ICODE] ../libsdcc/_moduint.c:35:     ret 0xffff {unsigned-int literal}
000B   3CFF           00096         MOVAI   0xff
000C   5600           00097         MOVRA   STK00
000D   3CFF           00098         MOVAI   0xff
000E   A000           00099         GOTO    _00115_DS_
                      00100 ;;[ICODE] ../libsdcc/_moduint.c:39:  preHeaderLbl0($15) :
                      00101 ;;[ICODE] ../libsdcc/_moduint.c:39:     iTemp6 [k11 lr8:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] := 0x1 {const-unsigned-char literal}
000F                  00102 _00119_DS_
                      00103 ;       .line   39; "../libsdcc/_moduint.c"     while (!(b & (1UL << (8*sizeof(unsigned int)-1)))) {
000F   3C01           00104         MOVAI   0x01
0010   5600           00105         MOVRA   r0x1004
                      00106 ;;[ICODE] ../libsdcc/_moduint.c:39:  _whilecontinue_0($3) :
                      00107 ;;[ICODE] ../libsdcc/_moduint.c:39:     iTemp3 [k8 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1005 r0x1006 r0x1007 r0x1008 ] = (unsigned-long-int register)iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ]
0011                  00108 _00107_DS_
0011   5800           00109         MOVAR   r0x1003
                      00110 ;;1     MOVRA   r0x1005
0012   5800           00111         MOVAR   r0x1002
0013   5600           00112         MOVRA   r0x1006
                      00113 ;;1     CLRR    r0x1007
                      00114 ;;1     CLRR    r0x1008
                      00115 ;;[ICODE] ../libsdcc/_moduint.c:39:     iTemp4 [k9 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} = iTemp3 [k8 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1005 r0x1006 r0x1007 r0x1008 ] & 0x8000 {unsigned-long-int literal}
0014   FE00           00116         JBCLR   r0x1006,7
0015   A000           00117         GOTO    _00112_DS_
                      00118 ;;[ICODE] ../libsdcc/_moduint.c:39:     if iTemp4 [k9 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} != 0 goto preHeaderLbl1($18)
                      00119 ;;[ICODE] ../libsdcc/_moduint.c:40:     iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ] = iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ] << 0x1 {const-unsigned-char literal}
                      00120 ;       .line   40; "../libsdcc/_moduint.c"     b <<= 1;
0016   D187           00121         BCLR    STATUS,0
0017   5200           00122         RLR     r0x1003
0018   5200           00123         RLR     r0x1002
                      00124 ;;[ICODE] ../libsdcc/_moduint.c:41:     iTemp6 [k11 lr8:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] = iTemp6 [k11 lr8:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] + 0x1 {const-unsigned-char literal}
                      00125 ;       .line   41; "../libsdcc/_moduint.c"     ++count;
0019   6600           00126         INCR    r0x1004
                      00127 ;;[ICODE] ../libsdcc/_moduint.c:41:      goto _whilecontinue_0($3)
001A   A000           00128         GOTO    _00107_DS_
                      00129 ;;[ICODE] ../libsdcc/_moduint.c:45:  preHeaderLbl1($18) :
                      00130 ;;[ICODE] ../libsdcc/_moduint.c:45:     iTemp10 [k15 lr19:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] := iTemp6 [k11 lr8:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ]
                      00131 ;;[ICODE] ../libsdcc/_moduint.c:45:  _whilecontinue_1($8) :
                      00132 ;;[ICODE] ../libsdcc/_moduint.c:45:     if iTemp10 [k15 lr19:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] == 0 goto _whilebreak_1($10)
001B                  00133 _00112_DS_
                      00134 ;       .line   45; "../libsdcc/_moduint.c"     while (count) {
001B   3C00           00135         MOVAI   0x00
001C   5C00           00136         ORAR    r0x1004
001D   F587           00137         JBCLR   STATUS,2
001E   A000           00138         GOTO    _00114_DS_
                      00139 ;;[ICODE] ../libsdcc/_moduint.c:46:     iTemp7 [k12 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_a_1_1}[r0x1000 r0x1001 ] < iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ]
                      00140 ;       .line   46; "../libsdcc/_moduint.c"     if (a >= b) {
001F   5800           00141         MOVAR   r0x1002
0020   4800           00142         RSUBAR  r0x1000
0021   E587           00143         JBSET   STATUS,2
0022   A000           00144         GOTO    _00131_DS_
0023   5800           00145         MOVAR   r0x1003
0024   4800           00146         RSUBAR  r0x1001
0025                  00147 _00131_DS_
0025   E187           00148         JBSET   STATUS,0
0026   A000           00149         GOTO    _00111_DS_
                      00150 ;;genSkipc:3246: created from rifx:0xbfef31b0
                      00151 ;;[ICODE] ../libsdcc/_moduint.c:46:     if iTemp7 [k12 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_1($7)
                      00152 ;;[ICODE] ../libsdcc/_moduint.c:47:     iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_a_1_1}[r0x1000 r0x1001 ] = iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_a_1_1}[r0x1000 r0x1001 ] - iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ]
                      00153 ;       .line   47; "../libsdcc/_moduint.c"     a -= b;
0027   5800           00154         MOVAR   r0x1003
0028   4A00           00155         RSUBRA  r0x1001
0029   5800           00156         MOVAR   r0x1002
002A   E187           00157         JBSET   STATUS,0
002B   6000           00158         JZAR    r0x1002
002C   4A00           00159         RSUBRA  r0x1000
                      00160 ;;[ICODE] ../libsdcc/_moduint.c:47:  _iffalse_1($7) :
                      00161 ;;[ICODE] ../libsdcc/_moduint.c:49:     iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ] = iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ] >> 0x1 {const-unsigned-char literal}
                      00162 ;;shiftRight_Left2ResultLit:5278: shCount=1, size=2, sign=0, same=1, offr=0
002D                  00163 _00111_DS_
                      00164 ;       .line   49; "../libsdcc/_moduint.c"     b >>= 1;
002D   D187           00165         BCLR    STATUS,0
002E   4E00           00166         RRR     r0x1002
002F   4E00           00167         RRR     r0x1003
                      00168 ;;[ICODE] ../libsdcc/_moduint.c:50:     iTemp10 [k15 lr19:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] = iTemp10 [k15 lr19:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] - 0x1 {const-unsigned-char literal}
                      00169 ;       .line   50; "../libsdcc/_moduint.c"     --count;
0030   6E00           00170         DECR    r0x1004
                      00171 ;;[ICODE] ../libsdcc/_moduint.c:50:      goto _whilecontinue_1($8)
0031   A000           00172         GOTO    _00112_DS_
                      00173 ;;[ICODE] ../libsdcc/_moduint.c:50:  _whilebreak_1($10) :
                      00174 ;;[ICODE] ../libsdcc/_moduint.c:53:     ret iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_a_1_1}[r0x1000 r0x1001 ]
0032                  00175 _00114_DS_
                      00176 ;       .line   53; "../libsdcc/_moduint.c"     return a;
0032   5800           00177         MOVAR   r0x1001
0033   5600           00178         MOVRA   STK00
0034   5800           00179         MOVAR   r0x1000
                      00180 ;;[ICODE] ../libsdcc/_moduint.c:53:  _return($11) :
                      00181 ;;[ICODE] ../libsdcc/_moduint.c:53:     eproc __moduint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int function ( unsigned-int fixed, unsigned-int fixed) fixed}
0035                  00182 _00115_DS_
0035   000C           00183         RETURN  
                      00184 ; exit point of __moduint
                      00185 
                      00186 
                      00187 ;       code size estimation:
                      00188 ;          54+    0 =    54 instructions (  108 byte)
                      00189 
                      00190         end
gpasm-1.7.0_beta1 (Nov 23 2015)_moduint.asm       2015-12-9  21:31:48          PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

ADCR0                             000001B0
ADCR1                             000001B1
ADEOC                             00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRH                              000001B4
ADRL                              000001B5
ANSEL                             00000193
BUZ0OE                            00000005
BUZ1OE                            00000005
C                                 00000000
CLKS                              00000002
DC                                00000001
FSR                               00000184
FSR0                              00000184
FSR1                              00000185
GIE                               00000007
HFEN                              00000000
HIBYTE                            00000183
INDF                              00000180
INDF0                             00000180
INDF1                             00000181
INDF2                             00000182
INDF3                             00000189
INT0IE                            00000002
INT0IF                            00000002
INT1IE                            00000003
INT1IF                            00000003
INTE                              0000018A
INTF                              0000018B
IOP0                              00000190
IOP1                              00000194
KBIE                              00000004
KBIF                              00000004
KBIM                              00000197
KBIM0                             00000000
KBIM1                             00000001
KBIM2                             00000002
KBIM3                             00000003
KBIM4                             00000004
KBIM5                             00000005
KBIM6                             00000006
LFEN                              00000001
LVDCR                             000001AF
LVDEN                             00000007
LVDF                              00000000
MCR                               00000188
OEP0                              00000191
OEP1                              00000195
OSCAL                             000001FB
OSCM                              000001AE
P00                               00000000
P00ANS                            00000000
P00OE                             00000000
P00PU                             00000000
P01                               00000001
P01ANS                            00000001
P01OE                             00000001
P01PU                             00000001
P02                               00000002
P02ANS                            00000002
P02OE                             00000002
P02PU                             00000002
P03                               00000003
P03ANS                            00000003
P03OE                             00000003
P03PU                             00000003
P04                               00000004
P04ANS                            00000004
P04OE                             00000004
P04PU                             00000004
P10                               00000000
P10OE                             00000000
P10PU                             00000000
P11                               00000001
P11OE                             00000001
P11PU                             00000001
P12                               00000002
P12ANS                            00000005
P12OE                             00000002
P12PU                             00000002
P13                               00000003
P13ANS                            00000006
P13OE                             00000003
P13PU                             00000003
P14                               00000004
P14OE                             00000004
P14PU                             00000004
P15                               00000005
P15OE                             00000005
P15PU                             00000005
P16                               00000006
P16OE                             00000006
P16PU                             00000006
PCL                               00000186
PD                                00000004
PUP0                              00000192
PUP1                              00000196
PWM0OE                            00000006
PWM1OE                            00000006
STATUS                            00000187
STBH                              00000004
STBL                              00000005
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
T0CNT                             000001A1
T0CR                              000001A0
T0DATA                            000001A3
T0IE                              00000000
T0IF                              00000000
T0LOAD                            000001A2
T1CNT                             000001A5
T1CR                              000001A4
T1DATA                            000001A7
T1IE                              00000001
T1IF                              00000001
T1LOAD                            000001A6
TC0EN                             00000007
TC1EN                             00000007
TO                                00000005
Z                                 00000002
_00107_DS_                        00000011
_00111_DS_                        0000002D
_00112_DS_                        0000001B
_00114_DS_                        00000032
_00115_DS_                        00000035
_00119_DS_                        0000000F
_00131_DS_                        00000025
_CONFIG0                          00008000
_CONFIG1                          00008001
_CP_ALL                           00007FFF
_FCPU_128T                        0000FFEF
_FCPU_16T                         0000FFBF
_FCPU_256T                        0000FFFF
_FCPU_2T                          0000FF8F
_FCPU_32T                         0000FFCF
_FCPU_4T                          0000FF9F
_FCPU_64T                         0000FFDF
_FCPU_8T                          0000FFAF
_HRC_LRC                          0000FCFF
_HRC_LXT                          0000FDFF
_HXT_LRC                          0000FEFF
_MCLR_OFF                         0000FF7F
_MCLR_ON                          0000FFFF
_PTWRT_16_1024                    0000FFF7
_PTWRT_16_16                      0000DFF7
_PTWRT_256_256                    0000DFFF
_PTWRT_256_4096                   0000FFFF
_PTWRT_4_4                        0000DFF3
_PTWRT_4_512                      0000FFF3
_PTWRT_64_2048                    0000FFFB
_PTWRT_64_64                      0000DFFB
_VLVR_160                         0000E3FF
_VLVR_185                         0000E7FF
_VLVR_205                         0000EBFF
_VLVR_218                         0000EFFF
_VLVR_232                         0000F3FF
_VLVR_245                         0000F7FF
_VLVR_305                         0000FBFF
_VLVR_360                         0000FFFF
_WDT_ALWAYS_OFF                   0000FFFC
_WDT_ALWAYS_ON                    0000FFFF
_WDT_SLEEP_OFF                    0000FFFD
__32P21                           00000001
__moduint                         00000000
r0x1000                           00000001
r0x1001                           00000000
r0x1002                           00000003
r0x1003                           00000002
r0x1004                           00000004
r0x1006                           00000005

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

