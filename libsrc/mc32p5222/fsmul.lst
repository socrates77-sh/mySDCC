gpasm-1.7.0_beta1 (Nov 23 2015)fsmul.asm          2015-11-26  01:02:18         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : ANSI-C Compiler
                      00003 ; Version 0.0.4 (Nov 23 2015) (Linux)
                      00004 ; This file was generated Thu Nov 26 01:02:18 2015
                      00005 ;--------------------------------------------------------
                      00006 ; MC3X port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc/fsmul.c"
                      00009         list    p=5222
                      00010         radix dec
                      00011         include "5222.inc"
                      00001 
                      00002 ;mc32p5212 header file
                      00003 ;define must write at first row
                      00004 
                      00005 GOTOMTP macro x
                      00006         org 0x4000+x
                      00007         endm
                      00008        
  000001B0            00009 INDF0   EQU     0X1B0
  000001B1            00010 INDF1   EQU     0X1B1
  000001B2            00011 INDF2   EQU     0X1B2
  000001B3            00012 HIBYTE  EQU     0X1B3
  000001B4            00013 FSR0    EQU     0X1B4
  000001B5            00014 FSR1    EQU     0X1B5
  000001B6            00015 PCL     EQU     0X1B6
  000001B7            00016 PFLAG   EQU     0X1B7
  000001B8            00017 MCR     EQU     0X1B8
  000001B9            00018 INDF3   EQU     0X1B9   
  000001BA            00019 INTE0   EQU     0X1BA
  000001BB            00020 INTF0   EQU     0X1BB
  000001BC            00021 OSCM    EQU     0X1BC
  000001BD            00022 LVDCR   EQU     0X1BD
                      00023 
  000001C0            00024 MTPADH  EQU     0X1C0
  000001C1            00025 MTPADL  EQU     0X1C1
  000001C2            00026 MTPDB   EQU     0X1C2
  000001C3            00027 MTPMD   EQU     0X1C3
  000001C4            00028 MTPCTR  EQU     0X1C4
  000001C8            00029 IOP1    EQU     0X1C8
  000001C9            00030 OEP1    EQU     0X1C9
  000001CA            00031 PUP1    EQU     0X1CA
  000001CE            00032 DKWP1   EQU     0X1CE
                      00033 
  000001D0            00034 IOP2    EQU     0X1D0
  000001D1            00035 OEP2    EQU     0X1D1
  000001D2            00036 PUP2    EQU     0X1D2
  000001D6            00037 DKWP2   EQU     0X1D6
  000001D8            00038 T0CR    EQU     0X1D8
  000001D9            00039 T0LOADH EQU     0X1D9
  000001DA            00040 T0LOADL EQU     0X1DA
  000001DB            00041 T0LATRH EQU     0X1DB
  000001DC            00042 T0LATRL EQU     0X1DC
  000001DD            00043 T0LATFH EQU     0X1DD
  000001DE            00044 T0LATFL EQU     0X1DE
                      00045 
  000001E0            00046 T1CR    EQU     0X1E0
  000001E1            00047 T1DATA  EQU     0X1E1
  000001E2            00048 T1LOAD  EQU     0X1E2
                      00049 
  000001E4            00050 OPCR0   EQU     0X1E4
  000001E5            00051 OPCR1   EQU     0X1E5
  000001E6            00052 DKW0    EQU     0X1E6
  000001E7            00053 DKW1    EQU     0X1E7
                      00054 
                      00055 #define         STATUS          PFLAG
                      00056 #define         INDF              INDF0
                      00057 #define         FSR                 FSR0
                      00058 #define         INTE        INTE0
                      00059 #define         INTF      INTF0
                      00060 #define         INTECON         INTE
                      00061 #define         INTFLAG   INTF
                      00062 
                      00063 ; ----- INDF0 Bits --------------------------------------------
                      00064 #define INDF00          INDF0,0          /* bit 0 */
                      00065 #define INDF01          INDF0,1         /* bit 1 */
                      00066 #define INDF02          INDF0,2          /* bit 2 */
                      00067 #define INDF03          INDF0,3         /* bit 3 */
                      00068 #define INDF04          INDF0,4         /* bit 4 */
                      00069 #define INDF05          INDF0,5         /* bit 5 */
                      00070 #define INDF06          INDF0,6         /* bit 6 */
                      00071 #define INDF07          INDF0,7         /* bit 7 */
                      00072 
                      00073 ; ----- INDF1 Bits --------------------------------------------
                      00074 #define INDF10          INDF1,0          /* bit 0 */
                      00075 #define INDF11          INDF1,1          /* bit 1 */
                      00076 #define INDF12          INDF1,2          /* bit 2 */
                      00077 #define INDF13          INDF1,3          /* bit 3 */
                      00078 #define INDF14          INDF1,4          /* bit 4 */
                      00079 #define INDF15          INDF1,5          /* bit 5 */
                      00080 #define INDF16          INDF1,6          /* bit 6 */
                      00081 #define INDF17          INDF1,7          /* bit 7 */
                      00082 
                      00083 ; ----- INDF2 Bits --------------------------------------------
                      00084 #define INDF20          INDF2,0          /* bit 0 */
                      00085 #define INDF21          INDF2,1          /* bit 1 */
                      00086 #define INDF22          INDF2,2          /* bit 2 */
                      00087 #define INDF23          INDF2,3          /* bit 3 */
                      00088 #define INDF24          INDF2,4          /* bit 4 */
                      00089 #define INDF25          INDF2,5          /* bit 5 */
                      00090 #define INDF26          INDF2,6          /* bit 6 */
                      00091 #define INDF27          INDF2,7          /* bit 7 */
                      00092 
                      00093 ; ----- HIBYTE Bits --------------------------------------------
                      00094 #define HIBYTE0         HIBYTE,0         /* bit 0 */
                      00095 #define HIBYTE1         HIBYTE,1         /* bit 1 */
                      00096 #define HIBYTE2         HIBYTE,2         /* bit 2 */
                      00097 #define HIBYTE3         HIBYTE,3         /* bit 3 */
                      00098 #define HIBYTE4         HIBYTE,4         /* bit 4 */
                      00099 #define HIBYTE5         HIBYTE,5         /* bit 5 */
                      00100 #define HIBYTE6         HIBYTE,6         /* bit 6 */
                      00101 #define HIBYTE7         HIBYTE,7         /* bit 7 */
                      00102 
                      00103 ; ----- FSR0 Bits ---------------------------------------------
                      00104 #define FSR00           FSR0,0          /* bit 0 */
                      00105 #define FSR01           FSR0,1          /* bit 1 */
                      00106 #define FSR02           FSR0,2          /* bit 2 */
                      00107 #define FSR03           FSR0,3          /* bit 3 */
                      00108 #define FSR04           FSR0,4          /* bit 4 */
                      00109 #define FSR05           FSR0,5          /* bit 5 */
                      00110 #define FSR06           FSR0,6          /* bit 6 */
                      00111 #define FSR07           FSR0,7          /* bit 7 */
                      00112 
                      00113 ; ----- FSR1 Bits ---------------------------------------------
                      00114 #define FSR10           FSR1,0          /* bit 0 */
                      00115 #define FSR11           FSR1,1          /* bit 1 */
                      00116 #define FSR12           FSR1,2          /* bit 2 */
                      00117 #define FSR13           FSR1,3          /* bit 3 */
                      00118 #define FSR14           FSR1,4          /* bit 4 */
                      00119 #define FSR15           FSR1,5          /* bit 5 */
                      00120 #define FSR16           FSR1,6          /* bit 6 */
                      00121 #define FSR17           FSR1,7          /* bit 7 */
                      00122 
                      00123 ; ----- PCL Bits ---------------------------------------------
                      00124 #define PC0             PCL,0          /* bit 0 */
                      00125 #define PC1             PCL,1          /* bit 1 */
                      00126 #define PC2             PCL,2          /* bit 2 */
                      00127 #define PC3             PCL,3          /* bit 3 */
                      00128 #define PC4             PCL,4          /* bit 4 */
                      00129 #define PC5             PCL,5          /* bit 5 */
                      00130 #define PC6             PCL,6          /* bit 6 */
                      00131 #define PC7             PCL,7          /* bit 7 */
                      00132 
                      00133 ;PFLAG bit 
                      00134 #define         Z               PFLAG,2
                      00135 #define         DC              PFLAG,1
                      00136 #define         C               PFLAG,0 
                      00137                                 
                      00138 ;MCR                            
                      00139 #define         GIE             MCR,7
                      00140 #define         TO              MCR,5
                      00141 #define         PD              MCR,4
                      00142 #define         MINT11          MCR,3
                      00143 #define         MINT10          MCR,2
                      00144 #define         MINT01          MCR,1
                      00145 #define         MINT00          MCR,0 
                      00146 
                      00147 ;INDF3 
                      00148 #define         INDF37          INDF3,7
                      00149 #define         INDF36          INDF3,6
                      00150 #define         INDF35          INDF3,5
                      00151 #define         INDF34          INDF3,4
                      00152 #define         INDF33          INDF3,3
                      00153 #define         INDF32          INDF3,2
                      00154 #define         INDF31          INDF3,1
                      00155 #define         INDF30          INDF3,0 
                      00156 
                      00157 ;INTE     
                      00158 #DEFINE         MTPIE           INTE,7                              
                      00159 #DEFINE         LVDIE           INTE,5
                      00160 #DEFINE         INT1IE          INTE,3
                      00161 #DEFINE         INT0IE          INTE,2
                      00162 #DEFINE         T1IE            INTE,1
                      00163 #define         T0IE            INTE,0
                      00164                                 
                      00165 ;INTF      
                      00166 #DEFINE         MTPIF           INTF,7                     
                      00167 #DEFINE         T0RF            INTF,6
                      00168 #DEFINE         LVDIF           INTF,5
                      00169 #DEFINE         INT1IF          INTF,3
                      00170 #DEFINE         INT0IF          INTF,2
                      00171 #DEFINE         T1IF            INTF,1
                      00172 #DEFINE         T0IF            INTF,0
                      00173                                 
                      00174 ;OSCM                           
                      00175 #define         STBL            OSCM,5
                      00176 #define         STBH            OSCM,4
                      00177 #define         CLKS            OSCM,2
                      00178 #define         LFEN            OSCM,1
                      00179 #define         HFEN            OSCM,0
                      00180 
                      00181 ;LVDCR
                      00182 #define         LVDEN           LVDCR,7
                      00183 #define         LVDS            LVDCR,3
                      00184 #define         LVDF            LVDCR,0 
                      00185 
                      00186 ;MTPADH                                  
                      00187 #define         MTPAD9          MTPADH,5 
                      00188 #define         MTPAD8          MTPADH,4 
                      00189 #define         MTPAD7          MTPADH,3 
                      00190 #define         MTPAD6          MTPADH,2 
                      00191 #define         MTPAD5          MTPADH,1 
                      00192 #define         MTPAD4          MTPADH,0 
                      00193 
                      00194 ;MTPADL                                  
                      00195 #define         MTPAD3          MTPADL,3 
                      00196 #define         MTPAD2          MTPADL,2 
                      00197 #define         MTPAD1          MTPADL,1 
                      00198 #define         MTPAD0          MTPADL,0 
                      00199 
                      00200 ;MTPDB
                      00201 #define         MTPDB7          MTPDB,7
                      00202 #define         MTPDB6          MTPDB,6
                      00203 #define         MTPDB5          MTPDB,5
                      00204 #define         MTPDB4          MTPDB,4
                      00205 #define         MTPDB3          MTPDB,3
                      00206 #define         MTPDB2          MTPDB,2
                      00207 #define         MTPDB1          MTPDB,1
                      00208 #define         MTPDB0          MTPDB,0
                      00209 
                      00210 ;MTPMD  
                      00211 #define         MTPEN           MTPMD,7
                      00212 #define         CHIPERS         MTPMD,4
                      00213 #define         PAGEERS         MTPMD,3
                      00214 #define         PAGEWR          MTPMD,2
                      00215 #define         BYTEWR          MTPMD,1
                      00216 #define         BYTERD          MTPMD,0
                      00217 
                      00218 ;MTPCTR
                      00219 #define         MTPBUSY         MTPCTR,7
                      00220 #define         MTPTOUT         MTPCTR,6
                      00221 #define         MTPLD           MTPCTR,2
                      00222 #define         MTPWR           MTPCTR,1
                      00223 #define         MTPRD           MTPCTR,0
                      00224 
                      00225 ;IOP1
                      00226 #define         P17D            IOP1,7
                      00227 #define         P16D            IOP1,6
                      00228 #define         P15D            IOP1,5
                      00229 #define         P14D            IOP1,4
                      00230 #define         P13D            IOP1,3
                      00231 #define         P12D            IOP1,2
                      00232 #define         P11D            IOP1,1
                      00233 #define         P10D              IOP1,0
                      00234 
                      00235 ;OEP1
                      00236 #define         P17OE           OEP1,7
                      00237 #define         P16OE           OEP1,6
                      00238 #define         P15OE           OEP1,5
                      00239 #define         P14OE           OEP1,4
                      00240 #define         P13OE           OEP1,3
                      00241 #define         P12OE           OEP1,2
                      00242 #define         P11OE           OEP1,1
                      00243 #define         P10OE           OEP1,0
                      00244 
                      00245 ;PUP1
                      00246 #define         P16PU           PUP1,6
                      00247 #define         P15PU           PUP1,5
                      00248 #define         P14PU           PUP1,4
                      00249 #define         P13PU           PUP1,3
                      00250 #define         P12PU           PUP1,2
                      00251 #define         P11PU           PUP1,1
                      00252 #define         P10PU           PUP1,0
                      00253 
                      00254 ;DKWP1
                      00255 #define         P16DKW                DKWP1,6
                      00256 #define         P15DKW                DKWP1,5
                      00257 #define         P14DKW                DKWP1,4
                      00258 #define         P13DKW                DKWP1,3
                      00259 #define         P12DKW                DKWP1,2
                      00260 #define         P11DKW                DKWP1,1
                      00261 #define         P10DKW          DKWP1,0
                      00262 
                      00263 ;IOP2
                      00264 #define         P27D            IOP2,7
                      00265 #define         P26D            IOP2,6
                      00266 #define         P25D            IOP2,5
                      00267 #define         P24D            IOP2,4
                      00268 #define         P22D            IOP2,2
                      00269 #define         P21D            IOP2,1
                      00270 
                      00271 ;OEP2
                      00272 #define         P27OE           OEP2,7
                      00273 #define         P26OE           OEP2,6
                      00274 #define         P25OE           OEP2,5
                      00275 #define         P24OE           OEP2,4
                      00276 #define         P22OE           OEP2,2
                      00277 #define         P21OE           OEP2,1
                      00278 
                      00279 ;PUP2
                      00280 #define         P27PU           PUP2,7
                      00281 #define         P26PU           PUP2,6
                      00282 #define         P25PU           PUP2,5
                      00283 #define         P24PU           PUP2,4
                      00284 #define         P22PU           PUP2,2
                      00285 #define         P21PU           PUP2,1
                      00286 
                      00287 ;DKWP2
                      00288 #define         P27DKW                DKWP2,7
                      00289 #define         P26DKW                DKWP2,6
                      00290 #define         P25DKW                DKWP2,5
                      00291 #define         P24DKW                DKWP2,4
                      00292 #define         P22DKW                DKWP2,2
                      00293 #define         P21DKW                DKWP2,1
                      00294 
                      00295 ;T0CR
                      00296 #define         TC0EN           T0CR,7
                      00297 #define         T0MOD1          T0CR,6
                      00298 #define         T0MOD0          T0CR,5
                      00299 #define         T0PS1           T0CR,4
                      00300 #define         T0PS0           T0CR,3
                      00301 #define         T0PR2           T0CR,2
                      00302 #define         T0PR1           T0CR,1
                      00303 #define         T0PR0           T0CR,0
                      00304 
                      00305 ;T0LOADH
                      00306 #define         T0LOADH7        T0LOADH,7
                      00307 #define         T0LOADH6        T0LOADH,6
                      00308 #define         T0LOADH5        T0LOADH,5
                      00309 #define         T0LOADH4        T0LOADH,4
                      00310 #define         T0LOADH3        T0LOADH,3
                      00311 #define         T0LOADH2        T0LOADH,2
                      00312 #define         T0LOADH1        T0LOADH,1
                      00313 #define         T0LOADH0        T0LOADH,0
                      00314 
                      00315 ;T0LOADL
                      00316 #define         T0LOADL7        T0LOADL,7
                      00317 #define         T0LOADL6        T0LOADL,6
                      00318 #define         T0LOADL5        T0LOADL,5
                      00319 #define         T0LOADL4        T0LOADL,4
                      00320 #define         T0LOADL3        T0LOADL,3
                      00321 #define         T0LOADL2        T0LOADL,2
                      00322 #define         T0LOADL1        T0LOADL,1
                      00323 #define         T0LOADL0        T0LOADL,0
                      00324 
                      00325 ;T0LATFH
                      00326 #define         T0LATFH7        T0LATFH,7
                      00327 #define         T0LATFH6        T0LATFH,6
                      00328 #define         T0LATFH5        T0LATFH,5
                      00329 #define         T0LATFH4        T0LATFH,4
                      00330 #define         T0LATFH3        T0LATFH,3
                      00331 #define         T0LATFH2        T0LATFH,2
                      00332 #define         T0LATFH1        T0LATFH,1
                      00333 #define         T0LATFH0        T0LATFH,0
                      00334 
                      00335 ;T0LATFL
                      00336 #define         T0LATFL7        T0LATFL,7
                      00337 #define         T0LATFL6        T0LATFL,6
                      00338 #define         T0LATFL5        T0LATFL,5
                      00339 #define         T0LATFL4        T0LATFL,4
                      00340 #define         T0LATFL3        T0LATFL,3
                      00341 #define         T0LATFL2        T0LATFL,2
                      00342 #define         T0LATFL1        T0LATFL,1
                      00343 #define         T0LATFL0        T0LATFL,0
                      00344 
                      00345 ;T0LATRH
                      00346 #define         T0LATRH7        T0LOADH,7
                      00347 #define         T0LATRH6        T0LOADH,6
                      00348 #define         T0LATRH5        T0LOADH,5
                      00349 #define         T0LATRH4        T0LOADH,4
                      00350 #define         T0LATRH3        T0LOADH,3
                      00351 #define         T0LATRH2        T0LOADH,2
                      00352 #define         T0LATRH1        T0LOADH,1
                      00353 #define         T0LATRH0        T0LOADH,0
                      00354 
                      00355 ;T0LATRL
                      00356 #define         T0LATRL7        T0LATRL,7
                      00357 #define         T0LATRL6        T0LATRL,6
                      00358 #define         T0LATRL5        T0LATRL,5
                      00359 #define         T0LATRL4        T0LATRL,4
                      00360 #define         T0LATRL3        T0LATRL,3
                      00361 #define         T0LATRL2        T0LATRL,2
                      00362 #define         T0LATRL1        T0LATRL,1
                      00363 #define         T0LATRL0        T0LATRL,0
                      00364 
                      00365 ;T1CR
                      00366 #define         TC1EN           T1CR,7
                      00367 #define         T1MOD1          T1CR,6
                      00368 #define         T1MOD0          T1CR,5
                      00369 #define         T1PS1           T1CR,4
                      00370 #define         T1PS0           T1CR,3
                      00371 #define         T1PR2           T1CR,2
                      00372 #define         T1PR1           T1CR,1
                      00373 #define         T1PR0           T1CR,0
                      00374 
                      00375 ;T1LOAD
                      00376 #define         T1LOAD7         T1LOAD,7
                      00377 #define         T1LOAD6         T1LOAD,6
                      00378 #define         T1LOAD5         T1LOAD,5
                      00379 #define         T1LOAD4         T1LOAD,4
                      00380 #define         T1LOAD3         T1LOAD,3
                      00381 #define         T1LOAD2         T1LOAD,2
                      00382 #define         T1LOAD1         T1LOAD,1
                      00383 #define         T1LOAD0         T1LOAD,0
                      00384 
                      00385 ;T1DATA
                      00386 #define         T1DATA7         T1DATA,7
                      00387 #define         T1DATA6         T1DATA,6
                      00388 #define         T1DATA5         T1DATA,5
                      00389 #define         T1DATA4         T1DATA,4
                      00390 #define         T1DATA3         T1DATA,3
                      00391 #define         T1DATA2         T1DATA,2
                      00392 #define         T1DATA1         T1DATA,1
                      00393 #define         T1DATA0         T1DATA,0
                      00394 
                      00395 ;OPCR0
                      00396 #define         OPAE            OPCR0,7
                      00397 #define         OPAM            OPCR0,6
                      00398 #define         OPFC5           OPCR0,5
                      00399 #define         OPFC4           OPCR0,4
                      00400 #define         OPFC3           OPCR0,3
                      00401 #define         OPFC2           OPCR0,2
                      00402 #define         OPFC1           OPCR0,1
                      00403 #define         OPFC0           OPCR0,0
                      00404 
                      00405 ;OPCR1
                      00406 #define         IRIN            OPCR1,7
                      00407 #define         VSEL            OPCR1,6
                      00408 #define         FSEL1           OPCR1,3
                      00409 #define         FSEL0           OPCR1,2
                      00410 #define         CSEL1           OPCR1,1
                      00411 #define         CSEL0           OPCR1,0
                      00412 
                      00413 ;DKW0
                      00414 #define         DKWE            DKW0,7
                      00415 #define         IROS            DKW0,6
                      00416 #define         IROT            DKW0,5         
                      00417 #define         WSEL0           DKW0,4
                      00418 #define         WSEL1           DKW0,3
                      00419 #define         RSEL            DKW0,2     
                      00420 
                      00421 ;DKW1
                      00422 #define         IRES1           DKW1,5         
                      00423 #define         IRES0           DKW1,4
                      00424 #define         LSEL11          DKW1,3
                      00425 #define         LSEL10          DKW1,2
                      00426 #define         LSEL01          DKW1,1
                      00427 #define         LSEL00          DKW1,0
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015         extern  ___uchar2fs
                      00016         extern  ___schar2fs
                      00017         extern  ___uint2fs
                      00018         extern  ___sint2fs
                      00019         extern  ___ulong2fs
                      00020         extern  ___slong2fs
                      00021         extern  ___fs2uchar
                      00022         extern  ___fs2schar
                      00023         extern  ___fs2uint
                      00024         extern  ___fs2sint
                      00025         extern  ___fs2ulong
                      00026         extern  ___fs2slong
                      00027         extern  ___fsadd
                      00028         extern  ___fssub
                      00029         extern  ___fsdiv
                      00030         extern  ___fslt
                      00031         extern  ___fseq
                      00032         extern  ___fsneq
                      00033         extern  ___fsgt
                      00034         extern  __mullong
                      00035 
                      00036         extern STK06
                      00037         extern STK05
                      00038         extern STK04
                      00039         extern STK03
                      00040         extern STK02
                      00041         extern STK01
                      00042         extern STK00
                      00043 ;--------------------------------------------------------
                      00044 ; global declarations
                      00045 ;--------------------------------------------------------
                      00046         global  ___fsmul
                      00047 
                      00048 ;--------------------------------------------------------
                      00049 ; global definitions
                      00050 ;--------------------------------------------------------
                      00051 ;--------------------------------------------------------
                      00052 ; absolute symbol definitions
                      00053 ;--------------------------------------------------------
                      00054 ;--------------------------------------------------------
                      00055 ; compiler-defined variables
                      00056 ;--------------------------------------------------------
                      00057 UDL_fsmul_0     udata
0000                  00058 r0x100B res     1
0000                  00059 r0x100A res     1
0001                  00060 r0x1009 res     1
0001                  00061 r0x1008 res     1
0002                  00062 r0x100F res     1
0002                  00063 r0x100E res     1
0003                  00064 r0x100D res     1
0003                  00065 r0x100C res     1
0004                  00066 r0x1010 res     1
0004                  00067 r0x1011 res     1
0005                  00068 r0x1012 res     1
0005                  00069 r0x1013 res     1
0006                  00070 r0x1014 res     1
0006                  00071 r0x1015 res     1
0007                  00072 r0x1016 res     1
0007                  00073 r0x1017 res     1
0008                  00074 r0x1018 res     1
0008                  00075 r0x1019 res     1
0009                  00076 r0x101A res     1
0009                  00077 ___fsmul_fl1_1_22       res     4
000B                  00078 ___fsmul_fl2_1_22       res     4
                      00079 ;--------------------------------------------------------
                      00080 ; initialized data
                      00081 ;--------------------------------------------------------
                      00082 ;--------------------------------------------------------
                      00083 ; overlayable items in internal ram 
                      00084 ;--------------------------------------------------------
                      00085 ;       udata_ovr
                      00086 ;--------------------------------------------------------
                      00087 ; code
                      00088 ;--------------------------------------------------------
                      00089 code_fsmul      code
                      00090 ;***
                      00091 ;  pBlock Stats: dbName = C
                      00092 ;***
                      00093 ;entry:  ___fsmul       ;Function start
                      00094 ; 2 exit points
                      00095 ;has an exit
                      00096 ;functions called:
                      00097 ;   __mullong
                      00098 ;   __mullong
                      00099 ;   __mullong
                      00100 ;   __mullong
                      00101 ;   __mullong
                      00102 ;   __mullong
                      00103 ;26 compiler assigned registers:
                      00104 ;   r0x1008
                      00105 ;   STK00
                      00106 ;   r0x1009
                      00107 ;   STK01
                      00108 ;   r0x100A
                      00109 ;   STK02
                      00110 ;   r0x100B
                      00111 ;   STK03
                      00112 ;   r0x100C
                      00113 ;   STK04
                      00114 ;   r0x100D
                      00115 ;   STK05
                      00116 ;   r0x100E
                      00117 ;   STK06
                      00118 ;   r0x100F
                      00119 ;   r0x1010
                      00120 ;   r0x1011
                      00121 ;   r0x1012
                      00122 ;   r0x1013
                      00123 ;   r0x1014
                      00124 ;   r0x1015
                      00125 ;   r0x1016
                      00126 ;   r0x1017
                      00127 ;   r0x1018
                      00128 ;   r0x1019
                      00129 ;   r0x101A
                      00130 ;; Starting pCode block
                      00131 ;;[ICODE] ../libsdcc/fsmul.c:55:  _entry($14) :
                      00132 ;;[ICODE] ../libsdcc/fsmul.c:55:        proc ___fsmul [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0000                  00133 ___fsmul        ;Function start
                      00134 ; 2 exit points
                      00135 ;;[ICODE] ../libsdcc/fsmul.c:55: iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsmul_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ] = recv ___fsmul [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
                      00136 ;       .line   55; "../libsdcc/fsmul.c"        float __fsmul (float a1, float a2) _FS_REENTRANT
0000   5600           00137         MOVRA   r0x1008
0001   5800           00138         MOVAR   STK00
0002   5600           00139         MOVRA   r0x1009
0003   5800           00140         MOVAR   STK01
0004   5600           00141         MOVRA   r0x100A
0005   5800           00142         MOVAR   STK02
0006   5600           00143         MOVRA   (___fsmul_fl1_1_22 + 0)
0007   5600           00144         MOVRA   r0x100B
                      00145 ;;[ICODE] ../libsdcc/fsmul.c:55: iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsmul_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ] = recv ___fsmul [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0008   5800           00146         MOVAR   STK03
0009   5600           00147         MOVRA   r0x100C
000A   5800           00148         MOVAR   STK04
000B   5600           00149         MOVRA   r0x100D
000C   5800           00150         MOVAR   STK05
000D   5600           00151         MOVRA   r0x100E
000E   5800           00152         MOVAR   STK06
000F   5600           00153         MOVRA   (___fsmul_fl2_1_22 + 0)
0010   5600           00154         MOVRA   r0x100F
                      00155 ;;[ICODE] ../libsdcc/fsmul.c:62:        iTemp2 [k7 lr5:6 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00156 ;;[ICODE] ../libsdcc/fsmul.c:62:        *(iTemp2 [k7 lr5:6 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsmul_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00157 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
                      00158 ;;99    MOVAR   r0x100B
                      00159 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
                      00160 ;       .line   62; "../libsdcc/fsmul.c"        fl1.f = a1;
0011   5800           00161         MOVAR   r0x100A
0012   5600           00162         MOVRA   (___fsmul_fl1_1_22 + 1)
                      00163 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
0013   5800           00164         MOVAR   r0x1009
0014   5600           00165         MOVRA   (___fsmul_fl1_1_22 + 2)
                      00166 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
0015   5800           00167         MOVAR   r0x1008
0016   5600           00168         MOVRA   (___fsmul_fl1_1_22 + 3)
                      00169 ;;[ICODE] ../libsdcc/fsmul.c:63:        iTemp4 [k11 lr7:8 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00170 ;;[ICODE] ../libsdcc/fsmul.c:63:        *(iTemp4 [k11 lr7:8 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsmul_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ]
                      00171 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
                      00172 ;;125   MOVAR   r0x100F
                      00173 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
                      00174 ;       .line   63; "../libsdcc/fsmul.c"        fl2.f = a2;
0017   5800           00175         MOVAR   r0x100E
0018   5600           00176         MOVRA   (___fsmul_fl2_1_22 + 1)
                      00177 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
0019   5800           00178         MOVAR   r0x100D
001A   5600           00179         MOVRA   (___fsmul_fl2_1_22 + 2)
                      00180 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
001B   5800           00181         MOVAR   r0x100C
001C   5600           00182         MOVRA   (___fsmul_fl2_1_22 + 3)
                      00183 ;;[ICODE] ../libsdcc/fsmul.c:65:        iTemp6 [k14 lr9:10 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00184 ;;[ICODE] ../libsdcc/fsmul.c:65:        iTemp8 [k17 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp6 [k14 lr9:10 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00185 ;       .line   65; "../libsdcc/fsmul.c"        if (!fl1.l || !fl2.l)
001D   5800           00186         MOVAR   (___fsmul_fl1_1_22 + 0)
001E   5600           00187         MOVRA   r0x100B
001F   5800           00188         MOVAR   (___fsmul_fl1_1_22 + 1)
0020   5600           00189         MOVRA   r0x100A
0021   5800           00190         MOVAR   (___fsmul_fl1_1_22 + 2)
0022   5600           00191         MOVRA   r0x1009
0023   5800           00192         MOVAR   (___fsmul_fl1_1_22 + 3)
0024   5600           00193         MOVRA   r0x1008
                      00194 ;;[ICODE] ../libsdcc/fsmul.c:65:        if iTemp8 [k17 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] == 0 goto _iftrue_0($1)
0025   5800           00195         MOVAR   r0x100B
0026   5C00           00196         ORAR    r0x100A
0027   5C00           00197         ORAR    r0x1009
0028   5C00           00198         ORAR    r0x1008
0029   F5B7           00199         JBCLR   STATUS,2
002A   A000           00200         GOTO    _00105_DS_
                      00201 ;;[ICODE] ../libsdcc/fsmul.c:65:        iTemp9 [k18 lr12:13 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00202 ;;[ICODE] ../libsdcc/fsmul.c:65:        iTemp11 [k21 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp9 [k18 lr12:13 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
002B   5800           00203         MOVAR   (___fsmul_fl2_1_22 + 0)
002C   5600           00204         MOVRA   r0x100B
002D   5800           00205         MOVAR   (___fsmul_fl2_1_22 + 1)
002E   5600           00206         MOVRA   r0x100A
002F   5800           00207         MOVAR   (___fsmul_fl2_1_22 + 2)
0030   5600           00208         MOVRA   r0x1009
0031   5800           00209         MOVAR   (___fsmul_fl2_1_22 + 3)
0032   5600           00210         MOVRA   r0x1008
                      00211 ;;[ICODE] ../libsdcc/fsmul.c:65:        if iTemp11 [k21 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] != 0 goto _iffalse_0($2)
0033   5800           00212         MOVAR   r0x100B
0034   5C00           00213         ORAR    r0x100A
0035   5C00           00214         ORAR    r0x1009
0036   5C00           00215         ORAR    r0x1008
0037   E5B7           00216         JBSET   STATUS,2
0038   A000           00217         GOTO    _00106_DS_
                      00218 ;;[ICODE] ../libsdcc/fsmul.c:65:  _iftrue_0($1) :
                      00219 ;;[ICODE] ../libsdcc/fsmul.c:66:        ret 0 {float literal}
0039                  00220 _00105_DS_
                      00221 ;       .line   66; "../libsdcc/fsmul.c"        return (0);
0039   3C00           00222         MOVAI   0x00
003A   5600           00223         MOVRA   STK02
003B   3C00           00224         MOVAI   0x00
003C   5600           00225         MOVRA   STK01
003D   3C00           00226         MOVAI   0x00
003E   5600           00227         MOVRA   STK00
003F   3C00           00228         MOVAI   0x00
0040   A000           00229         GOTO    _00117_DS_
                      00230 ;;[ICODE] ../libsdcc/fsmul.c:66:  _iffalse_0($2) :
                      00231 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp13 [k24 lr18:19 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00232 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp15 [k27 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp13 [k24 lr18:19 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0041                  00233 _00106_DS_
                      00234 ;       .line   69; "../libsdcc/fsmul.c"        sign = SIGN (fl1.l) ^ SIGN (fl2.l);
0041   5800           00235         MOVAR   (___fsmul_fl1_1_22 + 0)
0042   5600           00236         MOVRA   r0x100B
0043   5800           00237         MOVAR   (___fsmul_fl1_1_22 + 1)
0044   5600           00238         MOVRA   r0x100A
0045   5800           00239         MOVAR   (___fsmul_fl1_1_22 + 2)
0046   5600           00240         MOVRA   r0x1009
0047   5800           00241         MOVAR   (___fsmul_fl1_1_22 + 3)
0048   5600           00242         MOVRA   r0x1008
                      00243 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp16 [k28 lr20:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1004 ] = gabit iTemp15 [k27 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0049   5800           00244         MOVAR   r0x1008
004A   3E80           00245         ANDAI   0x80
004B   E5B7           00246         JBSET   STATUS,2
004C   3C01           00247         MOVAI   0x01
004D   5600           00248         MOVRA   r0x100F
                      00249 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp17 [k29 lr21:22 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00250 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp19 [k32 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp17 [k29 lr21:22 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
004E   5800           00251         MOVAR   (___fsmul_fl2_1_22 + 0)
004F   5600           00252         MOVRA   r0x100B
0050   5800           00253         MOVAR   (___fsmul_fl2_1_22 + 1)
0051   5600           00254         MOVRA   r0x100A
0052   5800           00255         MOVAR   (___fsmul_fl2_1_22 + 2)
0053   5600           00256         MOVRA   r0x1009
0054   5800           00257         MOVAR   (___fsmul_fl2_1_22 + 3)
0055   5600           00258         MOVRA   r0x1008
                      00259 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp20 [k33 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1005 ] = gabit iTemp19 [k32 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0056   5800           00260         MOVAR   r0x1008
0057   3E80           00261         ANDAI   0x80
0058   E5B7           00262         JBSET   STATUS,2
0059   3C01           00263         MOVAI   0x01
005A   5600           00264         MOVRA   r0x100E
                      00265 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp12 [k22 lr24:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ ___fsmul_sign_1_22}[r0x1000 ] = iTemp16 [k28 lr20:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1004 ] ^ iTemp20 [k33 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1005 ]
005B   5800           00266         MOVAR   r0x100E
005C   4000           00267         XORAR   r0x100F
005D   5600           00268         MOVRA   r0x100B
                      00269 ;;[ICODE] ../libsdcc/fsmul.c:70:        iTemp23 [k37 lr26:27 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00270 ;;[ICODE] ../libsdcc/fsmul.c:70:        iTemp25 [k40 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp23 [k37 lr26:27 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00271 ;       .line   70; "../libsdcc/fsmul.c"        exp = EXP (fl1.l) - EXCESS;
005E   5800           00272         MOVAR   (___fsmul_fl1_1_22 + 0)
005F   5600           00273         MOVRA   r0x100A
0060   5800           00274         MOVAR   (___fsmul_fl1_1_22 + 1)
0061   5600           00275         MOVRA   r0x1009
0062   5800           00276         MOVAR   (___fsmul_fl1_1_22 + 2)
0063   5600           00277         MOVRA   r0x1008
0064   5800           00278         MOVAR   (___fsmul_fl1_1_22 + 3)
0065   5600           00279         MOVRA   r0x100F
                      00280 ;;[ICODE] ../libsdcc/fsmul.c:70:        iTemp26 [k41 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1005 r0x1006 r0x1007 r0x1008 ] = iTemp25 [k40 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x17 {const-unsigned-char literal}
0066   5000           00281         RLAR    r0x1008
0067   5000           00282         RLAR    r0x100F
0068   5600           00283         MOVRA   r0x100A
0069   5600           00284         MOVRA   r0x100E
006A   7600           00285         CLRR    r0x100D
006B   5200           00286         RLR     r0x100D
006C   7600           00287         CLRR    r0x100C
006D   7600           00288         CLRR    r0x1010
                      00289 ;;[ICODE] ../libsdcc/fsmul.c:70:        iTemp27 [k42 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp26 [k41 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1005 r0x1006 r0x1007 r0x1008 ] & 0xff {unsigned-long-int literal}
                      00290 ;;103   MOVAR   r0x100E
006E   7600           00291         CLRR    r0x1009
006F   7600           00292         CLRR    r0x1008
0070   7600           00293         CLRR    r0x100F
                      00294 ;;[ICODE] ../libsdcc/fsmul.c:70:        iTemp28 [k43 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp27 [k42 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] - 0x7e {unsigned-long-int literal}
0071   3C82           00295         MOVAI   0x82
0072   7E00           00296         ADDRA   r0x100A
0073   3CFF           00297         MOVAI   0xff
0074   E1B7           00298         JBSET   STATUS,0
0075   7E00           00299         ADDRA   r0x1009
0076   3CFF           00300         MOVAI   0xff
0077   E1B7           00301         JBSET   STATUS,0
0078   7E00           00302         ADDRA   r0x1008
0079   3CFF           00303         MOVAI   0xff
007A   E1B7           00304         JBSET   STATUS,0
007B   7E00           00305         ADDRA   r0x100F
                      00306 ;;[ICODE] ../libsdcc/fsmul.c:70:        iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] = (int fixed)iTemp28 [k43 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ]
007C   5800           00307         MOVAR   r0x100A
007D   5600           00308         MOVRA   r0x100E
007E   5800           00309         MOVAR   r0x1009
007F   5600           00310         MOVRA   r0x100D
                      00311 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp30 [k45 lr33:34 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00312 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp32 [k48 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp30 [k45 lr33:34 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00313 ;       .line   71; "../libsdcc/fsmul.c"        exp += EXP (fl2.l);
0080   5800           00314         MOVAR   (___fsmul_fl2_1_22 + 0)
0081   5600           00315         MOVRA   r0x100A
0082   5800           00316         MOVAR   (___fsmul_fl2_1_22 + 1)
0083   5600           00317         MOVRA   r0x1009
0084   5800           00318         MOVAR   (___fsmul_fl2_1_22 + 2)
0085   5600           00319         MOVRA   r0x1008
0086   5800           00320         MOVAR   (___fsmul_fl2_1_22 + 3)
0087   5600           00321         MOVRA   r0x100F
                      00322 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp33 [k49 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp32 [k48 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x17 {const-unsigned-char literal}
0088   5000           00323         RLAR    r0x1008
0089   5000           00324         RLAR    r0x100F
008A   5600           00325         MOVRA   r0x100A
008B   5600           00326         MOVRA   r0x100C
008C   7600           00327         CLRR    r0x1010
008D   5200           00328         RLR     r0x1010
008E   7600           00329         CLRR    r0x1011
008F   7600           00330         CLRR    r0x1012
                      00331 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp34 [k50 lr36:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp33 [k49 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] & 0xff {unsigned-long-int literal}
                      00332 ;;104   MOVAR   r0x100C
0090   7600           00333         CLRR    r0x1009
0091   7600           00334         CLRR    r0x1008
0092   7600           00335         CLRR    r0x100F
                      00336 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp35 [k51 lr37:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = (unsigned-long-int fixed)iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ]
0093   5800           00337         MOVAR   r0x100E
0094   5600           00338         MOVRA   r0x100C
0095   5800           00339         MOVAR   r0x100D
0096   5600           00340         MOVRA   r0x1010
0097   3C00           00341         MOVAI   0x00
0098   FE00           00342         JBCLR   r0x1010,7
0099   3CFF           00343         MOVAI   0xff
009A   5600           00344         MOVRA   r0x1012
009B   5600           00345         MOVRA   r0x1011
                      00346 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp36 [k52 lr38:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp35 [k51 lr37:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] + iTemp34 [k50 lr36:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ]
009C   5800           00347         MOVAR   r0x100A
009D   7C00           00348         ADDAR   r0x100C
009E   5600           00349         MOVRA   r0x100A
009F   5800           00350         MOVAR   r0x1010
00A0   F1B7           00351         JBCLR   STATUS,0
00A1   6000           00352         JZAR    r0x1010
00A2   7E00           00353         ADDRA   r0x1009
00A3   5800           00354         MOVAR   r0x1011
00A4   F1B7           00355         JBCLR   STATUS,0
00A5   6000           00356         JZAR    r0x1011
00A6   7E00           00357         ADDRA   r0x1008
00A7   5800           00358         MOVAR   r0x1012
00A8   F1B7           00359         JBCLR   STATUS,0
00A9   6000           00360         JZAR    r0x1012
00AA   7E00           00361         ADDRA   r0x100F
                      00362 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] = (int fixed)iTemp36 [k52 lr38:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ]
00AB   5800           00363         MOVAR   r0x100A
00AC   5600           00364         MOVRA   r0x100E
00AD   5800           00365         MOVAR   r0x1009
00AE   5600           00366         MOVRA   r0x100D
                      00367 ;;[ICODE] ../libsdcc/fsmul.c:73:        iTemp38 [k54 lr41:46 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00368 ;;[ICODE] ../libsdcc/fsmul.c:73:        iTemp40 [k57 lr42:43 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00369 ;;[ICODE] ../libsdcc/fsmul.c:73:        iTemp42 [k60 lr43:44 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp40 [k57 lr42:43 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00370 ;       .line   73; "../libsdcc/fsmul.c"        fl1.l = MANT (fl1.l);
00AF   5800           00371         MOVAR   (___fsmul_fl1_1_22 + 0)
00B0   5600           00372         MOVRA   r0x100A
00B1   5800           00373         MOVAR   (___fsmul_fl1_1_22 + 1)
00B2   5600           00374         MOVRA   r0x1009
00B3   5800           00375         MOVAR   (___fsmul_fl1_1_22 + 2)
00B4   5600           00376         MOVRA   r0x1008
00B5   5800           00377         MOVAR   (___fsmul_fl1_1_22 + 3)
00B6   5600           00378         MOVRA   r0x100F
                      00379 ;;[ICODE] ../libsdcc/fsmul.c:73:        iTemp43 [k61 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp42 [k60 lr43:44 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] & 0x7fffff {unsigned-long-int literal}
00B7   DE00           00380         BCLR    r0x1008,7
00B8   7600           00381         CLRR    r0x100F
                      00382 ;;[ICODE] ../libsdcc/fsmul.c:73:        iTemp44 [k62 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp43 [k61 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] | 0x800000 {unsigned-long-int literal}
00B9   CE00           00383         BSET    r0x1008,7
                      00384 ;;[ICODE] ../libsdcc/fsmul.c:73:        *(iTemp38 [k54 lr41:46 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := iTemp44 [k62 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ]
                      00385 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
00BA   5800           00386         MOVAR   r0x100A
00BB   5600           00387         MOVRA   (___fsmul_fl1_1_22 + 0)
                      00388 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
00BC   5800           00389         MOVAR   r0x1009
00BD   5600           00390         MOVRA   (___fsmul_fl1_1_22 + 1)
                      00391 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
00BE   5800           00392         MOVAR   r0x1008
00BF   5600           00393         MOVRA   (___fsmul_fl1_1_22 + 2)
                      00394 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
00C0   3C00           00395         MOVAI   0x00
00C1   5600           00396         MOVRA   (___fsmul_fl1_1_22 + 3)
                      00397 ;;[ICODE] ../libsdcc/fsmul.c:74:        iTemp45 [k63 lr47:52 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00398 ;;[ICODE] ../libsdcc/fsmul.c:74:        iTemp47 [k66 lr48:49 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00399 ;;[ICODE] ../libsdcc/fsmul.c:74:        iTemp49 [k69 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp47 [k66 lr48:49 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00400 ;       .line   74; "../libsdcc/fsmul.c"        fl2.l = MANT (fl2.l);
00C2   5800           00401         MOVAR   (___fsmul_fl2_1_22 + 0)
00C3   5600           00402         MOVRA   r0x100A
00C4   5800           00403         MOVAR   (___fsmul_fl2_1_22 + 1)
00C5   5600           00404         MOVRA   r0x1009
00C6   5800           00405         MOVAR   (___fsmul_fl2_1_22 + 2)
00C7   5600           00406         MOVRA   r0x1008
00C8   5800           00407         MOVAR   (___fsmul_fl2_1_22 + 3)
00C9   5600           00408         MOVRA   r0x100F
                      00409 ;;[ICODE] ../libsdcc/fsmul.c:74:        iTemp50 [k70 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp49 [k69 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] & 0x7fffff {unsigned-long-int literal}
00CA   DE00           00410         BCLR    r0x1008,7
00CB   7600           00411         CLRR    r0x100F
                      00412 ;;[ICODE] ../libsdcc/fsmul.c:74:        iTemp51 [k71 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp50 [k70 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] | 0x800000 {unsigned-long-int literal}
00CC   CE00           00413         BSET    r0x1008,7
                      00414 ;;[ICODE] ../libsdcc/fsmul.c:74:        *(iTemp45 [k63 lr47:52 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := iTemp51 [k71 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ]
                      00415 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
00CD   5800           00416         MOVAR   r0x100A
00CE   5600           00417         MOVRA   (___fsmul_fl2_1_22 + 0)
                      00418 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
00CF   5800           00419         MOVAR   r0x1009
00D0   5600           00420         MOVRA   (___fsmul_fl2_1_22 + 1)
                      00421 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
00D1   5800           00422         MOVAR   r0x1008
00D2   5600           00423         MOVRA   (___fsmul_fl2_1_22 + 2)
                      00424 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
00D3   3C00           00425         MOVAI   0x00
00D4   5600           00426         MOVRA   (___fsmul_fl2_1_22 + 3)
                      00427 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp53 [k74 lr53:54 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00428 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp55 [k77 lr54:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp53 [k74 lr53:54 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00429 ;       .line   77; "../libsdcc/fsmul.c"        result = (fl1.l >> 8) * (fl2.l >> 8);
00D5   5800           00430         MOVAR   (___fsmul_fl1_1_22 + 0)
00D6   5600           00431         MOVRA   r0x100A
00D7   5800           00432         MOVAR   (___fsmul_fl1_1_22 + 1)
00D8   5600           00433         MOVRA   r0x100C
00D9   5600           00434         MOVRA   r0x1009
00DA   5800           00435         MOVAR   (___fsmul_fl1_1_22 + 2)
00DB   5600           00436         MOVRA   r0x1010
00DC   5600           00437         MOVRA   r0x1008
00DD   5800           00438         MOVAR   (___fsmul_fl1_1_22 + 3)
00DE   5600           00439         MOVRA   r0x1011
00DF   5600           00440         MOVRA   r0x100F
                      00441 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp56 [k78 lr55:60 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp55 [k77 lr54:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x8 {const-unsigned-char literal}
                      00442 ;;119   MOVAR   r0x1009
                      00443 ;;101   MOVAR   r0x1008
                      00444 ;;120   MOVAR   r0x100F
00E0   7600           00445         CLRR    r0x1012
                      00446 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp57 [k79 lr56:57 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00447 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp59 [k82 lr57:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp57 [k79 lr56:57 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
00E1   5800           00448         MOVAR   (___fsmul_fl2_1_22 + 0)
00E2   5600           00449         MOVRA   r0x100A
00E3   5800           00450         MOVAR   (___fsmul_fl2_1_22 + 1)
00E4   5600           00451         MOVRA   r0x1013
00E5   5600           00452         MOVRA   r0x1009
00E6   5800           00453         MOVAR   (___fsmul_fl2_1_22 + 2)
00E7   5600           00454         MOVRA   r0x1008
00E8   5800           00455         MOVAR   (___fsmul_fl2_1_22 + 3)
00E9   5600           00456         MOVRA   r0x1015
00EA   5600           00457         MOVRA   r0x100F
                      00458 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp60 [k83 lr58:60 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = iTemp59 [k82 lr57:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x8 {const-unsigned-char literal}
                      00459 ;;100   MOVAR   r0x1009
                      00460 ;;124   MOVAR   r0x1008
                      00461 ;;102   MOVAR   r0x100F
00EB   7600           00462         CLRR    r0x1016
                      00463 ;;[ICODE] ../libsdcc/fsmul.c:77:        send iTemp56 [k78 lr55:60 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ]{argreg = 1}
                      00464 ;;[ICODE] ../libsdcc/fsmul.c:77:        send iTemp60 [k83 lr58:60 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ]{argreg = 1}
                      00465 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = call __mullong [k141 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( long-int fixed, long-int fixed) fixed}
00EC   5800           00466         MOVAR   r0x1013
00ED   5600           00467         MOVRA   STK06
                      00468 ;;123   MOVAR   r0x1014
00EE   5800           00469         MOVAR   r0x1008
00EF   5600           00470         MOVRA   r0x1014
00F0   5600           00471         MOVRA   STK05
00F1   5800           00472         MOVAR   r0x1015
00F2   5600           00473         MOVRA   STK04
00F3   3C00           00474         MOVAI   0x00
00F4   5600           00475         MOVRA   STK03
00F5   5800           00476         MOVAR   r0x100C
00F6   5600           00477         MOVRA   STK02
00F7   5800           00478         MOVAR   r0x1010
00F8   5600           00479         MOVRA   STK01
00F9   5800           00480         MOVAR   r0x1011
00FA   5600           00481         MOVRA   STK00
00FB   3C00           00482         MOVAI   0x00
00FC   8000           00483         CALL    __mullong
00FD   5600           00484         MOVRA   r0x100F
00FE   5800           00485         MOVAR   STK00
00FF   5600           00486         MOVRA   r0x1008
0100   5800           00487         MOVAR   STK01
0101   5600           00488         MOVRA   r0x1009
0102   5800           00489         MOVAR   STK02
0103   5600           00490         MOVRA   r0x100A
                      00491 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp62 [k85 lr63:64 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00492 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp64 [k88 lr64:65 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = @[iTemp62 [k85 lr63:64 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00493 ;       .line   78; "../libsdcc/fsmul.c"        result += ((fl1.l & (unsigned long) 0xFF) * (fl2.l >> 8)) >> 8;
0104   5800           00494         MOVAR   (___fsmul_fl1_1_22 + 0)
0105   5600           00495         MOVRA   r0x100C
0106   5800           00496         MOVAR   (___fsmul_fl1_1_22 + 1)
0107   5600           00497         MOVRA   r0x1010
0108   5800           00498         MOVAR   (___fsmul_fl1_1_22 + 2)
0109   5600           00499         MOVRA   r0x1011
010A   5800           00500         MOVAR   (___fsmul_fl1_1_22 + 3)
010B   5600           00501         MOVRA   r0x1012
                      00502 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp65 [k89 lr65:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp64 [k88 lr64:65 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] & 0xff {unsigned-long-int literal}
010C   7600           00503         CLRR    r0x1010
010D   7600           00504         CLRR    r0x1011
010E   7600           00505         CLRR    r0x1012
                      00506 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp66 [k90 lr66:67 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00507 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp68 [k93 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = @[iTemp66 [k90 lr66:67 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
010F   5800           00508         MOVAR   (___fsmul_fl2_1_22 + 0)
0110   5600           00509         MOVRA   r0x1013
0111   5800           00510         MOVAR   (___fsmul_fl2_1_22 + 1)
0112   5600           00511         MOVRA   r0x1014
0113   5800           00512         MOVAR   (___fsmul_fl2_1_22 + 2)
0114   5600           00513         MOVRA   r0x1015
0115   5800           00514         MOVAR   (___fsmul_fl2_1_22 + 3)
0116   5600           00515         MOVRA   r0x1016
                      00516 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp69 [k94 lr68:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100F r0x1010 r0x1011 r0x1012 ] = iTemp68 [k93 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] >> 0x8 {const-unsigned-char literal}
                      00517 ;;114   MOVAR   r0x1014
                      00518 ;;116   MOVAR   r0x1015
                      00519 ;;118   MOVAR   r0x1016
0117   7600           00520         CLRR    r0x101A
                      00521 ;;[ICODE] ../libsdcc/fsmul.c:78:        send iTemp65 [k89 lr65:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ]{argreg = 1}
                      00522 ;;[ICODE] ../libsdcc/fsmul.c:78:        send iTemp69 [k94 lr68:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100F r0x1010 r0x1011 r0x1012 ]{argreg = 1}
                      00523 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp70 [k95 lr71:72 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = call __mullong [k141 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( long-int fixed, long-int fixed) fixed}
                      00524 ;;113   MOVAR   r0x1017
0118   5800           00525         MOVAR   r0x1014
0119   5600           00526         MOVRA   r0x1017
011A   5600           00527         MOVRA   STK06
                      00528 ;;115   MOVAR   r0x1018
011B   5800           00529         MOVAR   r0x1015
011C   5600           00530         MOVRA   r0x1018
011D   5600           00531         MOVRA   STK05
                      00532 ;;117   MOVAR   r0x1019
011E   5800           00533         MOVAR   r0x1016
011F   5600           00534         MOVRA   r0x1019
0120   5600           00535         MOVRA   STK04
0121   3C00           00536         MOVAI   0x00
0122   5600           00537         MOVRA   STK03
0123   5800           00538         MOVAR   r0x100C
0124   5600           00539         MOVRA   STK02
0125   3C00           00540         MOVAI   0x00
0126   5600           00541         MOVRA   STK01
0127   3C00           00542         MOVAI   0x00
0128   5600           00543         MOVRA   STK00
0129   3C00           00544         MOVAI   0x00
012A   8000           00545         CALL    __mullong
012B   5600           00546         MOVRA   r0x1015
012C   5600           00547         MOVRA   r0x1012
012D   5800           00548         MOVAR   STK00
012E   5600           00549         MOVRA   r0x1014
012F   5600           00550         MOVRA   r0x1011
0130   5800           00551         MOVAR   STK01
0131   5600           00552         MOVRA   r0x1010
0132   5800           00553         MOVAR   STK02
0133   5600           00554         MOVRA   r0x100C
                      00555 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp71 [k96 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = iTemp70 [k95 lr71:72 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] >> 0x8 {const-unsigned-char literal}
                      00556 ;;109   MOVAR   r0x1010
                      00557 ;;121   MOVAR   r0x1011
                      00558 ;;122   MOVAR   r0x1012
0134   7600           00559         CLRR    r0x1016
                      00560 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] + iTemp71 [k96 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ]
                      00561 ;;108   MOVAR   r0x1013
0135   5800           00562         MOVAR   r0x1010
0136   5600           00563         MOVRA   r0x1013
0137   7E00           00564         ADDRA   r0x100A
0138   5800           00565         MOVAR   r0x1014
0139   F1B7           00566         JBCLR   STATUS,0
013A   6000           00567         JZAR    r0x1014
013B   7E00           00568         ADDRA   r0x1009
013C   5800           00569         MOVAR   r0x1015
013D   F1B7           00570         JBCLR   STATUS,0
013E   6000           00571         JZAR    r0x1015
013F   7E00           00572         ADDRA   r0x1008
0140   5800           00573         MOVAR   r0x1016
0141   F1B7           00574         JBCLR   STATUS,0
0142   6000           00575         JZAR    r0x1016
0143   7E00           00576         ADDRA   r0x100F
                      00577 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp73 [k98 lr75:76 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00578 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp75 [k101 lr76:77 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = @[iTemp73 [k98 lr75:76 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00579 ;       .line   79; "../libsdcc/fsmul.c"        result += ((fl2.l & (unsigned long) 0xFF) * (fl1.l >> 8)) >> 8;
0144   5800           00580         MOVAR   (___fsmul_fl2_1_22 + 0)
0145   5600           00581         MOVRA   r0x100C
0146   5800           00582         MOVAR   (___fsmul_fl2_1_22 + 1)
0147   5600           00583         MOVRA   r0x1010
0148   5800           00584         MOVAR   (___fsmul_fl2_1_22 + 2)
0149   5600           00585         MOVRA   r0x1011
014A   5800           00586         MOVAR   (___fsmul_fl2_1_22 + 3)
014B   5600           00587         MOVRA   r0x1012
                      00588 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp76 [k102 lr77:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp75 [k101 lr76:77 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] & 0xff {unsigned-long-int literal}
014C   7600           00589         CLRR    r0x1010
014D   7600           00590         CLRR    r0x1011
014E   7600           00591         CLRR    r0x1012
                      00592 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp77 [k103 lr78:79 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00593 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp79 [k106 lr79:80 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = @[iTemp77 [k103 lr78:79 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
014F   5800           00594         MOVAR   (___fsmul_fl1_1_22 + 0)
0150   5600           00595         MOVRA   r0x1013
0151   5800           00596         MOVAR   (___fsmul_fl1_1_22 + 1)
0152   5600           00597         MOVRA   r0x1017
0153   5600           00598         MOVRA   r0x1014
0154   5800           00599         MOVAR   (___fsmul_fl1_1_22 + 2)
0155   5600           00600         MOVRA   r0x1018
0156   5600           00601         MOVRA   r0x1015
0157   5800           00602         MOVAR   (___fsmul_fl1_1_22 + 3)
0158   5600           00603         MOVRA   r0x1019
0159   5600           00604         MOVRA   r0x1016
                      00605 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp80 [k107 lr80:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100F r0x1010 r0x1011 r0x1012 ] = iTemp79 [k106 lr79:80 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] >> 0x8 {const-unsigned-char literal}
                      00606 ;;110   MOVAR   r0x1014
                      00607 ;;111   MOVAR   r0x1015
                      00608 ;;112   MOVAR   r0x1016
015A   7600           00609         CLRR    r0x101A
                      00610 ;;[ICODE] ../libsdcc/fsmul.c:79:        send iTemp76 [k102 lr77:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ]{argreg = 1}
                      00611 ;;[ICODE] ../libsdcc/fsmul.c:79:        send iTemp80 [k107 lr80:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100F r0x1010 r0x1011 r0x1012 ]{argreg = 1}
                      00612 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp81 [k108 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = call __mullong [k141 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( long-int fixed, long-int fixed) fixed}
015B   5800           00613         MOVAR   r0x1017
015C   5600           00614         MOVRA   STK06
015D   5800           00615         MOVAR   r0x1018
015E   5600           00616         MOVRA   STK05
015F   5800           00617         MOVAR   r0x1019
0160   5600           00618         MOVRA   STK04
0161   3C00           00619         MOVAI   0x00
0162   5600           00620         MOVRA   STK03
0163   5800           00621         MOVAR   r0x100C
0164   5600           00622         MOVRA   STK02
0165   3C00           00623         MOVAI   0x00
0166   5600           00624         MOVRA   STK01
0167   3C00           00625         MOVAI   0x00
0168   5600           00626         MOVRA   STK00
0169   3C00           00627         MOVAI   0x00
016A   8000           00628         CALL    __mullong
016B   5600           00629         MOVRA   r0x1015
016C   5600           00630         MOVRA   r0x1012
016D   5800           00631         MOVAR   STK00
016E   5600           00632         MOVRA   r0x1014
016F   5600           00633         MOVRA   r0x1011
0170   5800           00634         MOVAR   STK01
0171   5600           00635         MOVRA   r0x1013
0172   5600           00636         MOVRA   r0x1010
0173   5800           00637         MOVAR   STK02
0174   5600           00638         MOVRA   r0x100C
                      00639 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp82 [k109 lr84:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = iTemp81 [k108 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] >> 0x8 {const-unsigned-char literal}
                      00640 ;;105   MOVAR   r0x1010
                      00641 ;;106   MOVAR   r0x1011
                      00642 ;;107   MOVAR   r0x1012
0175   7600           00643         CLRR    r0x1016
                      00644 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] + iTemp82 [k109 lr84:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ]
0176   5800           00645         MOVAR   r0x1013
0177   7E00           00646         ADDRA   r0x100A
0178   5800           00647         MOVAR   r0x1014
0179   F1B7           00648         JBCLR   STATUS,0
017A   6000           00649         JZAR    r0x1014
017B   7E00           00650         ADDRA   r0x1009
017C   5800           00651         MOVAR   r0x1015
017D   F1B7           00652         JBCLR   STATUS,0
017E   6000           00653         JZAR    r0x1015
017F   7E00           00654         ADDRA   r0x1008
0180   5800           00655         MOVAR   r0x1016
0181   F1B7           00656         JBCLR   STATUS,0
0182   6000           00657         JZAR    r0x1016
0183   7E00           00658         ADDRA   r0x100F
                      00659 ;;[ICODE] ../libsdcc/fsmul.c:82:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] + 0x40 {unsigned-long-int literal}
                      00660 ;       .line   82; "../libsdcc/fsmul.c"        result += 0x40;
0184   3C40           00661         MOVAI   0x40
0185   7E00           00662         ADDRA   r0x100A
0186   F1B7           00663         JBCLR   STATUS,0
0187   6600           00664         INCR    r0x1009
0188   F5B7           00665         JBCLR   STATUS,2
0189   6600           00666         INCR    r0x1008
018A   F5B7           00667         JBCLR   STATUS,2
018B   6600           00668         INCR    r0x100F
                      00669 ;;[ICODE] ../libsdcc/fsmul.c:84:        iTemp85 [k112 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] & 0x80000000 {unsigned-long-int literal}
                      00670 ;       .line   84; "../libsdcc/fsmul.c"        if (result & SIGNBIT)
018C   EE00           00671         JBSET   r0x100F,7
018D   A000           00672         GOTO    _00109_DS_
                      00673 ;;[ICODE] ../libsdcc/fsmul.c:84:        if iTemp85 [k112 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} == 0 goto _iffalse_1($5)
                      00674 ;;[ICODE] ../libsdcc/fsmul.c:87:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] + 0x40 {unsigned-long-int literal}
                      00675 ;       .line   87; "../libsdcc/fsmul.c"        result += 0x40;
018E   3C40           00676         MOVAI   0x40
018F   7E00           00677         ADDRA   r0x100A
0190   F1B7           00678         JBCLR   STATUS,0
0191   6600           00679         INCR    r0x1009
0192   F5B7           00680         JBCLR   STATUS,2
0193   6600           00681         INCR    r0x1008
0194   F5B7           00682         JBCLR   STATUS,2
0195   6600           00683         INCR    r0x100F
                      00684 ;;[ICODE] ../libsdcc/fsmul.c:88:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x8 {const-unsigned-char literal}
                      00685 ;       .line   88; "../libsdcc/fsmul.c"        result >>= 8;
0196   5800           00686         MOVAR   r0x1009
0197   5600           00687         MOVRA   r0x100A
0198   5800           00688         MOVAR   r0x1008
0199   5600           00689         MOVRA   r0x1009
019A   5800           00690         MOVAR   r0x100F
019B   5600           00691         MOVRA   r0x1008
019C   7600           00692         CLRR    r0x100F
                      00693 ;;[ICODE] ../libsdcc/fsmul.c:88:         goto _ifend_1($6)
019D   A000           00694         GOTO    _00110_DS_
                      00695 ;;[ICODE] ../libsdcc/fsmul.c:88:  _iffalse_1($5) :
                      00696 ;;[ICODE] ../libsdcc/fsmul.c:92:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x7 {const-unsigned-char literal}
019E                  00697 _00109_DS_
                      00698 ;       .line   92; "../libsdcc/fsmul.c"        result >>= 7;
019E   5000           00699         RLAR    r0x100A
019F   5000           00700         RLAR    r0x1009
01A0   5600           00701         MOVRA   r0x100A
01A1   5000           00702         RLAR    r0x1008
01A2   5600           00703         MOVRA   r0x1009
01A3   5000           00704         RLAR    r0x100F
01A4   5600           00705         MOVRA   r0x1008
01A5   7600           00706         CLRR    r0x100F
01A6   5200           00707         RLR     r0x100F
                      00708 ;;[ICODE] ../libsdcc/fsmul.c:93:        iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] = iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] - 0x1 {const-unsigned-char literal}
                      00709 ;       .line   93; "../libsdcc/fsmul.c"        exp--;
01A7   3CFF           00710         MOVAI   0xff
01A8   7E00           00711         ADDRA   r0x100E
01A9   E1B7           00712         JBSET   STATUS,0
01AA   6E00           00713         DECR    r0x100D
                      00714 ;;[ICODE] ../libsdcc/fsmul.c:93:  _ifend_1($6) :
                      00715 ;;[ICODE] ../libsdcc/fsmul.c:96:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] & 0xff7fffff {unsigned-long-int literal}
01AB                  00716 _00110_DS_
                      00717 ;       .line   96; "../libsdcc/fsmul.c"        result &= ~HIDDEN;
01AB   DE00           00718         BCLR    r0x1008,7
                      00719 ;;[ICODE] ../libsdcc/fsmul.c:99:        iTemp92 [k119 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] < 0x100 {const-int literal}
                      00720 ;;signed compare: left < lit(0x100=256), size=2, mask=ffff
                      00721 ;       .line   99; "../libsdcc/fsmul.c"        if (exp >= 0x100)
01AC   5800           00722         MOVAR   r0x100D
01AD   3F80           00723         ADDAI   0x80
01AE   3F7F           00724         ADDAI   0x7f
01AF   E5B7           00725         JBSET   STATUS,2
01B0   A000           00726         GOTO    _00135_DS_
01B1   3C00           00727         MOVAI   0x00
01B2   4800           00728         RSUBAR  r0x100E
01B3                  00729 _00135_DS_
01B3   E1B7           00730         JBSET   STATUS,0
01B4   A000           00731         GOTO    _00115_DS_
                      00732 ;;genSkipc:3246: created from rifx:0xbff354f0
                      00733 ;;[ICODE] ../libsdcc/fsmul.c:99:        if iTemp92 [k119 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_3($11)
                      00734 ;;[ICODE] ../libsdcc/fsmul.c:100:       iTemp93 [k120 lr106:114 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00735 ;;[ICODE] ../libsdcc/fsmul.c:100:       if iTemp12 [k22 lr24:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ ___fsmul_sign_1_22}[r0x1000 ] == 0 goto iTempLbl0($15)
                      00736 ;       .line   100; "../libsdcc/fsmul.c"       fl1.l = (sign ? SIGNBIT : 0) | 0x7F800000;
01B5   3C00           00737         MOVAI   0x00
01B6   5C00           00738         ORAR    r0x100B
01B7   F5B7           00739         JBCLR   STATUS,2
01B8   A000           00740         GOTO    _00119_DS_
                      00741 ;;[ICODE] ../libsdcc/fsmul.c:100:       iTemp95 [k123 lr108:113 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] := 0x80000000 {unsigned-long-int literal}
01B9   7600           00742         CLRR    r0x100C
01BA   7600           00743         CLRR    r0x1010
01BB   7600           00744         CLRR    r0x1011
01BC   3C80           00745         MOVAI   0x80
01BD   5600           00746         MOVRA   r0x1012
                      00747 ;;[ICODE] ../libsdcc/fsmul.c:100:        goto iTempLbl1($16)
01BE   A000           00748         GOTO    _00120_DS_
                      00749 ;;[ICODE] ../libsdcc/fsmul.c:100:  iTempLbl0($15) :
                      00750 ;;[ICODE] ../libsdcc/fsmul.c:100:       iTemp95 [k123 lr108:113 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] := 0x0 {unsigned-long-int literal}
01BF                  00751 _00119_DS_
01BF   7600           00752         CLRR    r0x100C
01C0   7600           00753         CLRR    r0x1010
01C1   7600           00754         CLRR    r0x1011
01C2   7600           00755         CLRR    r0x1012
                      00756 ;;[ICODE] ../libsdcc/fsmul.c:100:  iTempLbl1($16) :
                      00757 ;;[ICODE] ../libsdcc/fsmul.c:100:       iTemp96 [k124 lr113:114 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp95 [k123 lr108:113 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] | 0x7f800000 {unsigned-long-int literal}
01C3                  00758 _00120_DS_
01C3   CE00           00759         BSET    r0x1011,7
01C4   3C7F           00760         MOVAI   0x7f
01C5   5E00           00761         ORRA    r0x1012
                      00762 ;;[ICODE] ../libsdcc/fsmul.c:100:       *(iTemp93 [k120 lr106:114 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := iTemp96 [k124 lr113:114 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ]
                      00763 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
01C6   5800           00764         MOVAR   r0x100C
01C7   5600           00765         MOVRA   (___fsmul_fl1_1_22 + 0)
                      00766 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
01C8   5800           00767         MOVAR   r0x1010
01C9   5600           00768         MOVRA   (___fsmul_fl1_1_22 + 1)
                      00769 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
01CA   5800           00770         MOVAR   r0x1011
01CB   5600           00771         MOVRA   (___fsmul_fl1_1_22 + 2)
                      00772 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
01CC   5800           00773         MOVAR   r0x1012
01CD   5600           00774         MOVRA   (___fsmul_fl1_1_22 + 3)
                      00775 ;;[ICODE] ../libsdcc/fsmul.c:100:        goto _ifend_3($12)
01CE   A000           00776         GOTO    _00116_DS_
                      00777 ;;[ICODE] ../libsdcc/fsmul.c:100:  _iffalse_3($11) :
                      00778 ;;[ICODE] ../libsdcc/fsmul.c:101:       iTemp97 [k125 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] < 0x0 {int literal}
                      00779 ;;signed compare: left < lit(0x0=0), size=2, mask=ffff
01CF                  00780 _00115_DS_
                      00781 ;       .line   101; "../libsdcc/fsmul.c"       else if (exp < 0)
01CF   C1B7           00782         BSET    STATUS,0
01D0   EE00           00783         JBSET   r0x100D,7
01D1   D1B7           00784         BCLR    STATUS,0
01D2   E1B7           00785         JBSET   STATUS,0
01D3   A000           00786         GOTO    _00112_DS_
                      00787 ;;genSkipc:3246: created from rifx:0xbff354f0
                      00788 ;;[ICODE] ../libsdcc/fsmul.c:101:       if iTemp97 [k125 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($8)
                      00789 ;;[ICODE] ../libsdcc/fsmul.c:102:       iTemp98 [k126 lr119:120 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00790 ;;[ICODE] ../libsdcc/fsmul.c:102:       *(iTemp98 [k126 lr119:120 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := 0x0 {volatile-unsigned-long-int literal}
                      00791 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
                      00792 ;       .line   102; "../libsdcc/fsmul.c"       fl1.l = 0;
01D4   7600           00793         CLRR    (___fsmul_fl1_1_22 + 0)
                      00794 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
01D5   7600           00795         CLRR    (___fsmul_fl1_1_22 + 1)
                      00796 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
01D6   7600           00797         CLRR    (___fsmul_fl1_1_22 + 2)
                      00798 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
01D7   7600           00799         CLRR    (___fsmul_fl1_1_22 + 3)
                      00800 ;;[ICODE] ../libsdcc/fsmul.c:102:        goto _ifend_3($12)
01D8   A000           00801         GOTO    _00116_DS_
                      00802 ;;[ICODE] ../libsdcc/fsmul.c:102:  _iffalse_2($8) :
                      00803 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp100 [k129 lr123:134 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00804 ;;[ICODE] ../libsdcc/fsmul.c:104:       if iTemp12 [k22 lr24:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ ___fsmul_sign_1_22}[r0x1000 ] == 0 goto iTempLbl2($17)
01D9                  00805 _00112_DS_
                      00806 ;       .line   104; "../libsdcc/fsmul.c"       fl1.l = PACK (sign ? SIGNBIT : 0 , exp, result);
01D9   3C00           00807         MOVAI   0x00
01DA   5C00           00808         ORAR    r0x100B
01DB   F5B7           00809         JBCLR   STATUS,2
01DC   A000           00810         GOTO    _00121_DS_
                      00811 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp102 [k132 lr125:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1007 r0x1008 r0x1009 ] := 0x80000000 {unsigned-long-int literal}
01DD   7600           00812         CLRR    r0x100B
01DE   7600           00813         CLRR    r0x100C
01DF   7600           00814         CLRR    r0x1010
01E0   3C80           00815         MOVAI   0x80
01E1   5600           00816         MOVRA   r0x1011
                      00817 ;;[ICODE] ../libsdcc/fsmul.c:104:        goto iTempLbl3($18)
01E2   A000           00818         GOTO    _00122_DS_
                      00819 ;;[ICODE] ../libsdcc/fsmul.c:104:  iTempLbl2($17) :
                      00820 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp102 [k132 lr125:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1007 r0x1008 r0x1009 ] := 0x0 {unsigned-long-int literal}
01E3                  00821 _00121_DS_
01E3   7600           00822         CLRR    r0x100B
01E4   7600           00823         CLRR    r0x100C
01E5   7600           00824         CLRR    r0x1010
01E6   7600           00825         CLRR    r0x1011
                      00826 ;;[ICODE] ../libsdcc/fsmul.c:104:  iTempLbl3($18) :
                      00827 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp103 [k133 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x100A r0x100B r0x100C r0x100D ] = (unsigned-long-int fixed)iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ]
01E7                  00828 _00122_DS_
01E7   5800           00829         MOVAR   r0x100E
01E8   5600           00830         MOVRA   r0x1012
01E9   5800           00831         MOVAR   r0x100D
01EA   5600           00832         MOVRA   r0x1013
01EB   3C00           00833         MOVAI   0x00
01EC   FE00           00834         JBCLR   r0x1013,7
01ED   3CFF           00835         MOVAI   0xff
01EE   5600           00836         MOVRA   r0x1015
01EF   5600           00837         MOVRA   r0x1014
                      00838 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp104 [k134 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1005 r0x1006 r0x100E r0x100F ] = iTemp103 [k133 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x100A r0x100B r0x100C r0x100D ] << 0x17 {const-unsigned-char literal}
01F0   4C00           00839         RRAR    r0x1013
01F1   4C00           00840         RRAR    r0x1012
01F2   5600           00841         MOVRA   r0x1017
01F3   7600           00842         CLRR    r0x1016
01F4   4E00           00843         RRR     r0x1016
01F5   7600           00844         CLRR    r0x100D
01F6   7600           00845         CLRR    r0x100E
                      00846 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp105 [k135 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1007 r0x1008 r0x1009 ] = iTemp102 [k132 lr125:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1007 r0x1008 r0x1009 ] | iTemp104 [k134 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1005 r0x1006 r0x100E r0x100F ]
01F7   3C00           00847         MOVAI   0x00
01F8   5E00           00848         ORRA    r0x100B
01F9   3C00           00849         MOVAI   0x00
01FA   5E00           00850         ORRA    r0x100C
01FB   5800           00851         MOVAR   r0x1016
01FC   5E00           00852         ORRA    r0x1010
01FD   5800           00853         MOVAR   r0x1017
01FE   5E00           00854         ORRA    r0x1011
                      00855 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp106 [k136 lr133:134 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp105 [k135 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1007 r0x1008 r0x1009 ] | iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ]
01FF   5800           00856         MOVAR   r0x100B
0200   5E00           00857         ORRA    r0x100A
0201   5800           00858         MOVAR   r0x100C
0202   5E00           00859         ORRA    r0x1009
0203   5800           00860         MOVAR   r0x1010
0204   5E00           00861         ORRA    r0x1008
0205   5800           00862         MOVAR   r0x1011
0206   5E00           00863         ORRA    r0x100F
                      00864 ;;[ICODE] ../libsdcc/fsmul.c:104:       *(iTemp100 [k129 lr123:134 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := iTemp106 [k136 lr133:134 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ]
                      00865 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
0207   5800           00866         MOVAR   r0x100A
0208   5600           00867         MOVRA   (___fsmul_fl1_1_22 + 0)
                      00868 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
0209   5800           00869         MOVAR   r0x1009
020A   5600           00870         MOVRA   (___fsmul_fl1_1_22 + 1)
                      00871 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
020B   5800           00872         MOVAR   r0x1008
020C   5600           00873         MOVRA   (___fsmul_fl1_1_22 + 2)
                      00874 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
020D   5800           00875         MOVAR   r0x100F
020E   5600           00876         MOVRA   (___fsmul_fl1_1_22 + 3)
                      00877 ;;[ICODE] ../libsdcc/fsmul.c:104:  _ifend_3($12) :
                      00878 ;;[ICODE] ../libsdcc/fsmul.c:105:       iTemp107 [k137 lr136:137 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00879 ;;[ICODE] ../libsdcc/fsmul.c:105:       iTemp109 [k140 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp107 [k137 lr136:137 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
020F                  00880 _00116_DS_
                      00881 ;       .line   105; "../libsdcc/fsmul.c"       return (fl1.f);
020F   5800           00882         MOVAR   (___fsmul_fl1_1_22 + 0)
0210   5600           00883         MOVRA   r0x100B
0211   5800           00884         MOVAR   (___fsmul_fl1_1_22 + 1)
0212   5600           00885         MOVRA   r0x100A
0213   5800           00886         MOVAR   (___fsmul_fl1_1_22 + 2)
0214   5600           00887         MOVRA   r0x1009
0215   5800           00888         MOVAR   (___fsmul_fl1_1_22 + 3)
0216   5600           00889         MOVRA   r0x1008
                      00890 ;;[ICODE] ../libsdcc/fsmul.c:105:       ret iTemp109 [k140 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0217   5800           00891         MOVAR   r0x100B
0218   5600           00892         MOVRA   STK02
0219   5800           00893         MOVAR   r0x100A
021A   5600           00894         MOVRA   STK01
021B   5800           00895         MOVAR   r0x1009
021C   5600           00896         MOVRA   STK00
021D   5800           00897         MOVAR   r0x1008
                      00898 ;;[ICODE] ../libsdcc/fsmul.c:105:  _return($13) :
                      00899 ;;[ICODE] ../libsdcc/fsmul.c:105:       eproc ___fsmul [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
021E                  00900 _00117_DS_
021E   000C           00901         RETURN  
                      00902 ; exit point of ___fsmul
                      00903 
                      00904 
                      00905 ;       code size estimation:
                      00906 ;         543+    0 =   543 instructions ( 1086 byte)
                      00907 
                      00908         end
gpasm-1.7.0_beta1 (Nov 23 2015)fsmul.asm          2015-11-26  01:02:18         PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

DKW0                              000001E6
DKW1                              000001E7
DKWP1                             000001CE
DKWP2                             000001D6
FSR0                              000001B4
FSR1                              000001B5
HIBYTE                            000001B3
INDF0                             000001B0
INDF1                             000001B1
INDF2                             000001B2
INDF3                             000001B9
INTE0                             000001BA
INTF0                             000001BB
IOP1                              000001C8
IOP2                              000001D0
LVDCR                             000001BD
MCR                               000001B8
MTPADH                            000001C0
MTPADL                            000001C1
MTPCTR                            000001C4
MTPDB                             000001C2
MTPMD                             000001C3
OEP1                              000001C9
OEP2                              000001D1
OPCR0                             000001E4
OPCR1                             000001E5
OSCM                              000001BC
PCL                               000001B6
PFLAG                             000001B7
PUP1                              000001CA
PUP2                              000001D2
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
T0CR                              000001D8
T0LATFH                           000001DD
T0LATFL                           000001DE
T0LATRH                           000001DB
T0LATRL                           000001DC
T0LOADH                           000001D9
T0LOADL                           000001DA
T1CR                              000001E0
T1DATA                            000001E1
T1LOAD                            000001E2
_00105_DS_                        00000039
_00106_DS_                        00000041
_00109_DS_                        0000019E
_00110_DS_                        000001AB
_00112_DS_                        000001D9
_00115_DS_                        000001CF
_00116_DS_                        0000020F
_00117_DS_                        0000021E
_00119_DS_                        000001BF
_00120_DS_                        000001C3
_00121_DS_                        000001E3
_00122_DS_                        000001E7
_00135_DS_                        000001B3
__32P5222                         00000001
___fs2schar                       00000000
___fs2sint                        00000000
___fs2slong                       00000000
___fs2uchar                       00000000
___fs2uint                        00000000
___fs2ulong                       00000000
___fsadd                          00000000
___fsdiv                          00000000
___fseq                           00000000
___fsgt                           00000000
___fslt                           00000000
___fsmul                          00000000
___fsmul_fl1_1_22                 00000013
___fsmul_fl2_1_22                 00000017
___fsneq                          00000000
___fssub                          00000000
___schar2fs                       00000000
___sint2fs                        00000000
___slong2fs                       00000000
___uchar2fs                       00000000
___uint2fs                        00000000
___ulong2fs                       00000000
__mullong                         00000000
r0x1008                           00000003
r0x1009                           00000002
r0x100A                           00000001
r0x100B                           00000000
r0x100C                           00000007
r0x100D                           00000006
r0x100E                           00000005
r0x100F                           00000004
r0x1010                           00000008
r0x1011                           00000009
r0x1012                           0000000A
r0x1013                           0000000B
r0x1014                           0000000C
r0x1015                           0000000D
r0x1016                           0000000E
r0x1017                           0000000F
r0x1018                           00000010
r0x1019                           00000011
r0x101A                           00000012
BYTERD                            MTPMD,0
BYTEWR                            MTPMD,1
C                                 PFLAG,0
CHIPERS                           MTPMD,4
CLKS                              OSCM,2
CSEL0                             OPCR1,0
CSEL1                             OPCR1,1
DC                                PFLAG,1
DKWE                              DKW0,7
FSEL0                             OPCR1,2
FSEL1                             OPCR1,3
FSR                               FSR0
FSR00                             FSR0,0          /* bit 0 */
FSR01                             FSR0,1          /* bit 1 */
FSR02                             FSR0,2          /* bit 2 */
FSR03                             FSR0,3          /* bit 3 */
FSR04                             FSR0,4          /* bit 4 */
FSR05                             FSR0,5          /* bit 5 */
FSR06                             FSR0,6          /* bit 6 */
FSR07                             FSR0,7          /* bit 7 */
FSR10                             FSR1,0          /* bit 0 */
FSR11                             FSR1,1          /* bit 1 */
FSR12                             FSR1,2          /* bit 2 */
FSR13                             FSR1,3          /* bit 3 */
FSR14                             FSR1,4          /* bit 4 */
FSR15                             FSR1,5          /* bit 5 */
FSR16                             FSR1,6          /* bit 6 */
FSR17                             FSR1,7          /* bit 7 */
GIE                               MCR,7
HFEN                              OSCM,0
HIBYTE0                           HIBYTE,0         /* bit 0 */
HIBYTE1                           HIBYTE,1         /* bit 1 */
HIBYTE2                           HIBYTE,2         /* bit 2 */
HIBYTE3                           HIBYTE,3         /* bit 3 */
HIBYTE4                           HIBYTE,4         /* bit 4 */
HIBYTE5                           HIBYTE,5         /* bit 5 */
HIBYTE6                           HIBYTE,6         /* bit 6 */
HIBYTE7                           HIBYTE,7         /* bit 7 */
INDF                              INDF0
INDF00                            INDF0,0          /* bit 0 */
INDF01                            INDF0,1        	/* bit 1 */
INDF02                            INDF0,2          /* bit 2 */
INDF03                            INDF0,3        	/* bit 3 */
INDF04                            INDF0,4        	/* bit 4 */
INDF05                            INDF0,5        	/* bit 5 */
INDF06                            INDF0,6        	/* bit 6 */
INDF07                            INDF0,7        	/* bit 7 */
INDF10                            INDF1,0          /* bit 0 */
INDF11                            INDF1,1          /* bit 1 */
INDF12                            INDF1,2          /* bit 2 */
INDF13                            INDF1,3          /* bit 3 */
INDF14                            INDF1,4          /* bit 4 */
INDF15                            INDF1,5          /* bit 5 */
INDF16                            INDF1,6          /* bit 6 */
INDF17                            INDF1,7          /* bit 7 */
INDF20                            INDF2,0          /* bit 0 */
INDF21                            INDF2,1          /* bit 1 */
INDF22                            INDF2,2          /* bit 2 */
INDF23                            INDF2,3          /* bit 3 */
INDF24                            INDF2,4          /* bit 4 */
INDF25                            INDF2,5          /* bit 5 */
INDF26                            INDF2,6          /* bit 6 */
INDF27                            INDF2,7          /* bit 7 */
INDF30                            INDF3,0
INDF31                            INDF3,1
INDF32                            INDF3,2
INDF33                            INDF3,3
INDF34                            INDF3,4
INDF35                            INDF3,5
INDF36                            INDF3,6
INDF37                            INDF3,7
INT0IE                            INTE,2
INT0IF                            INTF,2
INT1IE                            INTE,3
INT1IF                            INTF,3
INTE                              INTE0
INTECON                           INTE
INTF                              INTF0
INTFLAG                           INTF
IRES0                             DKW1,4
IRES1                             DKW1,5
IRIN                              OPCR1,7
IROS                              DKW0,6
IROT                              DKW0,5
LFEN                              OSCM,1
LSEL00                            DKW1,0
LSEL01                            DKW1,1
LSEL10                            DKW1,2
LSEL11                            DKW1,3
LVDEN                             LVDCR,7
LVDF                              LVDCR,0
LVDIE                             INTE,5
LVDIF                             INTF,5
LVDS                              LVDCR,3
MINT00                            MCR,0
MINT01                            MCR,1
MINT10                            MCR,2
MINT11                            MCR,3
MTPAD0                            MTPADL,0
MTPAD1                            MTPADL,1
MTPAD2                            MTPADL,2
MTPAD3                            MTPADL,3
MTPAD4                            MTPADH,0
MTPAD5                            MTPADH,1
MTPAD6                            MTPADH,2
MTPAD7                            MTPADH,3
MTPAD8                            MTPADH,4
MTPAD9                            MTPADH,5
MTPBUSY                           MTPCTR,7
MTPDB0                            MTPDB,0
MTPDB1                            MTPDB,1
MTPDB2                            MTPDB,2
MTPDB3                            MTPDB,3
MTPDB4                            MTPDB,4
MTPDB5                            MTPDB,5
MTPDB6                            MTPDB,6
MTPDB7                            MTPDB,7
MTPEN                             MTPMD,7
MTPIE                             INTE,7
MTPIF                             INTF,7
MTPLD                             MTPCTR,2
MTPRD                             MTPCTR,0
MTPTOUT                           MTPCTR,6
MTPWR                             MTPCTR,1
OPAE                              OPCR0,7
OPAM                              OPCR0,6
OPFC0                             OPCR0,0
OPFC1                             OPCR0,1
OPFC2                             OPCR0,2
OPFC3                             OPCR0,3
OPFC4                             OPCR0,4
OPFC5                             OPCR0,5
P10D                              IOP1,0
P10DKW                            DKWP1,0
P10OE                             OEP1,0
P10PU                             PUP1,0
P11D                              IOP1,1
P11DKW                            DKWP1,1
P11OE                             OEP1,1
P11PU                             PUP1,1
P12D                              IOP1,2
P12DKW                            DKWP1,2
P12OE                             OEP1,2
P12PU                             PUP1,2
P13D                              IOP1,3
P13DKW                            DKWP1,3
P13OE                             OEP1,3
P13PU                             PUP1,3
P14D                              IOP1,4
P14DKW                            DKWP1,4
P14OE                             OEP1,4
P14PU                             PUP1,4
P15D                              IOP1,5
P15DKW                            DKWP1,5
P15OE                             OEP1,5
P15PU                             PUP1,5
P16D                              IOP1,6
P16DKW                            DKWP1,6
P16OE                             OEP1,6
P16PU                             PUP1,6
P17D                              IOP1,7
P17OE                             OEP1,7
P21D                              IOP2,1
P21DKW                            DKWP2,1
P21OE                             OEP2,1
P21PU                             PUP2,1
P22D                              IOP2,2
P22DKW                            DKWP2,2
P22OE                             OEP2,2
P22PU                             PUP2,2
P24D                              IOP2,4
P24DKW                            DKWP2,4
P24OE                             OEP2,4
P24PU                             PUP2,4
P25D                              IOP2,5
P25DKW                            DKWP2,5
P25OE                             OEP2,5
P25PU                             PUP2,5
P26D                              IOP2,6
P26DKW                            DKWP2,6
P26OE                             OEP2,6
P26PU                             PUP2,6
P27D                              IOP2,7
P27DKW                            DKWP2,7
P27OE                             OEP2,7
P27PU                             PUP2,7
PAGEERS                           MTPMD,3
PAGEWR                            MTPMD,2
PC0                               PCL,0          /* bit 0 */
PC1                               PCL,1          /* bit 1 */
PC2                               PCL,2          /* bit 2 */
PC3                               PCL,3          /* bit 3 */
PC4                               PCL,4          /* bit 4 */
PC5                               PCL,5          /* bit 5 */
PC6                               PCL,6          /* bit 6 */
PC7                               PCL,7          /* bit 7 */
PD                                MCR,4
RSEL                              DKW0,2
STATUS                            PFLAG
STBH                              OSCM,4
STBL                              OSCM,5
T0IE                              INTE,0
T0IF                              INTF,0
T0LATFH0                          T0LATFH,0
T0LATFH1                          T0LATFH,1
T0LATFH2                          T0LATFH,2
T0LATFH3                          T0LATFH,3
T0LATFH4                          T0LATFH,4
T0LATFH5                          T0LATFH,5
T0LATFH6                          T0LATFH,6
T0LATFH7                          T0LATFH,7
T0LATFL0                          T0LATFL,0
T0LATFL1                          T0LATFL,1
T0LATFL2                          T0LATFL,2
T0LATFL3                          T0LATFL,3
T0LATFL4                          T0LATFL,4
T0LATFL5                          T0LATFL,5
T0LATFL6                          T0LATFL,6
T0LATFL7                          T0LATFL,7
T0LATRH0                          T0LOADH,0
T0LATRH1                          T0LOADH,1
T0LATRH2                          T0LOADH,2
T0LATRH3                          T0LOADH,3
T0LATRH4                          T0LOADH,4
T0LATRH5                          T0LOADH,5
T0LATRH6                          T0LOADH,6
T0LATRH7                          T0LOADH,7
T0LATRL0                          T0LATRL,0
T0LATRL1                          T0LATRL,1
T0LATRL2                          T0LATRL,2
T0LATRL3                          T0LATRL,3
T0LATRL4                          T0LATRL,4
T0LATRL5                          T0LATRL,5
T0LATRL6                          T0LATRL,6
T0LATRL7                          T0LATRL,7
T0LOADH0                          T0LOADH,0
T0LOADH1                          T0LOADH,1
T0LOADH2                          T0LOADH,2
T0LOADH3                          T0LOADH,3
T0LOADH4                          T0LOADH,4
T0LOADH5                          T0LOADH,5
T0LOADH6                          T0LOADH,6
T0LOADH7                          T0LOADH,7
T0LOADL0                          T0LOADL,0
T0LOADL1                          T0LOADL,1
T0LOADL2                          T0LOADL,2
T0LOADL3                          T0LOADL,3
T0LOADL4                          T0LOADL,4
T0LOADL5                          T0LOADL,5
T0LOADL6                          T0LOADL,6
T0LOADL7                          T0LOADL,7
T0MOD0                            T0CR,5
T0MOD1                            T0CR,6
T0PR0                             T0CR,0
T0PR1                             T0CR,1
T0PR2                             T0CR,2
T0PS0                             T0CR,3
T0PS1                             T0CR,4
T0RF                              INTF,6
T1DATA0                           T1DATA,0
T1DATA1                           T1DATA,1
T1DATA2                           T1DATA,2
T1DATA3                           T1DATA,3
T1DATA4                           T1DATA,4
T1DATA5                           T1DATA,5
T1DATA6                           T1DATA,6
T1DATA7                           T1DATA,7
T1IE                              INTE,1
T1IF                              INTF,1
T1LOAD0                           T1LOAD,0
T1LOAD1                           T1LOAD,1
T1LOAD2                           T1LOAD,2
T1LOAD3                           T1LOAD,3
T1LOAD4                           T1LOAD,4
T1LOAD5                           T1LOAD,5
T1LOAD6                           T1LOAD,6
T1LOAD7                           T1LOAD,7
T1MOD0                            T1CR,5
T1MOD1                            T1CR,6
T1PR0                             T1CR,0
T1PR1                             T1CR,1
T1PR2                             T1CR,2
T1PS0                             T1CR,3
T1PS1                             T1CR,4
TC0EN                             T0CR,7
TC1EN                             T1CR,7
TO                                MCR,5
VSEL                              OPCR1,6
WSEL0                             DKW0,4
WSEL1                             DKW0,3
Z                                 PFLAG,2

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

