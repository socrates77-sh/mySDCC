gpasm-1.7.0_beta1 (Nov 23 2015)fsdiv.asm          2015-11-30  22:56:07         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : ANSI-C Compiler
                      00003 ; Version 0.0.4 (Nov 23 2015) (Linux)
                      00004 ; This file was generated Mon Nov 30 22:56:07 2015
                      00005 ;--------------------------------------------------------
                      00006 ; MC3X port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc/fsdiv.c"
                      00009         list    p=8132
                      00010         radix dec
                      00011         include "8132.inc"
                      00001 
                      00002   ;processor mc32t8132
                      00003 
  000001A0            00004 INDF       equ   0x1a0
  000001A0            00005 INDF0      equ   0x1a0
  000001A1            00006 INDF1      equ   0x1a1
  000001A2            00007 INDF2      equ   0x1a2
  000001A3            00008 HIBYTE     equ   0x1a3
  000001A4            00009 FSR        equ   0x1a4
  000001A4            00010 FSR0       equ   0x1a4
  000001A5            00011 FSR1       equ   0x1a5
  000001A6            00012 PCL        equ   0x1a6
  000001A7            00013 STATUS     equ   0x1a7
  000001A7            00014 PFLAG      equ   0x1a7
  000001A8            00015 MCR        equ   0x1a8
  000001A9            00016 INDF3      equ   0x1a9
  000001AA            00017 INTE         equ   0x1aa
  000001AB            00018 INTF         equ   0x1ab
  000001AC            00019 OSCM       equ   0x1ac
  000001AD            00020 CLKO       equ   0x1ad
                      00021 
  000001B0            00022 IOP0       equ   0x1b0
  000001B1            00023 OEP0       equ   0x1b1
  000001B2            00024 PUP0       equ   0x1b2
  000001B3            00025 PDP0       equ   0x1b3
  000001B4            00026 IOP1       equ   0x1b4
  000001B5            00027 OEP1       equ   0x1b5
  000001B6            00028 PUP1       equ   0x1b6
  000001B7            00029 PDP1       equ   0x1b7
  000001B8            00030 IOP2       equ   0x1b8
  000001B9            00031 OEP2       equ   0x1b9
  000001BA            00032 PUP2       equ   0x1ba
  000001BB            00033 PDP2       equ   0x1bb
  000001BC            00034 IOP3       equ   0x1bc
  000001BD            00035 OEP3       equ   0x1bd
  000001BE            00036 PUP3       equ   0x1be
  000001BF            00037 PDP3       equ   0x1bf
                      00038 
  000001C0            00039 T0CR       equ   0x1c0
  000001C1            00040 T0CNT      equ   0x1c1  
  000001C2            00041 T0LOAD     equ   0x1c2
  000001C3            00042 T0DATA     equ   0x1c3 
  000001C4            00043 T1CR       equ   0x1c4
  000001C5            00044 T1CNT      equ   0x1c5  
  000001C6            00045 T1LOAD     equ   0x1c6
  000001C7            00046 T1DATA     equ   0x1c7
  000001C8            00047 T2CR       equ   0x1c8
  000001C9            00048 T2CNTH     equ   0x1c9  
  000001CA            00049 T2CNTL     equ   0x1ca  
  000001CB            00050 T2LOADH    equ   0x1cb
  000001CC            00051 T2LOADL    equ   0x1cc
                      00052 
  000001D0            00053 TK0CR0     equ   0x1d0
  000001D1            00054 TK0CR1     equ   0x1d1
  000001D2            00055 TK0CR2     equ   0x1d2
  000001D3            00056 TK0CNTH    equ   0x1d3
  000001D4            00057 TK0CNTL    equ   0x1d4
  000001D8            00058 TK1CR0     equ   0x1d8
  000001D9            00059 TK1CR1     equ   0x1d9
  000001DA            00060 TK1CR2     equ   0x1da
  000001DB            00061 TK1CNTH    equ   0x1db
  000001DC            00062 TK1CNTL    equ   0x1dc
                      00063 
  000001E0            00064 ADCR0      equ   0x1e0
  000001E1            00065 ADCR1      equ   0x1e1
  000001E2            00066 ADCR2      equ   0x1e2
  000001E3            00067 ADIO0      equ   0x1e3
  000001E4            00068 ADIO1      equ   0x1e4
  000001E5            00069 ADRH       equ   0x1e5  
  000001E6            00070 ADRL       equ   0x1e6
                      00071 
  000001E8            00072 LEDDS1     equ   0x1e8
  000001E9            00073 LEDDS2     equ   0x1e9
  000001EA            00074 LEDDS3     equ   0x1ea
  000001EB            00075 LEDDS4     equ   0x1eb
  000001EC            00076 LEDDS5     equ   0x1ec
  000001ED            00077 LEDDS6     equ   0x1ed
  000001EE            00078 LEDDS7     equ   0x1ee
  000001EF            00079 LEDDS8     equ   0x1ef
  000001F0            00080 LEDCR0     equ   0x1f0
  000001F1            00081 LEDCR1     equ   0x1f1
  000001F2            00082 LEDIOS0    equ   0x1f2
  000001F3            00083 LEDIOS1    equ   0x1f3
  000001F4            00084 LEDDRV     equ   0x1f4 
                      00085 
                      00086 
                      00087 ; ----- INDF0 Bits --------------------------------------------
                      00088 #define INDF00           INDF0,0          /* bit 0 */
                      00089 #define INDF01           INDF0,1                 /* bit 1 */
                      00090 #define INDF02           INDF0,2          /* bit 2 */
                      00091 #define INDF03           INDF0,3                 /* bit 3 */
                      00092 #define INDF04           INDF0,4                 /* bit 4 */
                      00093 #define INDF05           INDF0,5                 /* bit 5 */
                      00094 #define INDF06           INDF0,6                 /* bit 6 */
                      00095 #define INDF07           INDF0,7                 /* bit 7 */
                      00096 
                      00097 ; ----- INDF1 Bits --------------------------------------------
                      00098 #define INDF10           INDF1,0          /* bit 0 */
                      00099 #define INDF11           INDF1,1          /* bit 1 */
                      00100 #define INDF12           INDF1,2          /* bit 2 */
                      00101 #define INDF13           INDF1,3          /* bit 3 */
                      00102 #define INDF14           INDF1,4          /* bit 4 */
                      00103 #define INDF15           INDF1,5          /* bit 5 */
                      00104 #define INDF16           INDF1,6          /* bit 6 */
                      00105 #define INDF17           INDF1,7          /* bit 7 */
                      00106 
                      00107 ; ----- INDF2 Bits --------------------------------------------
                      00108 #define INDF20           INDF2,0          /* bit 0 */
                      00109 #define INDF21           INDF2,1          /* bit 1 */
                      00110 #define INDF22           INDF2,2          /* bit 2 */
                      00111 #define INDF23           INDF2,3          /* bit 3 */
                      00112 #define INDF24           INDF2,4          /* bit 4 */
                      00113 #define INDF25           INDF2,5          /* bit 5 */
                      00114 #define INDF26           INDF2,6          /* bit 6 */
                      00115 #define INDF27           INDF2,7          /* bit 7 */
                      00116 
                      00117 ; ----- HIBYTE Bits --------------------------------------------
                      00118 #define HIBYTE0           HIBYTE,0          /* bit 0 */
                      00119 #define HIBYTE1           HIBYTE,1          /* bit 1 */
                      00120 #define HIBYTE2           HIBYTE,2          /* bit 2 */
                      00121 #define HIBYTE3           HIBYTE,3          /* bit 3 */
                      00122 #define HIBYTE4           HIBYTE,4          /* bit 4 */
                      00123 #define HIBYTE5           HIBYTE,5          /* bit 5 */
                      00124 #define HIBYTE6           HIBYTE,6          /* bit 6 */
                      00125 #define HIBYTE7           HIBYTE,7          /* bit 7 */
                      00126 
                      00127 ; ----- FSR0 Bits ---------------------------------------------
                      00128 #define FSR00           FSR0,0          /* bit 0 */
                      00129 #define FSR01           FSR0,1          /* bit 1 */
                      00130 #define FSR02           FSR0,2          /* bit 2 */
                      00131 #define FSR03           FSR0,3          /* bit 3 */
                      00132 #define FSR04           FSR0,4          /* bit 4 */
                      00133 #define FSR05           FSR0,5          /* bit 5 */
                      00134 #define FSR06           FSR0,6          /* bit 6 */
                      00135 #define FSR07           FSR0,7          /* bit 7 */
                      00136 
                      00137 ; ----- FSR1 Bits ---------------------------------------------
                      00138 #define FSR10           FSR1,0          /* bit 0 */
                      00139 #define FSR11           FSR1,1          /* bit 1 */
                      00140 #define FSR12           FSR1,2          /* bit 2 */
                      00141 #define FSR13           FSR1,3          /* bit 3 */
                      00142 #define FSR14           FSR1,4          /* bit 4 */
                      00143 #define FSR15           FSR1,5          /* bit 5 */
                      00144 #define FSR16           FSR1,6          /* bit 6 */
                      00145 #define FSR17           FSR1,7          /* bit 7 */
                      00146 
                      00147 ; ----- PCL Bits ---------------------------------------------
                      00148 #define PC0           PCL,0          /* bit 0 */
                      00149 #define PC1           PCL,1          /* bit 1 */
                      00150 #define PC2           PCL,2          /* bit 2 */
                      00151 #define PC3           PCL,3          /* bit 3 */
                      00152 #define PC4           PCL,4          /* bit 4 */
                      00153 #define PC5           PCL,5          /* bit 5 */
                      00154 #define PC6           PCL,6          /* bit 6 */
                      00155 #define PC7           PCL,7          /* bit 7 */
                      00156 
                      00157 ; ----- STATUS Bits --------------------------------------------
                      00158 #define C               STATUS,0         /* bit 0 */
                      00159 #define DC              STATUS,1         /* bit 1 */
                      00160 #define Z               STATUS,2         /* bit 2 */
                      00161 
                      00162 ; ----- MCR Bits --------------------------------------------
                      00163 #define MINT00          MCR,0           /* bit 0 */
                      00164 #define MINT01          MCR,1           /* bit 1 */
                      00165 #define MINT10          MCR,2           /* bit 2 */
                      00166 #define MINT11          MCR,3           /* bit 3 */
                      00167 #define PD              MCR,4           /* bit 4 */
                      00168 #define TO              MCR,5           /* bit 5 */
                      00169 #define GIE             MCR,7           /* bit 7 */
                      00170 
                      00171 ; ----- INDF3 Bits --------------------------------------------
                      00172 #define INDF30           INDF3,0          /* bit 0 */
                      00173 #define INDF31           INDF3,1          /* bit 1 */
                      00174 #define INDF32           INDF3,2          /* bit 2 */
                      00175 #define INDF33           INDF3,3          /* bit 3 */
                      00176 #define INDF34           INDF3,4          /* bit 4 */
                      00177 #define INDF35           INDF3,5          /* bit 5 */
                      00178 #define INDF36           INDF3,6          /* bit 6 */
                      00179 #define INDF37           INDF3,7          /* bit 7 */
                      00180 
                      00181 ; ----- INTE Bits --------------------------------------------
                      00182 #define T0IE                INTE,0            /* bit 0 */
                      00183 #define T1IE            INTE,1            /* bit 1 */
                      00184 #define INT0IE          INTE,2            /* bit 2 */
                      00185 #define INT1IE          INTE,3            /* bit 3 */
                      00186 #define KBIE            INTE,4            /* bit 4 */
                      00187 #define ADIE            INTE,6            /* bit 6 */
                      00188 
                      00189 ; ----- INTF Bits --------------------------------------------
                      00190 #define T0IF                INTF,0              /* bit 0 */
                      00191 #define T1IF            INTF,1          /* bit 1 */
                      00192 #define INT0IF              INTF,2                /* bit 2 */
                      00193 #define INT1IF          INTF,3          /* bit 3 */
                      00194 #define KBIF            INTF,4          /* bit 4 */
                      00195 #define ADIF            INTF,6          /* bit 6 */
                      00196 
                      00197 ; ----- OSCM Bits --------------------------------------------
                      00198 #define HFEN            OSCM,0           /* bit 0 */
                      00199 #define LFEN            OSCM,1           /* bit 1 */
                      00200 #define CLKS            OSCM,2           /* bit 2 */
                      00201 #define STBH            OSCM,4           /* bit 4 */
                      00202 #define STBL            OSCM,5           /* bit 5 */
                      00203 
                      00204 ; ----- CLKO Bits --------------------------------------------
                      00205 #define CLKOS0          CLKO,0          /* bit 0 */
                      00206 #define CLKOS1          CLKO,1          /* bit 1 */
                      00207 #define CLKOS2          CLKO,2          /* bit 2 */
                      00208 #define CLKOEN          CLKO,7          /* bit 7 */
                      00209 
                      00210 ; ----- IOP0 Bits --------------------------------------------
                      00211 #define P00D            IOP0,0           /* bit 0 */
                      00212 #define P01D            IOP0,1           /* bit 1 */
                      00213 #define P02D            IOP0,2           /* bit 2 */
                      00214 #define P03D            IOP0,3           /* bit 3 */
                      00215 #define P04D            IOP0,4           /* bit 4 */
                      00216 #define P05D            IOP0,5           /* bit 5 */
                      00217 #define P06D            IOP0,6           /* bit 6 */
                      00218 #define P07D            IOP0,7           /* bit 7 */
                      00219 
                      00220 ; ----- OEP0 Bits --------------------------------------------
                      00221 #define P00OE           OEP0,0          /* bit 0 */
                      00222 #define P01OE           OEP0,1          /* bit 1 */
                      00223 #define P02OE           OEP0,2          /* bit 2 */
                      00224 #define P03OE           OEP0,3          /* bit 3 */
                      00225 #define P04OE           OEP0,4          /* bit 4 */
                      00226 #define P05OE           OEP0,5          /* bit 5 */
                      00227 #define P06OE           OEP0,6          /* bit 6 */
                      00228 #define P07OE           OEP0,7          /* bit 7 */
                      00229 
                      00230 ; ----- PUP0 Bits --------------------------------------------
                      00231 #define P00PU           PUP0,0          /* bit 0 */
                      00232 #define P01PU           PUP0,1          /* bit 1 */
                      00233 #define P02PU           PUP0,2          /* bit 2 */
                      00234 #define P03PU           PUP0,3          /* bit 3 */
                      00235 #define P04PU           PUP0,4          /* bit 4 */
                      00236 #define P05PU           PUP0,5          /* bit 5 */
                      00237 #define P06PU           PUP0,6          /* bit 6 */
                      00238 #define P07PU           PUP0,7          /* bit 7 */
                      00239 
                      00240 ; ----- PDP0 Bits --------------------------------------------
                      00241 #define P00PD           PDP0,0            /* bit 0 */
                      00242 #define P01PD           PDP0,1            /* bit 1 */
                      00243 #define P02PD           PDP0,2            /* bit 2 */
                      00244 #define P03PD           PDP0,3            /* bit 3 */
                      00245 #define P04PD           PDP0,4            /* bit 4 */
                      00246 #define P05PD           PDP0,5            /* bit 5 */
                      00247 #define P06PD           PDP0,6            /* bit 6 */
                      00248 #define P07PD           PDP0,7            /* bit 7 */
                      00249 
                      00250 ; ----- IOP1 Bits --------------------------------------------
                      00251 #define P10D            IOP1,0           /* bit 0 */
                      00252 #define P11D            IOP1,1           /* bit 1 */
                      00253 #define P12D            IOP1,2           /* bit 2 */
                      00254 
                      00255 ; ----- OEP1 Bits --------------------------------------------
                      00256 #define P10OE           OEP1,0           /* bit 0 */
                      00257 #define P11OE           OEP1,1           /* bit 1 */
                      00258 #define P12OE           OEP1,2           /* bit 2 */
                      00259 
                      00260 ; ----- PUP1 Bits --------------------------------------------
                      00261 #define P10PU           PUP1,0           /* bit 0 */
                      00262 #define P11PU           PUP1,1           /* bit 1 */
                      00263 #define P12PU           PUP1,2           /* bit 2 */
                      00264 
                      00265 ; ----- PDP1 Bits --------------------------------------------
                      00266 #define P10PD               PDP1,0                 /* bit 0 */
                      00267 #define P11PD               PDP1,1                 /* bit 1 */
                      00268 #define P12PD               PDP1,2                 /* bit 2 */
                      00269 
                      00270 ; ----- IOP2 Bits --------------------------------------------
                      00271 #define P20D            IOP2,0           /* bit 0 */
                      00272 #define P21D            IOP2,1           /* bit 1 */
                      00273 #define P22D            IOP2,2           /* bit 2 */
                      00274 #define P23D            IOP2,3           /* bit 3 */
                      00275 #define P24D            IOP2,4           /* bit 4 */
                      00276 #define P25D            IOP2,5           /* bit 5 */
                      00277 #define P26D            IOP2,6           /* bit 6 */
                      00278 
                      00279 ; ----- OEP2 Bits --------------------------------------------
                      00280 #define P20OE           OEP2,0          /* bit 0 */
                      00281 #define P21OE           OEP2,1          /* bit 1 */
                      00282 #define P22OE           OEP2,2          /* bit 2 */
                      00283 #define P23OE           OEP2,3          /* bit 3 */
                      00284 #define P24OE           OEP2,4          /* bit 4 */
                      00285 #define P25OE           OEP2,5          /* bit 5 */
                      00286 #define P26OE           OEP2,6          /* bit 6 */
                      00287 
                      00288 ; ----- PUP2 Bits --------------------------------------------
                      00289 #define P20PU           PUP2,0          /* bit 0 */
                      00290 #define P21PU           PUP2,1          /* bit 1 */
                      00291 #define P22PU           PUP2,2          /* bit 2 */
                      00292 #define P23PU           PUP2,3          /* bit 3 */
                      00293 #define P24PU           PUP2,4          /* bit 4 */
                      00294 #define P25PU           PUP2,5          /* bit 5 */
                      00295 #define P26PU           PUP2,6          /* bit 6 */
                      00296 
                      00297 ; ----- PDP2 Bits --------------------------------------------
                      00298 #define P20PD           PDP2,0          /* bit 0 */
                      00299 #define P21PD               PDP2,1                /* bit 1 */
                      00300 #define P22PD           PDP2,2            /* bit 2 */
                      00301 #define P23PD           PDP2,3            /* bit 3 */
                      00302 #define P24PD           PDP2,4            /* bit 4 */
                      00303 #define P25PD               PDP2,5                /* bit 5 */
                      00304 #define P26PD               PDP2,6                /* bit 6 */
                      00305 
                      00306 ; ----- IOP3 Bits --------------------------------------------
                      00307 #define P30D            IOP3,0          /* bit 0 */
                      00308 #define P31D            IOP3,1          /* bit 1 */
                      00309 #define P32D            IOP3,2          /* bit 2 */
                      00310 #define P33D            IOP3,3          /* bit 3 */
                      00311 #define P34D            IOP3,4          /* bit 4 */
                      00312 #define P35D            IOP3,5          /* bit 5 */
                      00313 #define P36D            IOP3,6          /* bit 6 */
                      00314 #define P37D            IOP3,7          /* bit 7 */
                      00315 
                      00316 ; ----- OEP3 Bits --------------------------------------------
                      00317 #define P30OE           OEP3,0          /* bit 0 */
                      00318 #define P31OE           OEP3,1          /* bit 1 */
                      00319 #define P32OE           OEP3,2          /* bit 2 */
                      00320 #define P33OE           OEP3,3          /* bit 3 */
                      00321 #define P34OE           OEP3,4          /* bit 4 */
                      00322 #define P35OE           OEP3,5          /* bit 5 */
                      00323 #define P36OE           OEP3,6          /* bit 6 */
                      00324 #define P37OE           OEP3,7          /* bit 7 */
                      00325 
                      00326 ; ----- PUP3 Bits --------------------------------------------
                      00327 #define P30PU           PUP3,0          /* bit 0 */
                      00328 #define P31PU           PUP3,1          /* bit 1 */
                      00329 #define P32PU           PUP3,2          /* bit 2 */
                      00330 #define P33PU           PUP3,3          /* bit 3 */
                      00331 #define P34PU           PUP3,4          /* bit 4 */
                      00332 #define P35PU           PUP3,5          /* bit 5 */
                      00333 #define P36PU           PUP3,6          /* bit 6 */
                      00334 #define P37PU           PUP3,7          /* bit 7 */
                      00335 
                      00336 ; ----- PDP3 Bits --------------------------------------------
                      00337 #define P30PD               PDP3,0                /* bit 0 */
                      00338 #define P31PD               PDP3,1                /* bit 1 */
                      00339 #define P32PD               PDP3,2                /* bit 2 */
                      00340 #define P33PD               PDP3,3                /* bit 3 */
                      00341 #define P34PD               PDP3,4                /* bit 4 */
                      00342 #define P35PD               PDP3,5                /* bit 5 */
                      00343 #define P36PD               PDP3,6                /* bit 6 */
                      00344 #define P37PD               PDP3,7                /* bit 7 */
                      00345 
                      00346 ; ----- T0CR Bits --------------------------------------------
                      00347 #define T0PR0           T0CR,0           /* bit 0 */
                      00348 #define T0PR1           T0CR,1           /* bit 1 */
                      00349 #define T0PR2           T0CR,2           /* bit 2 */
                      00350 #define T0PTS0          T0CR,3           /* bit 3 */
                      00351 #define T0PTS1          T0CR,4           /* bit 4 */
                      00352 #define BUZ0OE          T0CR,5           /* bit 5 */
                      00353 #define PWM0OE          T0CR,6           /* bit 6 */
                      00354 #define TC0EN           T0CR,7           /* bit 7 */
                      00355 
                      00356 ; ----- T0CNT Bits --------------------------------------------
                      00357 #define T0C0            T0CNT,0          /* bit 0 */
                      00358 #define T0C1            T0CNT,1          /* bit 1 */
                      00359 #define T0C2            T0CNT,2          /* bit 2 */
                      00360 #define T0C3            T0CNT,3          /* bit 3 */
                      00361 #define T0C4            T0CNT,4          /* bit 4 */
                      00362 #define T0C5            T0CNT,5          /* bit 5 */
                      00363 #define T0C6            T0CNT,6          /* bit 6 */
                      00364 #define T0C7            T0CNT,7          /* bit 7 */
                      00365 
                      00366 ; ----- T0LOAD Bits --------------------------------------------
                      00367 #define T0LOAD0         T0LOAD,0      /* bit 0 */
                      00368 #define T0LOAD1         T0LOAD,1      /* bit 1 */
                      00369 #define T0LOAD2         T0LOAD,2      /* bit 2 */
                      00370 #define T0LOAD3         T0LOAD,3      /* bit 3 */
                      00371 #define T0LOAD4         T0LOAD,4      /* bit 4 */
                      00372 #define T0LOAD5         T0LOAD,5      /* bit 5 */
                      00373 #define T0LOAD6         T0LOAD,6      /* bit 6 */
                      00374 #define T0LOAD7         T0LOAD,7      /* bit 7 */
                      00375 
                      00376 ; ----- T0DATA Bits --------------------------------------------
                      00377 #define T0DATA0         T0DATA,0                /* bit 0 */
                      00378 #define T0DATA1         T0DATA,1          /* bit 1 */
                      00379 #define T0DATA2         T0DATA,2          /* bit 2 */
                      00380 #define T0DATA3         T0DATA,3          /* bit 3 */
                      00381 #define T0DATA4         T0DATA,4          /* bit 4 */
                      00382 #define T0DATA5         T0DATA,5          /* bit 5 */
                      00383 #define T0DATA6         T0DATA,6          /* bit 6 */
                      00384 #define T0DATA7         T0DATA,7          /* bit 7 */
                      00385 
                      00386 ; ----- T1CR Bits --------------------------------------------
                      00387 #define T1PR0               T1CR,0              /* bit 0 */
                      00388 #define T1PR1               T1CR,1              /* bit 1 */
                      00389 #define T1PR2               T1CR,2              /* bit 2 */
                      00390 #define T1PTS0              T1CR,3                  /* bit 3 */
                      00391 #define T1PTS1              T1CR,4                  /* bit 4 */
                      00392 #define BUZ1OE                T1CR,5                  /* bit 5 */
                      00393 #define PWM1OE                T1CR,6                  /* bit 6 */
                      00394 #define TC1EN                 T1CR,7              /* bit 7 */
                      00395 
                      00396 ; ----- T1CNT Bits --------------------------------------------
                      00397 #define T1C0            T1CNT,0          /* bit 0 */
                      00398 #define T1C1            T1CNT,1          /* bit 1 */
                      00399 #define T1C2            T1CNT,2          /* bit 2 */
                      00400 #define T1C3            T1CNT,3          /* bit 3 */
                      00401 #define T1C4            T1CNT,4          /* bit 4 */
                      00402 #define T1C5            T1CNT,5          /* bit 5 */
                      00403 #define T1C6            T1CNT,6          /* bit 6 */
                      00404 #define T1C7            T1CNT,7          /* bit 7 */
                      00405 
                      00406 ; ----- T1LOAD Bits --------------------------------------------
                      00407 #define T1LOAD0           T1LOAD,0              /* bit 0 */
                      00408 #define T1LOAD1           T1LOAD,1              /* bit 1 */
                      00409 #define T1LOAD2             T1LOAD,2              /* bit 2 */
                      00410 #define T1LOAD3             T1LOAD,3              /* bit 3 */
                      00411 #define T1LOAD4             T1LOAD,4              /* bit 4 */
                      00412 #define T1LOAD5             T1LOAD,5              /* bit 5 */
                      00413 #define T1LOAD6             T1LOAD,6              /* bit 6 */
                      00414 #define T1LOAD7             T1LOAD,7              /* bit 7 */
                      00415 
                      00416 ; ----- T1DATA Bits --------------------------------------------
                      00417 #define T1DATA0           T1DATA,0              /* bit 0 */
                      00418 #define T1DATA1           T1DATA,1              /* bit 1 */
                      00419 #define T1DATA2             T1DATA,2              /* bit 2 */
                      00420 #define T1DATA3             T1DATA,3              /* bit 3 */
                      00421 #define T1DATA4             T1DATA,4              /* bit 4 */
                      00422 #define T1DATA5             T1DATA,5              /* bit 5 */
                      00423 #define T1DATA6             T1DATA,6              /* bit 6 */
                      00424 #define T1DATA7             T1DATA,7              /* bit 7 */
                      00425 
                      00426 ; ----- T2CR Bits --------------------------------------------
                      00427 #define T2PR0               T2CR,0              /* bit 0 */
                      00428 #define T2PR1               T2CR,1              /* bit 1 */
                      00429 #define T2PR2               T2CR,2              /* bit 2 */
                      00430 #define T2PTS0              T2CR,3                  /* bit 3 */
                      00431 #define T2PTS1              T2CR,4                  /* bit 4 */
                      00432 #define T2MODE                T2CR,5                  /* bit 5 */
                      00433 #define TC2EN                 T2CR,7              /* bit 7 */
                      00434 
                      00435 ; ----- T2CNTH Bits --------------------------------------------
                      00436 #define T2C8            T2CNTH,0           /* bit 0 */
                      00437 #define T2C9            T2CNTH,1           /* bit 1 */
                      00438 #define T2C10           T2CNTH,2           /* bit 2 */
                      00439 #define T2C11           T2CNTH,3           /* bit 3 */
                      00440 #define T2C12           T2CNTH,4           /* bit 4 */
                      00441 #define T2C13           T2CNTH,5           /* bit 5 */
                      00442 #define T2C14           T2CNTH,6           /* bit 6 */
                      00443 #define T2C15           T2CNTH,7           /* bit 7 */
                      00444 
                      00445 ; ----- T2CNTL Bits --------------------------------------------
                      00446 #define T2C0            T2CNTL,0         /* bit 0 */
                      00447 #define T2C1            T2CNTL,1         /* bit 1 */
                      00448 #define T2C2            T2CNTL,2         /* bit 2 */
                      00449 #define T2C3            T2CNTL,3         /* bit 3 */
                      00450 #define T2C4            T2CNTL,4         /* bit 4 */
                      00451 #define T2C5            T2CNTL,5         /* bit 5 */
                      00452 #define T2C6            T2CNTL,6         /* bit 6 */
                      00453 #define T2C7            T2CNTL,7         /* bit 7 */
                      00454 
                      00455 ; ----- T2LOADH Bits --------------------------------------------
                      00456 #define T2LOAD8           T2LOADH,0             /* bit 0 */
                      00457 #define T2LOAD9           T2LOADH,1               /* bit 1 */
                      00458 #define T2LOAD10        T2LOADH,2         /* bit 2 */
                      00459 #define T2LOAD11          T2LOADH,3               /* bit 3 */
                      00460 #define T2LOAD12          T2LOADH,4               /* bit 4 */
                      00461 #define T2LOAD13          T2LOADH,5               /* bit 5 */
                      00462 #define T2LOAD14          T2LOADH,6               /* bit 6 */
                      00463 #define T2LOAD15          T2LOADH,7               /* bit 7 */
                      00464 
                      00465 ; ----- T2LOADL Bits --------------------------------------------
                      00466 #define T2LOAD0           T2LOADL,0             /* bit 0 */
                      00467 #define T2LOAD1           T2LOADL,1               /* bit 1 */
                      00468 #define T2LOAD2             T2LOADL,2             /* bit 2 */
                      00469 #define T2LOAD3             T2LOADL,3             /* bit 3 */
                      00470 #define T2LOAD4             T2LOADL,4             /* bit 4 */
                      00471 #define T2LOAD5             T2LOADL,5             /* bit 5 */
                      00472 #define T2LOAD6             T2LOADL,6             /* bit 6 */
                      00473 #define T2LOAD7             T2LOADL,7             /* bit 7 */
                      00474 
                      00475 ; ----- TK0CR0 Bits --------------------------------------------
                      00476 #define TK0FQ0              TK0CR0,0              /* bit 0 */
                      00477 #define TK0FQ1              TK0CR0,1              /* bit 1 */
                      00478 #define TK0FQ2              TK0CR0,2              /* bit 2 */
                      00479 #define TK0CLR            TK0CR0,3                /* bit 3 */
                      00480 #define TK0RCE              TK0CR0,4                /* bit 4 */
                      00481 #define TK0JE               TK0CR0,5              /* bit 5 */
                      00482 
                      00483 ; ---- TK0CR1 Bits ----------------------------------------------
                      00484 #define TK0K0           TK0CR1,0            /* bit 0 */
                      00485 #define TK0K1           TK0CR1,1            /* bit 1 */
                      00486 #define TK0K2           TK0CR1,2            /* bit 2 */
                      00487 #define TK0FL0          TK0CR1,4            /* bit 4 */
                      00488 #define TK0FL1          TK0CR1,5            /* bit 5 */
                      00489 #define TK0IE           TK0CR1,6           /* bit 6 */
                      00490 #define TK0IF           TK0CR1,7           /* bit 7 */
                      00491 
                      00492 ; ---- TK0CR2 Bits ----------------------------------------------
                      00493 #define TK0IO0          TK0CR2,0          /* bit 0 */
                      00494 #define TK0IO1          TK0CR2,1          /* bit 1 */
                      00495 #define TK0IO2          TK0CR2,2          /* bit 2 */
                      00496 #define TK0IO3          TK0CR2,3          /* bit 3 */
                      00497 #define TK0IO4          TK0CR2,4          /* bit 4 */
                      00498 #define TK0IO5          TK0CR2,5          /* bit 5 */
                      00499 #define TK0IO6          TK0CR2,6          /* bit 6 */
                      00500 #define TK0IO7          TK0CR2,7          /* bit 7 */
                      00501 
                      00502 ; ---- TK0CNTH Bits ----------------------------------------------
                      00503 #define TK0C8           TK0CNTH,0         /* bit 0 */
                      00504 #define TK0C9           TK0CNTH,1         /* bit 1 */
                      00505 #define TK0C10          TK0CNTH,2         /* bit 2 */
                      00506 #define TK0C11          TK0CNTH,3         /* bit 3 */
                      00507 #define TK0C12          TK0CNTH,4         /* bit 4 */
                      00508 #define TK0C13          TK0CNTH,5         /* bit 5 */
                      00509 #define TK0C14          TK0CNTH,6         /* bit 6 */
                      00510 #define TK0C15          TK0CNTH,7         /* bit 7 */
                      00511 
                      00512 ; ----- TK0CNTL Bits --------------------------------------------
                      00513 #define TK0C0               TK0CNTL,0            /* bit 0 */
                      00514 #define TK0C1               TK0CNTL,1              /* bit 1 */
                      00515 #define TK0C2               TK0CNTL,2              /* bit 2 */
                      00516 #define TK0C3                 TK0CNTL,3            /* bit 3 */
                      00517 #define TK0C4               TK0CNTL,4              /* bit 4 */
                      00518 #define TK0C5                 TK0CNTL,5            /* bit 5 */
                      00519 #define TK0C6                 TK0CNTL,6            /* bit 6 */
                      00520 #define TK0C7                 TK0CNTL,7            /* bit 7 */
                      00521 
                      00522 ; ----- TK1CR0 Bits --------------------------------------------
                      00523 #define TK1FQ0              TK1CR0,0              /* bit 0 */
                      00524 #define TK1FQ1              TK1CR0,1              /* bit 1 */
                      00525 #define TK1FQ2              TK1CR0,2              /* bit 2 */
                      00526 #define TK1CLR            TK1CR0,3                /* bit 3 */
                      00527 #define TK1RCE              TK1CR0,4                /* bit 4 */
                      00528 #define TK1JE               TK1CR0,5              /* bit 5 */
                      00529 
                      00530 ; ---- TK1CR1 Bits ----------------------------------------------
                      00531 #define TK1K0           TK0CR1,0            /* bit 0 */
                      00532 #define TK1K1           TK0CR1,1            /* bit 1 */
                      00533 #define TK1K2           TK0CR1,2            /* bit 2 */
                      00534 #define TK1FL0          TK0CR1,4            /* bit 4 */
                      00535 #define TK1FL1          TK0CR1,5            /* bit 5 */
                      00536 #define TK1IE           TK0CR1,6            /* bit 6 */
                      00537 #define TK1IF           TK0CR1,7            /* bit 7 */
                      00538 
                      00539 ; ---- TK1CR2 Bits ----------------------------------------------
                      00540 #define TK1IO0          TK1CR2,0          /* bit 0 */
                      00541 #define TK1IO1          TK1CR2,1          /* bit 1 */
                      00542 #define TK1IO2          TK1CR2,2          /* bit 2 */
                      00543 #define TK1IO3          TK1CR2,3          /* bit 3 */
                      00544 #define TK1IO4          TK1CR2,4          /* bit 4 */
                      00545 #define TK1IO5          TK1CR2,5          /* bit 5 */
                      00546 #define TK1IO6          TK1CR2,6          /* bit 6 */
                      00547 #define TK1IO7          TK1CR2,7          /* bit 7 */
                      00548 
                      00549 ; ---- TK1CNTH Bits ----------------------------------------------
                      00550 #define TK1C8           TK1CNTH,0          /* bit 0 */
                      00551 #define TK1C9           TK1CNTH,1          /* bit 1 */
                      00552 #define TK1C10          TK1CNTH,2          /* bit 2 */
                      00553 #define TK1C11          TK1CNTH,3          /* bit 3 */
                      00554 #define TK1C12          TK1CNTH,4          /* bit 4 */
                      00555 #define TK1C13          TK1CNTH,5          /* bit 5 */
                      00556 #define TK1C14          TK1CNTH,6          /* bit 6 */
                      00557 #define TK1C15          TK1CNTH,7          /* bit 7 */
                      00558 
                      00559 ; ----- TK1CNTL Bits --------------------------------------------
                      00560 #define TK1C0               TK1CNTL,0            /* bit 0 */
                      00561 #define TK1C1               TK1CNTL,1              /* bit 1 */
                      00562 #define TK1C2               TK1CNTL,2              /* bit 2 */
                      00563 #define TK1C3                 TK1CNTL,3            /* bit 3 */
                      00564 #define TK1C4               TK1CNTL,4              /* bit 4 */
                      00565 #define TK1C5                 TK1CNTL,5            /* bit 5 */
                      00566 #define TK1C6                 TK1CNTL,6            /* bit 6 */
                      00567 #define TK1C7                 TK1CNTL,7            /* bit 7 */
                      00568 
                      00569 ; ----- ADCR0 Bits --------------------------------------------
                      00570 #define ADON            ADCR0,0              /* bit 0 */
                      00571 #define ADEOC           ADCR0,1                /* bit 1 */
                      00572 #define ADCHS0          ADCR0,3                  /* bit 3 */
                      00573 #define ADCHS1          ADCR0,4                  /* bit 4 */
                      00574 #define ADCHS2          ADCR0,5                  /* bit 5 */
                      00575 #define ADCHS3          ADCR0,6                  /* bit 6 */
                      00576 #define ADCHS4          ADCR0,7                  /* bit 7 */
                      00577 
                      00578 ; ----- ADCR1 Bits --------------------------------------------
                      00579 #define VREFP_PHEN          ADCR1,0        /* bit 0 */
                      00580 #define ADCKS0              ADCR1,1                  /* bit 1 */
                      00581 #define ADCKS1              ADCR1,2                  /* bit 2 */
                      00582 #define ADREF0              ADCR1,3                  /* bit 3 */
                      00583 #define ADREF1              ADCR1,4                  /* bit 4 */
                      00584 #define ADREF2              ADCR1,5                  /* bit 5 */
                      00585 #define ADREF3              ADCR1,6                  /* bit 6 */
                      00586 #define ADTEN                 ADCR1,7                /* bit 7 */
                      00587 
                      00588 ; ----- ADCR2 Bits --------------------------------------------
                      00589 #define ADSMP0          ADCR2,0                /* bit 0 */
                      00590 #define ADSMP1          ADCR2,1                /* bit 1 */
                      00591 #define ADSMP2          ADCR2,2                /* bit 2 */
                      00592 #define ADSMP3          ADCR2,3                /* bit 3 */
                      00593 
                      00594 ; ---- ADIO0 Bits ----------------------------------------------
                      00595 #define ADIOS0          ADIO0,0          /* bit 0 */
                      00596 #define ADIOS1          ADIO0,1          /* bit 1 */
                      00597 #define ADIOS2          ADIO0,2          /* bit 2 */
                      00598 #define ADIOS3          ADIO0,3          /* bit 3 */
                      00599 #define ADIOS4          ADIO0,4          /* bit 4 */
                      00600 #define ADIOS5          ADIO0,5          /* bit 5 */
                      00601 #define ADIOS6          ADIO0,6          /* bit 6 */
                      00602 #define ADIOS7          ADIO0,7          /* bit 7 */
                      00603 
                      00604 ; ---- ADIO1 Bits ----------------------------------------------
                      00605 #define ADIOS8          ADIO1,0         /* bit 0 */
                      00606 #define ADIOS9          ADIO1,1         /* bit 1 */
                      00607 #define ADIOS10         ADIO1,2         /* bit 2 */
                      00608 #define ADIOS11         ADIO1,3         /* bit 3 */
                      00609 #define ADIOS12         ADIO1,4         /* bit 4 */
                      00610 #define ADIOS13         ADIO1,5         /* bit 5 */
                      00611 #define ADIOS14         ADIO1,6         /* bit 6 */
                      00612 #define ADIOS15         ADIO1,7         /* bit 7 */
                      00613 
                      00614 ; ---- ADRH Bits ----------------------------------------------
                      00615 #define ADR4            ADRH,0           /* bit 0 */
                      00616 #define ADR5            ADRH,1           /* bit 1 */
                      00617 #define ADR6            ADRH,2           /* bit 2 */
                      00618 #define ADR7            ADRH,3           /* bit 3 */
                      00619 #define ADR8            ADRH,4           /* bit 4 */
                      00620 #define ADR9            ADRH,5           /* bit 5 */
                      00621 #define ADR10           ADRH,6           /* bit 6 */
                      00622 #define ADR11           ADRH,7           /* bit 7 */
                      00623 
                      00624 ; ---- ADRL Bits ----------------------------------------------
                      00625 #define ADR0            ADRL,0           /* bit 0 */
                      00626 #define ADR1            ADRL,1           /* bit 1 */
                      00627 #define ADR2            ADRL,2           /* bit 2 */
                      00628 #define ADR3            ADRL,3           /* bit 3 */
                      00629 
                      00630 ; ---- LEDCR0 Bits ----------------------------------------------
                      00631 #define GYS0            LEDCR0,0         /* bit 0 */
                      00632 #define GYS1            LEDCR0,1         /* bit 1 */
                      00633 #define GYS2            LEDCR0,2         /* bit 2 */
                      00634 #define DUTY            LEDCR0,6         /* bit 6 */
                      00635 #define LEDEN           LEDCR0,7         /* bit 7 */
                      00636 
                      00637 ; ---- LEDCR1 Bits ----------------------------------------------
                      00638 #define FLED0           LEDCR1,0         /* bit 0 */
                      00639 #define FLED1           LEDCR1,1         /* bit 1 */
                      00640 #define IREFEN          LEDCR1,2         /* bit 2 */
                      00641 #define IBPS0           LEDCR1,3         /* bit 3 */
                      00642 #define IBPS1           LEDCR1,4         /* bit 4 */
                      00643 #define CLKS0           LEDCR1,5         /* bit 5 */
                      00644 #define CLKS1           LEDCR1,6         /* bit 6 */
                      00645 #define DRVPS           LEDCR1,7         /* bit 7 */
                      00646 
                      00647 ; ---- LEDIOS0 Bits ----------------------------------------------
                      00648 #define COMIOS1          LEDIOS0,0          /* bit 0 */
                      00649 #define COMIOS2          LEDIOS0,1          /* bit 1 */
                      00650 #define COMIOS3          LEDIOS0,2          /* bit 2 */
                      00651 #define COMIOS4          LEDIOS0,3          /* bit 3 */
                      00652 #define COMIOS5          LEDIOS0,4          /* bit 4 */
                      00653 #define COMIOS6          LEDIOS0,5          /* bit 5 */
                      00654 #define COMIOS7          LEDIOS0,6          /* bit 6 */
                      00655 #define COMIOS8          LEDIOS0,7          /* bit 7 */
                      00656 
                      00657 ; ---- LEDIOS1 Bits ----------------------------------------------
                      00658 #define SEGIOS1          LEDIOS1,0          /* bit 0 */
                      00659 #define SEGIOS2          LEDIOS1,1          /* bit 1 */
                      00660 #define SEGIOS3          LEDIOS1,2          /* bit 2 */
                      00661 #define SEGIOS4          LEDIOS1,3          /* bit 3 */
                      00662 #define SEGIOS5          LEDIOS1,4          /* bit 4 */
                      00663 #define SEGIOS6          LEDIOS1,5          /* bit 5 */
                      00664 #define SEGIOS7          LEDIOS1,6          /* bit 6 */
                      00665 #define SEGIOS8          LEDIOS1,7          /* bit 7 */
                      00666 
                      00667 ; ---- LEDDRV Bits ----------------------------------------------
                      00668 #define COMDV1          LEDDRV,0          /* bit 0 */
                      00669 #define COMDV2          LEDDRV,1          /* bit 1 */
                      00670 #define COMDV3          LEDDRV,2          /* bit 2 */
                      00671 #define COMDV4          LEDDRV,3          /* bit 3 */
                      00672 #define COMDV5          LEDDRV,4          /* bit 4 */
                      00673 #define COMDV6          LEDDRV,5          /* bit 5 */
                      00674 #define COMDV7          LEDDRV,6          /* bit 6 */
                      00675 #define COMDV8          LEDDRV,7          /* bit 7 */
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015         extern  ___uchar2fs
                      00016         extern  ___schar2fs
                      00017         extern  ___uint2fs
                      00018         extern  ___sint2fs
                      00019         extern  ___ulong2fs
                      00020         extern  ___slong2fs
                      00021         extern  ___fs2uchar
                      00022         extern  ___fs2schar
                      00023         extern  ___fs2uint
                      00024         extern  ___fs2sint
                      00025         extern  ___fs2ulong
                      00026         extern  ___fs2slong
                      00027         extern  ___fsadd
                      00028         extern  ___fssub
                      00029         extern  ___fsmul
                      00030         extern  ___fslt
                      00031         extern  ___fseq
                      00032         extern  ___fsneq
                      00033         extern  ___fsgt
                      00034 
                      00035         extern STK06
                      00036         extern STK05
                      00037         extern STK04
                      00038         extern STK03
                      00039         extern STK02
                      00040         extern STK01
                      00041         extern STK00
                      00042 ;--------------------------------------------------------
                      00043 ; global declarations
                      00044 ;--------------------------------------------------------
                      00045         global  ___fsdiv
                      00046 
                      00047 ;--------------------------------------------------------
                      00048 ; global definitions
                      00049 ;--------------------------------------------------------
                      00050 ;--------------------------------------------------------
                      00051 ; absolute symbol definitions
                      00052 ;--------------------------------------------------------
                      00053 ;--------------------------------------------------------
                      00054 ; compiler-defined variables
                      00055 ;--------------------------------------------------------
                      00056 UDL_fsdiv_0     udata
0000                  00057 r0x100B res     1
0000                  00058 r0x100A res     1
0001                  00059 r0x1009 res     1
0001                  00060 r0x1008 res     1
0002                  00061 r0x100F res     1
0002                  00062 r0x100E res     1
0003                  00063 r0x100D res     1
0003                  00064 r0x100C res     1
0004                  00065 r0x1010 res     1
0004                  00066 r0x1011 res     1
0005                  00067 r0x1012 res     1
0005                  00068 r0x1013 res     1
0006                  00069 r0x1014 res     1
0006                  00070 r0x1015 res     1
0007                  00071 r0x1016 res     1
0007                  00072 r0x1017 res     1
0008                  00073 r0x1018 res     1
0008                  00074 r0x1019 res     1
0009                  00075 r0x101A res     1
0009                  00076 r0x101B res     1
000A                  00077 r0x101C res     1
000A                  00078 r0x101D res     1
000B                  00079 r0x101E res     1
000B                  00080 r0x101F res     1
000C                  00081 r0x1020 res     1
000C                  00082 r0x1021 res     1
000D                  00083 r0x1022 res     1
000D                  00084 r0x1023 res     1
000E                  00085 r0x1024 res     1
000E                  00086 ___fsdiv_fl1_1_22       res     4
0010                  00087 ___fsdiv_fl2_1_22       res     4
                      00088 ;--------------------------------------------------------
                      00089 ; initialized data
                      00090 ;--------------------------------------------------------
                      00091 ;--------------------------------------------------------
                      00092 ; overlayable items in internal ram 
                      00093 ;--------------------------------------------------------
                      00094 ;       udata_ovr
                      00095 ;--------------------------------------------------------
                      00096 ; code
                      00097 ;--------------------------------------------------------
                      00098 code_fsdiv      code
                      00099 ;***
                      00100 ;  pBlock Stats: dbName = C
                      00101 ;***
                      00102 ;entry:  ___fsdiv       ;Function start
                      00103 ; 2 exit points
                      00104 ;has an exit
                      00105 ;36 compiler assigned registers:
                      00106 ;   r0x1008
                      00107 ;   STK00
                      00108 ;   r0x1009
                      00109 ;   STK01
                      00110 ;   r0x100A
                      00111 ;   STK02
                      00112 ;   r0x100B
                      00113 ;   STK03
                      00114 ;   r0x100C
                      00115 ;   STK04
                      00116 ;   r0x100D
                      00117 ;   STK05
                      00118 ;   r0x100E
                      00119 ;   STK06
                      00120 ;   r0x100F
                      00121 ;   r0x1010
                      00122 ;   r0x1011
                      00123 ;   r0x1012
                      00124 ;   r0x1013
                      00125 ;   r0x1014
                      00126 ;   r0x1015
                      00127 ;   r0x1016
                      00128 ;   r0x1017
                      00129 ;   r0x1018
                      00130 ;   r0x1019
                      00131 ;   r0x101A
                      00132 ;   r0x101B
                      00133 ;   r0x101C
                      00134 ;   r0x101D
                      00135 ;   r0x101E
                      00136 ;   r0x101F
                      00137 ;   r0x1020
                      00138 ;   r0x1021
                      00139 ;   r0x1022
                      00140 ;   r0x1023
                      00141 ;   r0x1024
                      00142 ;; Starting pCode block
                      00143 ;;[ICODE] ../libsdcc/fsdiv.c:55:  _entry($19) :
                      00144 ;;[ICODE] ../libsdcc/fsdiv.c:55:        proc ___fsdiv [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0000                  00145 ___fsdiv        ;Function start
                      00146 ; 2 exit points
                      00147 ;;[ICODE] ../libsdcc/fsdiv.c:55: iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsdiv_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ] = recv ___fsdiv [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
                      00148 ;       .line   55; "../libsdcc/fsdiv.c"        float __fsdiv (float a1, float a2) _FS_REENTRANT
0000   5600           00149         MOVRA   r0x1008
0001   5800           00150         MOVAR   STK00
0002   5600           00151         MOVRA   r0x1009
0003   5800           00152         MOVAR   STK01
0004   5600           00153         MOVRA   r0x100A
0005   5800           00154         MOVAR   STK02
0006   5600           00155         MOVRA   (___fsdiv_fl1_1_22 + 0)
0007   5600           00156         MOVRA   r0x100B
                      00157 ;;[ICODE] ../libsdcc/fsdiv.c:55: iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsdiv_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ] = recv ___fsdiv [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0008   5800           00158         MOVAR   STK03
0009   5600           00159         MOVRA   r0x100C
000A   5800           00160         MOVAR   STK04
000B   5600           00161         MOVRA   r0x100D
000C   5800           00162         MOVAR   STK05
000D   5600           00163         MOVRA   r0x100E
000E   5800           00164         MOVAR   STK06
000F   5600           00165         MOVRA   (___fsdiv_fl2_1_22 + 0)
0010   5600           00166         MOVRA   r0x100F
                      00167 ;;[ICODE] ../libsdcc/fsdiv.c:64:        iTemp2 [k7 lr5:6 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsdiv_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00168 ;;[ICODE] ../libsdcc/fsdiv.c:64:        *(iTemp2 [k7 lr5:6 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsdiv_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00169 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
                      00170 ;;136   MOVAR   r0x100B
                      00171 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
                      00172 ;       .line   64; "../libsdcc/fsdiv.c"        fl1.f = a1;
0011   5800           00173         MOVAR   r0x100A
0012   5600           00174         MOVRA   (___fsdiv_fl1_1_22 + 1)
                      00175 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
0013   5800           00176         MOVAR   r0x1009
0014   5600           00177         MOVRA   (___fsdiv_fl1_1_22 + 2)
                      00178 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
0015   5800           00179         MOVAR   r0x1008
0016   5600           00180         MOVRA   (___fsdiv_fl1_1_22 + 3)
                      00181 ;;[ICODE] ../libsdcc/fsdiv.c:65:        iTemp4 [k11 lr7:8 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsdiv_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00182 ;;[ICODE] ../libsdcc/fsdiv.c:65:        *(iTemp4 [k11 lr7:8 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsdiv_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ]
                      00183 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
                      00184 ;;133   MOVAR   r0x100F
                      00185 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
                      00186 ;       .line   65; "../libsdcc/fsdiv.c"        fl2.f = a2;
0017   5800           00187         MOVAR   r0x100E
0018   5600           00188         MOVRA   (___fsdiv_fl2_1_22 + 1)
                      00189 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
0019   5800           00190         MOVAR   r0x100D
001A   5600           00191         MOVRA   (___fsdiv_fl2_1_22 + 2)
                      00192 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
001B   5800           00193         MOVAR   r0x100C
001C   5600           00194         MOVRA   (___fsdiv_fl2_1_22 + 3)
                      00195 ;;[ICODE] ../libsdcc/fsdiv.c:68:        iTemp7 [k16 lr9:10 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsdiv_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00196 ;;[ICODE] ../libsdcc/fsdiv.c:68:        iTemp9 [k19 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp7 [k16 lr9:10 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00197 ;       .line   68; "../libsdcc/fsdiv.c"        exp = EXP (fl1.l) ;
001D   5800           00198         MOVAR   (___fsdiv_fl1_1_22 + 0)
001E   5600           00199         MOVRA   r0x100F
001F   5600           00200         MOVRA   r0x100B
0020   5800           00201         MOVAR   (___fsdiv_fl1_1_22 + 1)
0021   5600           00202         MOVRA   r0x100E
0022   5600           00203         MOVRA   r0x100A
0023   5800           00204         MOVAR   (___fsdiv_fl1_1_22 + 2)
0024   5600           00205         MOVRA   r0x100D
0025   5600           00206         MOVRA   r0x1009
0026   5800           00207         MOVAR   (___fsdiv_fl1_1_22 + 3)
0027   5600           00208         MOVRA   r0x100C
0028   5600           00209         MOVRA   r0x1008
                      00210 ;;[ICODE] ../libsdcc/fsdiv.c:68:        iTemp10 [k20 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] = (unsigned-long-int fixed)iTemp9 [k19 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00211 ;;130   MOVAR   r0x100B
                      00212 ;;122   MOVAR   r0x100A
                      00213 ;;137   MOVAR   r0x1009
                      00214 ;;132   MOVAR   r0x1008
                      00215 ;;[ICODE] ../libsdcc/fsdiv.c:68:        iTemp11 [k21 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = iTemp10 [k20 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] >> 0x17 {const-unsigned-char literal}
0029   5000           00216         RLAR    r0x100D
002A   5000           00217         RLAR    r0x100C
002B   5600           00218         MOVRA   r0x100F
002C   5600           00219         MOVRA   r0x100B
002D   7600           00220         CLRR    r0x100A
002E   5200           00221         RLR     r0x100A
002F   7600           00222         CLRR    r0x1009
0030   7600           00223         CLRR    r0x1008
                      00224 ;;[ICODE] ../libsdcc/fsdiv.c:68:        iTemp12 [k22 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] = iTemp11 [k21 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] & 0xff {unsigned-long-int literal}
                      00225 ;;121   MOVAR   r0x100B
0031   7600           00226         CLRR    r0x100E
0032   7600           00227         CLRR    r0x100D
0033   7600           00228         CLRR    r0x100C
                      00229 ;;[ICODE] ../libsdcc/fsdiv.c:68:        iTemp6 [k14 lr14:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsdiv_exp_1_22}[r0x1000 r0x1001 ] = (int fixed)iTemp12 [k22 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ]
0034   5800           00230         MOVAR   r0x100F
0035   5600           00231         MOVRA   r0x100B
0036   3C00           00232         MOVAI   0x00
0037   5600           00233         MOVRA   r0x100A
                      00234 ;;[ICODE] ../libsdcc/fsdiv.c:69:        iTemp14 [k24 lr16:17 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsdiv_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00235 ;;[ICODE] ../libsdcc/fsdiv.c:69:        iTemp16 [k27 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1002 r0x1003 r0x1004 r0x1005 ] = @[iTemp14 [k24 lr16:17 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00236 ;       .line   69; "../libsdcc/fsdiv.c"        exp -= EXP (fl2.l);
0038   5800           00237         MOVAR   (___fsdiv_fl2_1_22 + 0)
0039   5600           00238         MOVRA   r0x100D
003A   5600           00239         MOVRA   r0x1009
003B   5800           00240         MOVAR   (___fsdiv_fl2_1_22 + 1)
003C   5600           00241         MOVRA   r0x100C
003D   5600           00242         MOVRA   r0x1008
003E   5800           00243         MOVAR   (___fsdiv_fl2_1_22 + 2)
003F   5600           00244         MOVRA   r0x1010
0040   5600           00245         MOVRA   r0x100F
0041   5800           00246         MOVAR   (___fsdiv_fl2_1_22 + 3)
0042   5600           00247         MOVRA   r0x1011
0043   5600           00248         MOVRA   r0x100E
                      00249 ;;[ICODE] ../libsdcc/fsdiv.c:69:        iTemp17 [k28 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1006 r0x1007 r0x1008 r0x1009 ] = (unsigned-long-int fixed)iTemp16 [k27 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1002 r0x1003 r0x1004 r0x1005 ]
                      00250 ;;131   MOVAR   r0x1009
                      00251 ;;124   MOVAR   r0x1008
                      00252 ;;125   MOVAR   r0x100F
                      00253 ;;126   MOVAR   r0x100E
                      00254 ;;[ICODE] ../libsdcc/fsdiv.c:69:        iTemp18 [k29 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1002 r0x1003 r0x1004 r0x1005 ] = iTemp17 [k28 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1006 r0x1007 r0x1008 r0x1009 ] >> 0x17 {const-unsigned-char literal}
0044   5000           00255         RLAR    r0x1010
0045   5000           00256         RLAR    r0x1011
0046   5600           00257         MOVRA   r0x100D
0047   5600           00258         MOVRA   r0x1009
0048   7600           00259         CLRR    r0x1008
0049   5200           00260         RLR     r0x1008
004A   7600           00261         CLRR    r0x100F
004B   7600           00262         CLRR    r0x100E
                      00263 ;;[ICODE] ../libsdcc/fsdiv.c:69:        iTemp19 [k30 lr20:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1006 r0x1007 r0x1008 r0x1009 ] = iTemp18 [k29 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1002 r0x1003 r0x1004 r0x1005 ] & 0xff {unsigned-long-int literal}
                      00264 ;;123   MOVAR   r0x1009
004C   7600           00265         CLRR    r0x100C
004D   7600           00266         CLRR    r0x1010
004E   7600           00267         CLRR    r0x1011
                      00268 ;;[ICODE] ../libsdcc/fsdiv.c:69:        iTemp20 [k31 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1002 r0x1003 r0x1004 r0x1005 ] = (unsigned-long-int fixed)iTemp6 [k14 lr14:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsdiv_exp_1_22}[r0x1000 r0x1001 ]
004F   5800           00269         MOVAR   r0x100B
0050   5600           00270         MOVRA   r0x1009
0051   5800           00271         MOVAR   r0x100A
0052   5600           00272         MOVRA   r0x1008
0053   3C00           00273         MOVAI   0x00
0054   FE00           00274         JBCLR   r0x1008,7
0055   3CFF           00275         MOVAI   0xff
0056   5600           00276         MOVRA   r0x100E
0057   5600           00277         MOVRA   r0x100F
                      00278 ;;[ICODE] ../libsdcc/fsdiv.c:69:        iTemp21 [k32 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1006 r0x1007 r0x1008 r0x1009 ] = iTemp20 [k31 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1002 r0x1003 r0x1004 r0x1005 ] - iTemp19 [k30 lr20:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1006 r0x1007 r0x1008 r0x1009 ]
0058   5800           00279         MOVAR   r0x100D
0059   4800           00280         RSUBAR  r0x1009
005A   5600           00281         MOVRA   r0x100D
005B   5800           00282         MOVAR   r0x100C
005C   E1A7           00283         JBSET   STATUS,0
005D   6000           00284         JZAR    r0x100C
005E   A000           00285         GOTO    _00148_DS_
005F   5800           00286         MOVAR   r0x1008
0060   A000           00287         GOTO    _00149_DS_
0061                  00288 _00148_DS_
0061   4800           00289         RSUBAR  r0x1008
0062                  00290 _00149_DS_
0062   5600           00291         MOVRA   r0x100C
0063   5800           00292         MOVAR   r0x1010
0064   E1A7           00293         JBSET   STATUS,0
0065   6000           00294         JZAR    r0x1010
0066   A000           00295         GOTO    _00150_DS_
0067   5800           00296         MOVAR   r0x100F
0068   A000           00297         GOTO    _00151_DS_
0069                  00298 _00150_DS_
0069   4800           00299         RSUBAR  r0x100F
006A                  00300 _00151_DS_
006A   5600           00301         MOVRA   r0x1010
006B   5800           00302         MOVAR   r0x1011
006C   E1A7           00303         JBSET   STATUS,0
006D   6400           00304         INCAR   r0x1011
006E   4800           00305         RSUBAR  r0x100E
006F   5600           00306         MOVRA   r0x1011
                      00307 ;;[ICODE] ../libsdcc/fsdiv.c:69:        iTemp6 [k14 lr14:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsdiv_exp_1_22}[r0x1000 r0x1001 ] = (int fixed)iTemp21 [k32 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1006 r0x1007 r0x1008 r0x1009 ]
0070   5800           00308         MOVAR   r0x100D
0071   5600           00309         MOVRA   r0x100B
0072   5800           00310         MOVAR   r0x100C
0073   5600           00311         MOVRA   r0x100A
                      00312 ;;[ICODE] ../libsdcc/fsdiv.c:70:        iTemp6 [k14 lr14:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsdiv_exp_1_22}[r0x1000 r0x1001 ] = iTemp6 [k14 lr14:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsdiv_exp_1_22}[r0x1000 r0x1001 ] + 0x7e {int literal}
                      00313 ;       .line   70; "../libsdcc/fsdiv.c"        exp += EXCESS;
0074   3C7E           00314         MOVAI   0x7e
0075   7E00           00315         ADDRA   r0x100B
0076   F1A7           00316         JBCLR   STATUS,0
0077   6600           00317         INCR    r0x100A
                      00318 ;;[ICODE] ../libsdcc/fsdiv.c:73:        iTemp25 [k37 lr27:28 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsdiv_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00319 ;;[ICODE] ../libsdcc/fsdiv.c:73:        iTemp27 [k40 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1002 r0x1003 r0x1004 r0x1005 ] = @[iTemp25 [k37 lr27:28 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00320 ;       .line   73; "../libsdcc/fsdiv.c"        sign = SIGN (fl1.l) ^ SIGN (fl2.l);
0078   5800           00321         MOVAR   (___fsdiv_fl1_1_22 + 0)
0079   5600           00322         MOVRA   r0x100D
007A   5600           00323         MOVRA   r0x1009
007B   5800           00324         MOVAR   (___fsdiv_fl1_1_22 + 1)
007C   5600           00325         MOVRA   r0x100C
007D   5600           00326         MOVRA   r0x1008
007E   5800           00327         MOVAR   (___fsdiv_fl1_1_22 + 2)
007F   5600           00328         MOVRA   r0x1010
0080   5600           00329         MOVRA   r0x100F
0081   5800           00330         MOVAR   (___fsdiv_fl1_1_22 + 3)
0082   5600           00331         MOVRA   r0x1011
0083   5600           00332         MOVRA   r0x100E
                      00333 ;;[ICODE] ../libsdcc/fsdiv.c:73:        iTemp28 [k41 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1006 r0x1007 r0x1008 r0x1009 ] = (unsigned-long-int fixed)iTemp27 [k40 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1002 r0x1003 r0x1004 r0x1005 ]
                      00334 ;;103   MOVAR   r0x1009
                      00335 ;;104   MOVAR   r0x1008
                      00336 ;;105   MOVAR   r0x100F
                      00337 ;;106   MOVAR   r0x100E
                      00338 ;;[ICODE] ../libsdcc/fsdiv.c:73:        iTemp29 [k42 lr30:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1002 ] = gabit iTemp28 [k41 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1006 r0x1007 r0x1008 r0x1009 ]
0084   5800           00339         MOVAR   r0x1011
0085   3E80           00340         ANDAI   0x80
0086   E5A7           00341         JBSET   STATUS,2
0087   3C01           00342         MOVAI   0x01
0088   5600           00343         MOVRA   r0x1009
                      00344 ;;[ICODE] ../libsdcc/fsdiv.c:73:        iTemp30 [k43 lr31:32 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsdiv_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00345 ;;[ICODE] ../libsdcc/fsdiv.c:73:        iTemp32 [k46 lr32:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1006 r0x1007 r0x1008 r0x1009 ] = @[iTemp30 [k43 lr31:32 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0089   5800           00346         MOVAR   (___fsdiv_fl2_1_22 + 0)
008A   5600           00347         MOVRA   r0x1012
008B   5600           00348         MOVRA   r0x100D
008C   5800           00349         MOVAR   (___fsdiv_fl2_1_22 + 1)
008D   5600           00350         MOVRA   r0x1013
008E   5600           00351         MOVRA   r0x100C
008F   5800           00352         MOVAR   (___fsdiv_fl2_1_22 + 2)
0090   5600           00353         MOVRA   r0x1014
0091   5600           00354         MOVRA   r0x1010
0092   5800           00355         MOVAR   (___fsdiv_fl2_1_22 + 3)
0093   5600           00356         MOVRA   r0x1015
0094   5600           00357         MOVRA   r0x1011
                      00358 ;;[ICODE] ../libsdcc/fsdiv.c:73:        iTemp33 [k47 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x100A r0x100B r0x100C r0x100D ] = (unsigned-long-int fixed)iTemp32 [k46 lr32:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1006 r0x1007 r0x1008 r0x1009 ]
                      00359 ;;134   MOVAR   r0x100D
                      00360 ;;108   MOVAR   r0x100C
                      00361 ;;109   MOVAR   r0x1010
                      00362 ;;110   MOVAR   r0x1011
                      00363 ;;[ICODE] ../libsdcc/fsdiv.c:73:        iTemp34 [k48 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1006 ] = gabit iTemp33 [k47 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x100A r0x100B r0x100C r0x100D ]
0095   5800           00364         MOVAR   r0x1015
0096   3E80           00365         ANDAI   0x80
0097   E5A7           00366         JBSET   STATUS,2
0098   3C01           00367         MOVAI   0x01
0099   5600           00368         MOVRA   r0x100D
                      00369 ;;[ICODE] ../libsdcc/fsdiv.c:73:        iTemp24 [k35 lr35:118 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ ___fsdiv_sign_1_22}[r0x1002 ] = iTemp29 [k42 lr30:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1002 ] ^ iTemp34 [k48 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1006 ]
009A   5800           00370         MOVAR   r0x100D
009B   4200           00371         XORRA   r0x1009
                      00372 ;;[ICODE] ../libsdcc/fsdiv.c:76:        iTemp36 [k50 lr37:38 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsdiv_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00373 ;;[ICODE] ../libsdcc/fsdiv.c:76:        iTemp38 [k53 lr38:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1006 r0x100A r0x100B r0x100C ] = @[iTemp36 [k50 lr37:38 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00374 ;       .line   76; "../libsdcc/fsdiv.c"        if (!fl2.l)
009C   5800           00375         MOVAR   (___fsdiv_fl2_1_22 + 0)
009D   5600           00376         MOVRA   r0x100D
009E   5800           00377         MOVAR   (___fsdiv_fl2_1_22 + 1)
009F   5600           00378         MOVRA   r0x1012
00A0   5800           00379         MOVAR   (___fsdiv_fl2_1_22 + 2)
00A1   5600           00380         MOVRA   r0x1013
00A2   5800           00381         MOVAR   (___fsdiv_fl2_1_22 + 3)
00A3   5600           00382         MOVRA   r0x1014
                      00383 ;;[ICODE] ../libsdcc/fsdiv.c:76:        if iTemp38 [k53 lr38:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1006 r0x100A r0x100B r0x100C ] != 0 goto _iffalse_0($2)
00A4   5800           00384         MOVAR   r0x100D
00A5   5C00           00385         ORAR    r0x1012
00A6   5C00           00386         ORAR    r0x1013
00A7   5C00           00387         ORAR    r0x1014
00A8   E5A7           00388         JBSET   STATUS,2
00A9   A000           00389         GOTO    _00106_DS_
                      00390 ;;[ICODE] ../libsdcc/fsdiv.c:78:        iTemp39 [k54 lr40:41 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsdiv_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00391 ;;[ICODE] ../libsdcc/fsdiv.c:78:        *(iTemp39 [k54 lr40:41 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat]) := 0x7fc00000 {const-long-int literal}
                      00392 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
                      00393 ;       .line   78; "../libsdcc/fsdiv.c"        fl2.l = 0x7FC00000;
00AA   7600           00394         CLRR    (___fsdiv_fl2_1_22 + 0)
                      00395 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
00AB   7600           00396         CLRR    (___fsdiv_fl2_1_22 + 1)
                      00397 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
00AC   3CC0           00398         MOVAI   0xc0
00AD   5600           00399         MOVRA   (___fsdiv_fl2_1_22 + 2)
                      00400 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
00AE   3C7F           00401         MOVAI   0x7f
00AF   5600           00402         MOVRA   (___fsdiv_fl2_1_22 + 3)
                      00403 ;;[ICODE] ../libsdcc/fsdiv.c:79:        iTemp41 [k57 lr42:43 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsdiv_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00404 ;;[ICODE] ../libsdcc/fsdiv.c:79:        iTemp43 [k60 lr43:44 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1006 r0x100A r0x100B r0x100C ] = @[iTemp41 [k57 lr42:43 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00405 ;       .line   79; "../libsdcc/fsdiv.c"        return (fl2.f);
00B0   5800           00406         MOVAR   (___fsdiv_fl2_1_22 + 0)
00B1   5600           00407         MOVRA   r0x100D
00B2   5800           00408         MOVAR   (___fsdiv_fl2_1_22 + 1)
00B3   5600           00409         MOVRA   r0x1012
00B4   5800           00410         MOVAR   (___fsdiv_fl2_1_22 + 2)
00B5   5600           00411         MOVRA   r0x1013
00B6   5800           00412         MOVAR   (___fsdiv_fl2_1_22 + 3)
00B7   5600           00413         MOVRA   r0x1014
                      00414 ;;[ICODE] ../libsdcc/fsdiv.c:79:        ret iTemp43 [k60 lr43:44 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1006 r0x100A r0x100B r0x100C ]
00B8   5800           00415         MOVAR   r0x100D
00B9   5600           00416         MOVRA   STK02
00BA   5800           00417         MOVAR   r0x1012
00BB   5600           00418         MOVRA   STK01
00BC   5800           00419         MOVAR   r0x1013
00BD   5600           00420         MOVRA   STK00
00BE   5800           00421         MOVAR   r0x1014
00BF   A000           00422         GOTO    _00122_DS_
                      00423 ;;[ICODE] ../libsdcc/fsdiv.c:79:  _iffalse_0($2) :
                      00424 ;;[ICODE] ../libsdcc/fsdiv.c:83:        iTemp44 [k61 lr46:47 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsdiv_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00425 ;;[ICODE] ../libsdcc/fsdiv.c:83:        iTemp46 [k64 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1006 r0x100A r0x100B r0x100C ] = @[iTemp44 [k61 lr46:47 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
00C0                  00426 _00106_DS_
                      00427 ;       .line   83; "../libsdcc/fsdiv.c"        if (!fl1.l)
00C0   5800           00428         MOVAR   (___fsdiv_fl1_1_22 + 0)
00C1   5600           00429         MOVRA   r0x100D
00C2   5800           00430         MOVAR   (___fsdiv_fl1_1_22 + 1)
00C3   5600           00431         MOVRA   r0x1012
00C4   5800           00432         MOVAR   (___fsdiv_fl1_1_22 + 2)
00C5   5600           00433         MOVRA   r0x1013
00C6   5800           00434         MOVAR   (___fsdiv_fl1_1_22 + 3)
00C7   5600           00435         MOVRA   r0x1014
                      00436 ;;[ICODE] ../libsdcc/fsdiv.c:83:        if iTemp46 [k64 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1006 r0x100A r0x100B r0x100C ] != 0 goto _iffalse_1($4)
00C8   5800           00437         MOVAR   r0x100D
00C9   5C00           00438         ORAR    r0x1012
00CA   5C00           00439         ORAR    r0x1013
00CB   5C00           00440         ORAR    r0x1014
00CC   E5A7           00441         JBSET   STATUS,2
00CD   A000           00442         GOTO    _00108_DS_
                      00443 ;;[ICODE] ../libsdcc/fsdiv.c:84:        ret 0 {float literal}
                      00444 ;       .line   84; "../libsdcc/fsdiv.c"        return (0);
00CE   3C00           00445         MOVAI   0x00
00CF   5600           00446         MOVRA   STK02
00D0   3C00           00447         MOVAI   0x00
00D1   5600           00448         MOVRA   STK01
00D2   3C00           00449         MOVAI   0x00
00D3   5600           00450         MOVRA   STK00
00D4   3C00           00451         MOVAI   0x00
00D5   A000           00452         GOTO    _00122_DS_
                      00453 ;;[ICODE] ../libsdcc/fsdiv.c:84:  _iffalse_1($4) :
                      00454 ;;[ICODE] ../libsdcc/fsdiv.c:87:        iTemp48 [k67 lr51:52 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsdiv_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00455 ;;[ICODE] ../libsdcc/fsdiv.c:87:        iTemp50 [k70 lr52:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1006 r0x100A r0x100B r0x100C ] = @[iTemp48 [k67 lr51:52 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
00D6                  00456 _00108_DS_
                      00457 ;       .line   87; "../libsdcc/fsdiv.c"        mant1 = MANT (fl1.l);
00D6   5800           00458         MOVAR   (___fsdiv_fl1_1_22 + 0)
00D7   5600           00459         MOVRA   r0x1015
00D8   5600           00460         MOVRA   r0x100D
00D9   5800           00461         MOVAR   (___fsdiv_fl1_1_22 + 1)
00DA   5600           00462         MOVRA   r0x1016
00DB   5600           00463         MOVRA   r0x1012
00DC   5800           00464         MOVAR   (___fsdiv_fl1_1_22 + 2)
00DD   5600           00465         MOVRA   r0x1017
00DE   5600           00466         MOVRA   r0x1013
00DF   5800           00467         MOVAR   (___fsdiv_fl1_1_22 + 3)
00E0   5600           00468         MOVRA   r0x1018
00E1   5600           00469         MOVRA   r0x1014
                      00470 ;;[ICODE] ../libsdcc/fsdiv.c:87:        iTemp51 [k71 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x100D r0x100E r0x100F r0x1010 ] = (unsigned-long-int register)iTemp50 [k70 lr52:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1006 r0x100A r0x100B r0x100C ]
                      00471 ;;127   MOVAR   r0x100D
                      00472 ;;128   MOVAR   r0x1012
                      00473 ;;112   MOVAR   r0x1013
                      00474 ;;135   MOVAR   r0x1014
                      00475 ;;[ICODE] ../libsdcc/fsdiv.c:87:        iTemp52 [k72 lr54:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1006 r0x100A r0x100B r0x100C ] = iTemp51 [k71 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x100D r0x100E r0x100F r0x1010 ] & 0x7fffff {unsigned-long-int literal}
00E2   5800           00476         MOVAR   r0x1015
00E3   5600           00477         MOVRA   r0x100D
00E4   5800           00478         MOVAR   r0x1016
00E5   5600           00479         MOVRA   r0x1012
00E6   3C7F           00480         MOVAI   0x7f
00E7   7800           00481         ANDAR   r0x1017
00E8   5600           00482         MOVRA   r0x1013
00E9   7600           00483         CLRR    r0x1014
                      00484 ;;[ICODE] ../libsdcc/fsdiv.c:87:        iTemp47 [k65 lr55:87 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_mant1_1_22}[r0x1006 r0x100A r0x100B r0x100C ] = iTemp52 [k72 lr54:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1006 r0x100A r0x100B r0x100C ] | 0x800000 {unsigned-long-int literal}
00EA   CE00           00485         BSET    r0x1013,7
                      00486 ;;[ICODE] ../libsdcc/fsdiv.c:88:        iTemp55 [k76 lr57:58 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsdiv_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00487 ;;[ICODE] ../libsdcc/fsdiv.c:88:        iTemp57 [k79 lr58:59 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x100D r0x100E r0x100F r0x1010 ] = @[iTemp55 [k76 lr57:58 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00488 ;       .line   88; "../libsdcc/fsdiv.c"        mant2 = MANT (fl2.l);
00EB   5800           00489         MOVAR   (___fsdiv_fl2_1_22 + 0)
00EC   5600           00490         MOVRA   r0x1015
00ED   5800           00491         MOVAR   (___fsdiv_fl2_1_22 + 1)
00EE   5600           00492         MOVRA   r0x101A
00EF   5600           00493         MOVRA   r0x1016
00F0   5800           00494         MOVAR   (___fsdiv_fl2_1_22 + 2)
00F1   5600           00495         MOVRA   r0x101B
00F2   5600           00496         MOVRA   r0x1017
00F3   5800           00497         MOVAR   (___fsdiv_fl2_1_22 + 3)
00F4   5600           00498         MOVRA   r0x101C
00F5   5600           00499         MOVRA   r0x1018
                      00500 ;;[ICODE] ../libsdcc/fsdiv.c:88:        iTemp58 [k80 lr59:60 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1011 r0x1012 r0x1013 r0x1014 ] = (unsigned-long-int register)iTemp57 [k79 lr58:59 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x100D r0x100E r0x100F r0x1010 ]
00F6   5800           00501         MOVAR   r0x1015
00F7   5600           00502         MOVRA   r0x1015
00F8   5600           00503         MOVRA   r0x1019
                      00504 ;;117   MOVAR   r0x1016
                      00505 ;;118   MOVAR   r0x1017
                      00506 ;;119   MOVAR   r0x1018
                      00507 ;;[ICODE] ../libsdcc/fsdiv.c:88:        iTemp59 [k81 lr60:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x100D r0x100E r0x100F r0x1010 ] = iTemp58 [k80 lr59:60 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1011 r0x1012 r0x1013 r0x1014 ] & 0x7fffff {unsigned-long-int literal}
                      00508 ;;120   MOVAR   r0x1019
00F9   5800           00509         MOVAR   r0x101A
00FA   5600           00510         MOVRA   r0x1016
00FB   3C7F           00511         MOVAI   0x7f
00FC   7800           00512         ANDAR   r0x101B
00FD   5600           00513         MOVRA   r0x1017
00FE   7600           00514         CLRR    r0x1018
                      00515 ;;[ICODE] ../libsdcc/fsdiv.c:88:        iTemp54 [k74 lr61:87 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_mant2_1_22}[r0x100D r0x100E r0x100F r0x1010 ] = iTemp59 [k81 lr60:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x100D r0x100E r0x100F r0x1010 ] | 0x800000 {unsigned-long-int literal}
00FF   CE00           00516         BSET    r0x1017,7
                      00517 ;;[ICODE] ../libsdcc/fsdiv.c:91:        iTemp61 [k83 lr63:64 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp47 [k65 lr55:87 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_mant1_1_22}[r0x1006 r0x100A r0x100B r0x100C ] < iTemp54 [k74 lr61:87 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_mant2_1_22}[r0x100D r0x100E r0x100F r0x1010 ]
0100   3C00           00518         MOVAI   0x00
0101   3F80           00519         ADDAI   0x80
0102   5600           00520         MOVRA   r0x101D
0103   3C00           00521         MOVAI   0x00
0104   3F80           00522         ADDAI   0x80
0105   4800           00523         RSUBAR  r0x101D
0106   E5A7           00524         JBSET   STATUS,2
0107   A000           00525         GOTO    _00152_DS_
0108   5800           00526         MOVAR   r0x1017
0109   4800           00527         RSUBAR  r0x1013
010A   E5A7           00528         JBSET   STATUS,2
010B   A000           00529         GOTO    _00152_DS_
010C   5800           00530         MOVAR   r0x1016
010D   4800           00531         RSUBAR  r0x1012
010E   E5A7           00532         JBSET   STATUS,2
010F   A000           00533         GOTO    _00152_DS_
0110   5800           00534         MOVAR   r0x1015
0111   4800           00535         RSUBAR  r0x100D
0112                  00536 _00152_DS_
0112   F1A7           00537         JBCLR   STATUS,0
0113   A000           00538         GOTO    _00110_DS_
                      00539 ;;genSkipc:3246: created from rifx:0xbfebab80
                      00540 ;;[ICODE] ../libsdcc/fsdiv.c:91:        if iTemp61 [k83 lr63:64 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($6)
                      00541 ;;[ICODE] ../libsdcc/fsdiv.c:93:        iTemp47 [k65 lr55:87 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_mant1_1_22}[r0x1006 r0x100A r0x100B r0x100C ] = iTemp47 [k65 lr55:87 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_mant1_1_22}[r0x1006 r0x100A r0x100B r0x100C ] << 0x1 {const-unsigned-char literal}
                      00542 ;       .line   93; "../libsdcc/fsdiv.c"        mant1 <<= 1;
0114   D1A7           00543         BCLR    STATUS,0
0115   5200           00544         RLR     r0x100D
0116   5200           00545         RLR     r0x1012
0117   5200           00546         RLR     r0x1013
0118   5200           00547         RLR     r0x1014
                      00548 ;;[ICODE] ../libsdcc/fsdiv.c:94:        iTemp6 [k14 lr14:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsdiv_exp_1_22}[r0x1000 r0x1001 ] = iTemp6 [k14 lr14:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsdiv_exp_1_22}[r0x1000 r0x1001 ] - 0x1 {const-unsigned-char literal}
                      00549 ;       .line   94; "../libsdcc/fsdiv.c"        exp--;
0119   3CFF           00550         MOVAI   0xff
011A   7E00           00551         ADDRA   r0x100B
011B   E1A7           00552         JBSET   STATUS,0
011C   6E00           00553         DECR    r0x100A
                      00554 ;;[ICODE] ../libsdcc/fsdiv.c:94:  _iffalse_2($6) :
                      00555 ;;[ICODE] ../libsdcc/fsdiv.c:98:        iTemp65 [k87 lr70:87 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsdiv_mask_1_22}[r0x1011 r0x1012 r0x1013 r0x1014 ] := 0x1000000 {const-long-int literal}
011D                  00556 _00110_DS_
                      00557 ;       .line   98; "../libsdcc/fsdiv.c"        mask = 0x1000000;
011D   7600           00558         CLRR    r0x1019
011E   7600           00559         CLRR    r0x101A
011F   7600           00560         CLRR    r0x101B
0120   3C01           00561         MOVAI   0x01
0121   5600           00562         MOVRA   r0x101C
                      00563 ;;[ICODE] ../libsdcc/fsdiv.c:99:        iTemp66 [k89 lr71:127 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_result_1_22}[r0x1015 r0x1016 r0x1017 r0x1018 ] := 0x0 {long-int literal}
                      00564 ;       .line   99; "../libsdcc/fsdiv.c"        result = 0;
0122   7600           00565         CLRR    r0x101D
0123   7600           00566         CLRR    r0x101E
0124   7600           00567         CLRR    r0x101F
0125   7600           00568         CLRR    r0x1020
                      00569 ;;[ICODE] ../libsdcc/fsdiv.c:100:  _whilecontinue_0($9) :
                      00570 ;;[ICODE] ../libsdcc/fsdiv.c:100:       if iTemp65 [k87 lr70:87 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsdiv_mask_1_22}[r0x1011 r0x1012 r0x1013 r0x1014 ] == 0 goto _whilebreak_0($11)
0126                  00571 _00113_DS_
                      00572 ;       .line   100; "../libsdcc/fsdiv.c"       while (mask)
0126   5800           00573         MOVAR   r0x1019
0127   5C00           00574         ORAR    r0x101A
0128   5C00           00575         ORAR    r0x101B
0129   5C00           00576         ORAR    r0x101C
012A   F5A7           00577         JBCLR   STATUS,2
012B   A000           00578         GOTO    _00115_DS_
                      00579 ;;[ICODE] ../libsdcc/fsdiv.c:102:       iTemp67 [k91 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp47 [k65 lr55:87 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_mant1_1_22}[r0x1006 r0x100A r0x100B r0x100C ] < iTemp54 [k74 lr61:87 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_mant2_1_22}[r0x100D r0x100E r0x100F r0x1010 ]
                      00580 ;       .line   102; "../libsdcc/fsdiv.c"       if (mant1 >= mant2)
012C   5800           00581         MOVAR   r0x1014
012D   3F80           00582         ADDAI   0x80
012E   5600           00583         MOVRA   r0x1021
012F   5800           00584         MOVAR   r0x1018
0130   3F80           00585         ADDAI   0x80
0131   4800           00586         RSUBAR  r0x1021
0132   E5A7           00587         JBSET   STATUS,2
0133   A000           00588         GOTO    _00153_DS_
0134   5800           00589         MOVAR   r0x1017
0135   4800           00590         RSUBAR  r0x1013
0136   E5A7           00591         JBSET   STATUS,2
0137   A000           00592         GOTO    _00153_DS_
0138   5800           00593         MOVAR   r0x1016
0139   4800           00594         RSUBAR  r0x1012
013A   E5A7           00595         JBSET   STATUS,2
013B   A000           00596         GOTO    _00153_DS_
013C   5800           00597         MOVAR   r0x1015
013D   4800           00598         RSUBAR  r0x100D
013E                  00599 _00153_DS_
013E   E1A7           00600         JBSET   STATUS,0
013F   A000           00601         GOTO    _00112_DS_
                      00602 ;;genSkipc:3246: created from rifx:0xbfebab80
                      00603 ;;[ICODE] ../libsdcc/fsdiv.c:102:       if iTemp67 [k91 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_3($8)
                      00604 ;;[ICODE] ../libsdcc/fsdiv.c:104:       iTemp68 [k92 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1019 r0x101A r0x101B r0x101C ] = (unsigned-long-int fixed)iTemp66 [k89 lr71:127 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_result_1_22}[r0x1015 r0x1016 r0x1017 r0x1018 ]
                      00605 ;       .line   104; "../libsdcc/fsdiv.c"       result |= mask;
0140   5800           00606         MOVAR   r0x101D
0141   5600           00607         MOVRA   r0x1021
0142   5800           00608         MOVAR   r0x101E
0143   5600           00609         MOVRA   r0x1022
0144   5800           00610         MOVAR   r0x101F
0145   5600           00611         MOVRA   r0x1023
0146   5800           00612         MOVAR   r0x1020
0147   5600           00613         MOVRA   r0x1024
                      00614 ;;[ICODE] ../libsdcc/fsdiv.c:104:       iTemp66 [k89 lr71:127 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_result_1_22}[r0x1015 r0x1016 r0x1017 r0x1018 ] = iTemp68 [k92 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1019 r0x101A r0x101B r0x101C ] | iTemp65 [k87 lr70:87 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsdiv_mask_1_22}[r0x1011 r0x1012 r0x1013 r0x1014 ]
0148   5800           00615         MOVAR   r0x1019
0149   5C00           00616         ORAR    r0x1021
014A   5600           00617         MOVRA   r0x101D
014B   5800           00618         MOVAR   r0x101A
014C   5C00           00619         ORAR    r0x1022
014D   5600           00620         MOVRA   r0x101E
014E   5800           00621         MOVAR   r0x101B
014F   5C00           00622         ORAR    r0x1023
0150   5600           00623         MOVRA   r0x101F
0151   5800           00624         MOVAR   r0x101C
0152   5C00           00625         ORAR    r0x1024
0153   5600           00626         MOVRA   r0x1020
                      00627 ;;[ICODE] ../libsdcc/fsdiv.c:105:       iTemp47 [k65 lr55:87 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_mant1_1_22}[r0x1006 r0x100A r0x100B r0x100C ] = iTemp47 [k65 lr55:87 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_mant1_1_22}[r0x1006 r0x100A r0x100B r0x100C ] - iTemp54 [k74 lr61:87 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_mant2_1_22}[r0x100D r0x100E r0x100F r0x1010 ]
                      00628 ;       .line   105; "../libsdcc/fsdiv.c"       mant1 -= mant2;
0154   5800           00629         MOVAR   r0x1015
0155   4A00           00630         RSUBRA  r0x100D
0156   5800           00631         MOVAR   r0x1016
0157   E1A7           00632         JBSET   STATUS,0
0158   6000           00633         JZAR    r0x1016
0159   4A00           00634         RSUBRA  r0x1012
015A   5800           00635         MOVAR   r0x1017
015B   E1A7           00636         JBSET   STATUS,0
015C   6000           00637         JZAR    r0x1017
015D   4A00           00638         RSUBRA  r0x1013
015E   5800           00639         MOVAR   r0x1018
015F   E1A7           00640         JBSET   STATUS,0
0160   6000           00641         JZAR    r0x1018
0161   4A00           00642         RSUBRA  r0x1014
                      00643 ;;[ICODE] ../libsdcc/fsdiv.c:105:  _iffalse_3($8) :
                      00644 ;;[ICODE] ../libsdcc/fsdiv.c:107:       iTemp47 [k65 lr55:87 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_mant1_1_22}[r0x1006 r0x100A r0x100B r0x100C ] = iTemp47 [k65 lr55:87 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_mant1_1_22}[r0x1006 r0x100A r0x100B r0x100C ] << 0x1 {const-unsigned-char literal}
0162                  00645 _00112_DS_
                      00646 ;       .line   107; "../libsdcc/fsdiv.c"       mant1 <<= 1;
0162   D1A7           00647         BCLR    STATUS,0
0163   5200           00648         RLR     r0x100D
0164   5200           00649         RLR     r0x1012
0165   5200           00650         RLR     r0x1013
0166   5200           00651         RLR     r0x1014
                      00652 ;;[ICODE] ../libsdcc/fsdiv.c:108:       iTemp65 [k87 lr70:87 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsdiv_mask_1_22}[r0x1011 r0x1012 r0x1013 r0x1014 ] = iTemp65 [k87 lr70:87 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsdiv_mask_1_22}[r0x1011 r0x1012 r0x1013 r0x1014 ] >> 0x1 {const-unsigned-char literal}
                      00653 ;;shiftRight_Left2ResultLit:5278: shCount=1, size=4, sign=0, same=1, offr=0
                      00654 ;       .line   108; "../libsdcc/fsdiv.c"       mask >>= 1;
0167   D1A7           00655         BCLR    STATUS,0
0168   4E00           00656         RRR     r0x101C
0169   4E00           00657         RRR     r0x101B
016A   4E00           00658         RRR     r0x101A
016B   4E00           00659         RRR     r0x1019
                      00660 ;;[ICODE] ../libsdcc/fsdiv.c:108:        goto _whilecontinue_0($9)
016C   A000           00661         GOTO    _00113_DS_
                      00662 ;;[ICODE] ../libsdcc/fsdiv.c:108:  _whilebreak_0($11) :
                      00663 ;;[ICODE] ../libsdcc/fsdiv.c:112:       iTemp66 [k89 lr71:127 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_result_1_22}[r0x1015 r0x1016 r0x1017 r0x1018 ] = iTemp66 [k89 lr71:127 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_result_1_22}[r0x1015 r0x1016 r0x1017 r0x1018 ] + 0x1 {long-int literal}
016D                  00664 _00115_DS_
                      00665 ;       .line   112; "../libsdcc/fsdiv.c"       result += 1;
016D   6600           00666         INCR    r0x101D
016E   F5A7           00667         JBCLR   STATUS,2
016F   6600           00668         INCR    r0x101E
0170   F5A7           00669         JBCLR   STATUS,2
0171   6600           00670         INCR    r0x101F
0172   F5A7           00671         JBCLR   STATUS,2
0173   6600           00672         INCR    r0x1020
                      00673 ;;[ICODE] ../libsdcc/fsdiv.c:115:       iTemp6 [k14 lr14:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsdiv_exp_1_22}[r0x1000 r0x1001 ] = iTemp6 [k14 lr14:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsdiv_exp_1_22}[r0x1000 r0x1001 ] + 0x1 {const-unsigned-char literal}
                      00674 ;       .line   115; "../libsdcc/fsdiv.c"       exp++;
0174   6600           00675         INCR    r0x100B
0175   F5A7           00676         JBCLR   STATUS,2
0176   6600           00677         INCR    r0x100A
                      00678 ;;[ICODE] ../libsdcc/fsdiv.c:116:       iTemp66 [k89 lr71:127 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_result_1_22}[r0x1015 r0x1016 r0x1017 r0x1018 ] = iTemp66 [k89 lr71:127 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_result_1_22}[r0x1015 r0x1016 r0x1017 r0x1018 ] >> 0x1 {const-unsigned-char literal}
                      00679 ;;shiftRight_Left2ResultLit:5278: shCount=1, size=4, sign=1, same=1, offr=0
                      00680 ;       .line   116; "../libsdcc/fsdiv.c"       result >>= 1;
0177   D1A7           00681         BCLR    STATUS,0
0178   FE00           00682         JBCLR   r0x1020,7
0179   C1A7           00683         BSET    STATUS,0
017A   4E00           00684         RRR     r0x1020
017B   4E00           00685         RRR     r0x101F
017C   4E00           00686         RRR     r0x101E
017D   4E00           00687         RRR     r0x101D
                      00688 ;;[ICODE] ../libsdcc/fsdiv.c:118:       iTemp77 [k101 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1006 r0x100A r0x100B r0x100C ] = (unsigned-long-int register)iTemp66 [k89 lr71:127 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_result_1_22}[r0x1015 r0x1016 r0x1017 r0x1018 ]
                      00689 ;       .line   118; "../libsdcc/fsdiv.c"       result &= ~HIDDEN;
017E   5800           00690         MOVAR   r0x101D
017F   5600           00691         MOVRA   r0x101D
0180   5600           00692         MOVRA   r0x100D
0181   5800           00693         MOVAR   r0x101E
0182   5600           00694         MOVRA   r0x101E
0183   5600           00695         MOVRA   r0x1012
0184   5800           00696         MOVAR   r0x101F
0185   5600           00697         MOVRA   r0x1013
0186   5800           00698         MOVAR   r0x1020
0187   5600           00699         MOVRA   r0x1020
0188   5600           00700         MOVRA   r0x1014
                      00701 ;;[ICODE] ../libsdcc/fsdiv.c:118:       iTemp66 [k89 lr71:127 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_result_1_22}[r0x1015 r0x1016 r0x1017 r0x1018 ] = iTemp77 [k101 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1006 r0x100A r0x100B r0x100C ] & 0xff7fffff {unsigned-long-int literal}
                      00702 ;;107   MOVAR   r0x100D
                      00703 ;;111   MOVAR   r0x1012
0189   3C7F           00704         MOVAI   0x7f
018A   7800           00705         ANDAR   r0x1013
018B   5600           00706         MOVRA   r0x101F
                      00707 ;;129   MOVAR   r0x1014
                      00708 ;;[ICODE] ../libsdcc/fsdiv.c:121:       iTemp79 [k103 lr98:99 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp6 [k14 lr14:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsdiv_exp_1_22}[r0x1000 r0x1001 ] < 0x100 {const-int literal}
                      00709 ;;signed compare: left < lit(0x100=256), size=2, mask=ffff
                      00710 ;       .line   121; "../libsdcc/fsdiv.c"       if (exp >= 0x100)
018C   5800           00711         MOVAR   r0x100A
018D   3F80           00712         ADDAI   0x80
018E   3F7F           00713         ADDAI   0x7f
018F   E5A7           00714         JBSET   STATUS,2
0190   A000           00715         GOTO    _00154_DS_
0191   3C00           00716         MOVAI   0x00
0192   4800           00717         RSUBAR  r0x100B
0193                  00718 _00154_DS_
0193   E1A7           00719         JBSET   STATUS,0
0194   A000           00720         GOTO    _00120_DS_
                      00721 ;;genSkipc:3246: created from rifx:0xbfebab80
                      00722 ;;[ICODE] ../libsdcc/fsdiv.c:121:       if iTemp79 [k103 lr98:99 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_5($16)
                      00723 ;;[ICODE] ../libsdcc/fsdiv.c:122:       iTemp80 [k104 lr100:108 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsdiv_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00724 ;;[ICODE] ../libsdcc/fsdiv.c:122:       if iTemp24 [k35 lr35:118 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ ___fsdiv_sign_1_22}[r0x1002 ] == 0 goto iTempLbl0($20)
                      00725 ;       .line   122; "../libsdcc/fsdiv.c"       fl1.l = (sign ? SIGNBIT : 0) | 0x7F800000;
0195   3C00           00726         MOVAI   0x00
0196   5C00           00727         ORAR    r0x1009
0197   F5A7           00728         JBCLR   STATUS,2
0198   A000           00729         GOTO    _00124_DS_
                      00730 ;;[ICODE] ../libsdcc/fsdiv.c:122:       iTemp82 [k107 lr102:107 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1006 r0x100A r0x100B r0x100C ] := 0x80000000 {unsigned-long-int literal}
0199   7600           00731         CLRR    r0x100D
019A   7600           00732         CLRR    r0x1012
019B   7600           00733         CLRR    r0x1013
019C   3C80           00734         MOVAI   0x80
019D   5600           00735         MOVRA   r0x1014
                      00736 ;;[ICODE] ../libsdcc/fsdiv.c:122:        goto iTempLbl1($21)
019E   A000           00737         GOTO    _00125_DS_
                      00738 ;;[ICODE] ../libsdcc/fsdiv.c:122:  iTempLbl0($20) :
                      00739 ;;[ICODE] ../libsdcc/fsdiv.c:122:       iTemp82 [k107 lr102:107 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1006 r0x100A r0x100B r0x100C ] := 0x0 {unsigned-long-int literal}
019F                  00740 _00124_DS_
019F   7600           00741         CLRR    r0x100D
01A0   7600           00742         CLRR    r0x1012
01A1   7600           00743         CLRR    r0x1013
01A2   7600           00744         CLRR    r0x1014
                      00745 ;;[ICODE] ../libsdcc/fsdiv.c:122:  iTempLbl1($21) :
                      00746 ;;[ICODE] ../libsdcc/fsdiv.c:122:       iTemp83 [k108 lr107:108 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1006 r0x100A r0x100B r0x100C ] = iTemp82 [k107 lr102:107 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1006 r0x100A r0x100B r0x100C ] | 0x7f800000 {unsigned-long-int literal}
01A3                  00747 _00125_DS_
01A3   CE00           00748         BSET    r0x1013,7
01A4   3C7F           00749         MOVAI   0x7f
01A5   5E00           00750         ORRA    r0x1014
                      00751 ;;[ICODE] ../libsdcc/fsdiv.c:122:       *(iTemp80 [k104 lr100:108 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat]) := iTemp83 [k108 lr107:108 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1006 r0x100A r0x100B r0x100C ]
                      00752 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
01A6   5800           00753         MOVAR   r0x100D
01A7   5600           00754         MOVRA   (___fsdiv_fl1_1_22 + 0)
                      00755 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
01A8   5800           00756         MOVAR   r0x1012
01A9   5600           00757         MOVRA   (___fsdiv_fl1_1_22 + 1)
                      00758 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
01AA   5800           00759         MOVAR   r0x1013
01AB   5600           00760         MOVRA   (___fsdiv_fl1_1_22 + 2)
                      00761 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
01AC   5800           00762         MOVAR   r0x1014
01AD   5600           00763         MOVRA   (___fsdiv_fl1_1_22 + 3)
                      00764 ;;[ICODE] ../libsdcc/fsdiv.c:122:        goto _ifend_5($17)
01AE   A000           00765         GOTO    _00121_DS_
                      00766 ;;[ICODE] ../libsdcc/fsdiv.c:122:  _iffalse_5($16) :
                      00767 ;;[ICODE] ../libsdcc/fsdiv.c:123:       iTemp84 [k109 lr111:112 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp6 [k14 lr14:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsdiv_exp_1_22}[r0x1000 r0x1001 ] < 0x0 {int literal}
                      00768 ;;signed compare: left < lit(0x0=0), size=2, mask=ffff
01AF                  00769 _00120_DS_
                      00770 ;       .line   123; "../libsdcc/fsdiv.c"       else if (exp < 0)
01AF   C1A7           00771         BSET    STATUS,0
01B0   EE00           00772         JBSET   r0x100A,7
01B1   D1A7           00773         BCLR    STATUS,0
01B2   E1A7           00774         JBSET   STATUS,0
01B3   A000           00775         GOTO    _00117_DS_
                      00776 ;;genSkipc:3246: created from rifx:0xbfebab80
                      00777 ;;[ICODE] ../libsdcc/fsdiv.c:123:       if iTemp84 [k109 lr111:112 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_4($13)
                      00778 ;;[ICODE] ../libsdcc/fsdiv.c:124:       iTemp85 [k110 lr113:114 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsdiv_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00779 ;;[ICODE] ../libsdcc/fsdiv.c:124:       *(iTemp85 [k110 lr113:114 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat]) := 0x0 {volatile-long-int literal}
                      00780 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
                      00781 ;       .line   124; "../libsdcc/fsdiv.c"       fl1.l = 0;
01B4   7600           00782         CLRR    (___fsdiv_fl1_1_22 + 0)
                      00783 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
01B5   7600           00784         CLRR    (___fsdiv_fl1_1_22 + 1)
                      00785 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
01B6   7600           00786         CLRR    (___fsdiv_fl1_1_22 + 2)
                      00787 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
01B7   7600           00788         CLRR    (___fsdiv_fl1_1_22 + 3)
                      00789 ;;[ICODE] ../libsdcc/fsdiv.c:124:        goto _ifend_5($17)
01B8   A000           00790         GOTO    _00121_DS_
                      00791 ;;[ICODE] ../libsdcc/fsdiv.c:124:  _iffalse_4($13) :
                      00792 ;;[ICODE] ../libsdcc/fsdiv.c:126:       iTemp87 [k113 lr117:129 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsdiv_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00793 ;;[ICODE] ../libsdcc/fsdiv.c:126:       if iTemp24 [k35 lr35:118 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ ___fsdiv_sign_1_22}[r0x1002 ] == 0 goto iTempLbl2($22)
01B9                  00794 _00117_DS_
                      00795 ;       .line   126; "../libsdcc/fsdiv.c"       fl1.l = PACK (sign ? SIGNBIT : 0 , exp, result);
01B9   3C00           00796         MOVAI   0x00
01BA   5C00           00797         ORAR    r0x1009
01BB   F5A7           00798         JBCLR   STATUS,2
01BC   A000           00799         GOTO    _00126_DS_
                      00800 ;;[ICODE] ../libsdcc/fsdiv.c:126:       iTemp89 [k116 lr119:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1002 r0x1006 r0x100A r0x100B ] := 0x80000000 {unsigned-long-int literal}
01BD   7600           00801         CLRR    r0x1009
01BE   7600           00802         CLRR    r0x100D
01BF   7600           00803         CLRR    r0x1012
01C0   3C80           00804         MOVAI   0x80
01C1   5600           00805         MOVRA   r0x1013
                      00806 ;;[ICODE] ../libsdcc/fsdiv.c:126:        goto iTempLbl3($23)
01C2   A000           00807         GOTO    _00127_DS_
                      00808 ;;[ICODE] ../libsdcc/fsdiv.c:126:  iTempLbl2($22) :
                      00809 ;;[ICODE] ../libsdcc/fsdiv.c:126:       iTemp89 [k116 lr119:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1002 r0x1006 r0x100A r0x100B ] := 0x0 {unsigned-long-int literal}
01C3                  00810 _00126_DS_
01C3   7600           00811         CLRR    r0x1009
01C4   7600           00812         CLRR    r0x100D
01C5   7600           00813         CLRR    r0x1012
01C6   7600           00814         CLRR    r0x1013
                      00815 ;;[ICODE] ../libsdcc/fsdiv.c:126:  iTempLbl3($23) :
                      00816 ;;[ICODE] ../libsdcc/fsdiv.c:126:       iTemp90 [k117 lr124:125 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x100C r0x100D r0x100E r0x100F ] = (unsigned-long-int fixed)iTemp6 [k14 lr14:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsdiv_exp_1_22}[r0x1000 r0x1001 ]
01C7                  00817 _00127_DS_
01C7   5800           00818         MOVAR   r0x100B
01C8   5600           00819         MOVRA   r0x1014
01C9   5800           00820         MOVAR   r0x100A
01CA   5600           00821         MOVRA   r0x1015
01CB   3C00           00822         MOVAI   0x00
01CC   FE00           00823         JBCLR   r0x1015,7
01CD   3CFF           00824         MOVAI   0xff
01CE   5600           00825         MOVRA   r0x1017
01CF   5600           00826         MOVRA   r0x1016
                      00827 ;;[ICODE] ../libsdcc/fsdiv.c:126:       iTemp91 [k118 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x1010 r0x1011 ] = iTemp90 [k117 lr124:125 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x100C r0x100D r0x100E r0x100F ] << 0x17 {const-unsigned-char literal}
01D0   4C00           00828         RRAR    r0x1015
01D1   4C00           00829         RRAR    r0x1014
01D2   5600           00830         MOVRA   r0x1019
01D3   7600           00831         CLRR    r0x1018
01D4   4E00           00832         RRR     r0x1018
01D5   7600           00833         CLRR    r0x100A
01D6   7600           00834         CLRR    r0x100B
                      00835 ;;[ICODE] ../libsdcc/fsdiv.c:126:       iTemp92 [k119 lr126:128 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1002 r0x1006 r0x100A r0x100B ] = iTemp89 [k116 lr119:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1002 r0x1006 r0x100A r0x100B ] | iTemp91 [k118 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x1010 r0x1011 ]
01D7   3C00           00836         MOVAI   0x00
01D8   5E00           00837         ORRA    r0x1009
01D9   3C00           00838         MOVAI   0x00
01DA   5E00           00839         ORRA    r0x100D
01DB   5800           00840         MOVAR   r0x1018
01DC   5E00           00841         ORRA    r0x1012
01DD   5800           00842         MOVAR   r0x1019
01DE   5E00           00843         ORRA    r0x1013
                      00844 ;;[ICODE] ../libsdcc/fsdiv.c:126:       iTemp93 [k120 lr127:128 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x100C r0x100D ] = (unsigned-long-int fixed)iTemp66 [k89 lr71:127 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsdiv_result_1_22}[r0x1015 r0x1016 r0x1017 r0x1018 ]
                      00845 ;;100   MOVAR   r0x101D
                      00846 ;;102   MOVAR   r0x101E
                      00847 ;;114   MOVAR   r0x101F
                      00848 ;;116   MOVAR   r0x1020
                      00849 ;;[ICODE] ../libsdcc/fsdiv.c:126:       iTemp94 [k121 lr128:129 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1015 r0x1016 r0x1017 r0x1018 ] = iTemp92 [k119 lr126:128 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1002 r0x1006 r0x100A r0x100B ] | iTemp93 [k120 lr127:128 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x100C r0x100D ]
                      00850 ;;99    MOVAR   r0x100B
01DF   5800           00851         MOVAR   r0x101D
01E0   5600           00852         MOVRA   r0x100B
01E1   5C00           00853         ORAR    r0x1009
01E2   5600           00854         MOVRA   r0x101D
                      00855 ;;101   MOVAR   r0x100A
01E3   5800           00856         MOVAR   r0x101E
01E4   5600           00857         MOVRA   r0x100A
01E5   5C00           00858         ORAR    r0x100D
01E6   5600           00859         MOVRA   r0x101E
                      00860 ;;113   MOVAR   r0x1014
01E7   5800           00861         MOVAR   r0x101F
01E8   5600           00862         MOVRA   r0x1014
01E9   5C00           00863         ORAR    r0x1012
01EA   5600           00864         MOVRA   r0x101F
                      00865 ;;115   MOVAR   r0x1015
01EB   5800           00866         MOVAR   r0x1020
01EC   5600           00867         MOVRA   r0x1015
01ED   5C00           00868         ORAR    r0x1013
01EE   5600           00869         MOVRA   r0x1020
                      00870 ;;[ICODE] ../libsdcc/fsdiv.c:126:       *(iTemp87 [k113 lr117:129 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat]) := iTemp94 [k121 lr128:129 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1015 r0x1016 r0x1017 r0x1018 ]
                      00871 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
01EF   5800           00872         MOVAR   r0x101D
01F0   5600           00873         MOVRA   (___fsdiv_fl1_1_22 + 0)
                      00874 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
01F1   5800           00875         MOVAR   r0x101E
01F2   5600           00876         MOVRA   (___fsdiv_fl1_1_22 + 1)
                      00877 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
01F3   5800           00878         MOVAR   r0x101F
01F4   5600           00879         MOVRA   (___fsdiv_fl1_1_22 + 2)
                      00880 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
01F5   5800           00881         MOVAR   r0x1020
01F6   5600           00882         MOVRA   (___fsdiv_fl1_1_22 + 3)
                      00883 ;;[ICODE] ../libsdcc/fsdiv.c:126:  _ifend_5($17) :
                      00884 ;;[ICODE] ../libsdcc/fsdiv.c:127:       iTemp95 [k122 lr131:132 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsdiv_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00885 ;;[ICODE] ../libsdcc/fsdiv.c:127:       iTemp97 [k125 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1006 ] = @[iTemp95 [k122 lr131:132 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
01F7                  00886 _00121_DS_
                      00887 ;       .line   127; "../libsdcc/fsdiv.c"       return (fl1.f);
01F7   5800           00888         MOVAR   (___fsdiv_fl1_1_22 + 0)
01F8   5600           00889         MOVRA   r0x100B
01F9   5800           00890         MOVAR   (___fsdiv_fl1_1_22 + 1)
01FA   5600           00891         MOVRA   r0x100A
01FB   5800           00892         MOVAR   (___fsdiv_fl1_1_22 + 2)
01FC   5600           00893         MOVRA   r0x1009
01FD   5800           00894         MOVAR   (___fsdiv_fl1_1_22 + 3)
01FE   5600           00895         MOVRA   r0x100D
                      00896 ;;[ICODE] ../libsdcc/fsdiv.c:127:       ret iTemp97 [k125 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1006 ]
01FF   5800           00897         MOVAR   r0x100B
0200   5600           00898         MOVRA   STK02
0201   5800           00899         MOVAR   r0x100A
0202   5600           00900         MOVRA   STK01
0203   5800           00901         MOVAR   r0x1009
0204   5600           00902         MOVRA   STK00
0205   5800           00903         MOVAR   r0x100D
                      00904 ;;[ICODE] ../libsdcc/fsdiv.c:127:  _return($18) :
                      00905 ;;[ICODE] ../libsdcc/fsdiv.c:127:       eproc ___fsdiv [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0206                  00906 _00122_DS_
0206   000C           00907         RETURN  
                      00908 ; exit point of ___fsdiv
                      00909 
                      00910 
                      00911 ;       code size estimation:
                      00912 ;         519+    0 =   519 instructions ( 1038 byte)
                      00913 
                      00914         end
gpasm-1.7.0_beta1 (Nov 23 2015)fsdiv.asm          2015-11-30  22:56:07         PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

ADCR0                             000001E0
ADCR1                             000001E1
ADCR2                             000001E2
ADIO0                             000001E3
ADIO1                             000001E4
ADRH                              000001E5
ADRL                              000001E6
CLKO                              000001AD
FSR                               000001A4
FSR0                              000001A4
FSR1                              000001A5
HIBYTE                            000001A3
INDF                              000001A0
INDF0                             000001A0
INDF1                             000001A1
INDF2                             000001A2
INDF3                             000001A9
INTE                              000001AA
INTF                              000001AB
IOP0                              000001B0
IOP1                              000001B4
IOP2                              000001B8
IOP3                              000001BC
LEDCR0                            000001F0
LEDCR1                            000001F1
LEDDRV                            000001F4
LEDDS1                            000001E8
LEDDS2                            000001E9
LEDDS3                            000001EA
LEDDS4                            000001EB
LEDDS5                            000001EC
LEDDS6                            000001ED
LEDDS7                            000001EE
LEDDS8                            000001EF
LEDIOS0                           000001F2
LEDIOS1                           000001F3
MCR                               000001A8
OEP0                              000001B1
OEP1                              000001B5
OEP2                              000001B9
OEP3                              000001BD
OSCM                              000001AC
PCL                               000001A6
PDP0                              000001B3
PDP1                              000001B7
PDP2                              000001BB
PDP3                              000001BF
PFLAG                             000001A7
PUP0                              000001B2
PUP1                              000001B6
PUP2                              000001BA
PUP3                              000001BE
STATUS                            000001A7
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
T0CNT                             000001C1
T0CR                              000001C0
T0DATA                            000001C3
T0LOAD                            000001C2
T1CNT                             000001C5
T1CR                              000001C4
T1DATA                            000001C7
T1LOAD                            000001C6
T2CNTH                            000001C9
T2CNTL                            000001CA
T2CR                              000001C8
T2LOADH                           000001CB
T2LOADL                           000001CC
TK0CNTH                           000001D3
TK0CNTL                           000001D4
TK0CR0                            000001D0
TK0CR1                            000001D1
TK0CR2                            000001D2
TK1CNTH                           000001DB
TK1CNTL                           000001DC
TK1CR0                            000001D8
TK1CR1                            000001D9
TK1CR2                            000001DA
_00106_DS_                        000000C0
_00108_DS_                        000000D6
_00110_DS_                        0000011D
_00112_DS_                        00000162
_00113_DS_                        00000126
_00115_DS_                        0000016D
_00117_DS_                        000001B9
_00120_DS_                        000001AF
_00121_DS_                        000001F7
_00122_DS_                        00000206
_00124_DS_                        0000019F
_00125_DS_                        000001A3
_00126_DS_                        000001C3
_00127_DS_                        000001C7
_00148_DS_                        00000061
_00149_DS_                        00000062
_00150_DS_                        00000069
_00151_DS_                        0000006A
_00152_DS_                        00000112
_00153_DS_                        0000013E
_00154_DS_                        00000193
__32T8132                         00000001
___fs2schar                       00000000
___fs2sint                        00000000
___fs2slong                       00000000
___fs2uchar                       00000000
___fs2uint                        00000000
___fs2ulong                       00000000
___fsadd                          00000000
___fsdiv                          00000000
___fsdiv_fl1_1_22                 0000001D
___fsdiv_fl2_1_22                 00000021
___fseq                           00000000
___fsgt                           00000000
___fslt                           00000000
___fsmul                          00000000
___fsneq                          00000000
___fssub                          00000000
___schar2fs                       00000000
___sint2fs                        00000000
___slong2fs                       00000000
___uchar2fs                       00000000
___uint2fs                        00000000
___ulong2fs                       00000000
r0x1008                           00000003
r0x1009                           00000002
r0x100A                           00000001
r0x100B                           00000000
r0x100C                           00000007
r0x100D                           00000006
r0x100E                           00000005
r0x100F                           00000004
r0x1010                           00000008
r0x1011                           00000009
r0x1012                           0000000A
r0x1013                           0000000B
r0x1014                           0000000C
r0x1015                           0000000D
r0x1016                           0000000E
r0x1017                           0000000F
r0x1018                           00000010
r0x1019                           00000011
r0x101A                           00000012
r0x101B                           00000013
r0x101C                           00000014
r0x101D                           00000015
r0x101E                           00000016
r0x101F                           00000017
r0x1020                           00000018
r0x1021                           00000019
r0x1022                           0000001A
r0x1023                           0000001B
r0x1024                           0000001C
ADCHS0                            ADCR0,3 	         /* bit 3 */
ADCHS1                            ADCR0,4 	         /* bit 4 */
ADCHS2                            ADCR0,5 	         /* bit 5 */
ADCHS3                            ADCR0,6 	         /* bit 6 */
ADCHS4                            ADCR0,7 	         /* bit 7 */
ADCKS0                            ADCR1,1      	     /* bit 1 */
ADCKS1                            ADCR1,2      	     /* bit 2 */
ADEOC                             ADCR0,1   	       /* bit 1 */
ADIE                              INTE,6            /* bit 6 */
ADIF                              INTF,6          /* bit 6 */
ADIOS0                            ADIO0,0          /* bit 0 */
ADIOS1                            ADIO0,1          /* bit 1 */
ADIOS10                           ADIO1,2         /* bit 2 */
ADIOS11                           ADIO1,3         /* bit 3 */
ADIOS12                           ADIO1,4         /* bit 4 */
ADIOS13                           ADIO1,5         /* bit 5 */
ADIOS14                           ADIO1,6         /* bit 6 */
ADIOS15                           ADIO1,7         /* bit 7 */
ADIOS2                            ADIO0,2          /* bit 2 */
ADIOS3                            ADIO0,3          /* bit 3 */
ADIOS4                            ADIO0,4          /* bit 4 */
ADIOS5                            ADIO0,5          /* bit 5 */
ADIOS6                            ADIO0,6          /* bit 6 */
ADIOS7                            ADIO0,7          /* bit 7 */
ADIOS8                            ADIO1,0         /* bit 0 */
ADIOS9                            ADIO1,1         /* bit 1 */
ADON                              ADCR0,0     	     /* bit 0 */
ADR0                              ADRL,0           /* bit 0 */
ADR1                              ADRL,1           /* bit 1 */
ADR10                             ADRH,6           /* bit 6 */
ADR11                             ADRH,7           /* bit 7 */
ADR2                              ADRL,2           /* bit 2 */
ADR3                              ADRL,3           /* bit 3 */
ADR4                              ADRH,0           /* bit 0 */
ADR5                              ADRH,1           /* bit 1 */
ADR6                              ADRH,2           /* bit 2 */
ADR7                              ADRH,3           /* bit 3 */
ADR8                              ADRH,4           /* bit 4 */
ADR9                              ADRH,5           /* bit 5 */
ADREF0                            ADCR1,3     	     /* bit 3 */
ADREF1                            ADCR1,4     	     /* bit 4 */
ADREF2                            ADCR1,5     	     /* bit 5 */
ADREF3                            ADCR1,6     	     /* bit 6 */
ADSMP0                            ADCR2,0   	       /* bit 0 */
ADSMP1                            ADCR2,1   	       /* bit 1 */
ADSMP2                            ADCR2,2   	       /* bit 2 */
ADSMP3                            ADCR2,3   	       /* bit 3 */
ADTEN                             ADCR1,7     	     /* bit 7 */
BUZ0OE                            T0CR,5           /* bit 5 */
BUZ1OE                            T1CR,5    	      /* bit 5 */
C                                 STATUS,0         /* bit 0 */
CLKOEN                            CLKO,7          /* bit 7 */
CLKOS0                            CLKO,0          /* bit 0 */
CLKOS1                            CLKO,1          /* bit 1 */
CLKOS2                            CLKO,2          /* bit 2 */
CLKS                              OSCM,2           /* bit 2 */
CLKS0                             LEDCR1,5         /* bit 5 */
CLKS1                             LEDCR1,6         /* bit 6 */
COMDV1                            LEDDRV,0          /* bit 0 */
COMDV2                            LEDDRV,1          /* bit 1 */
COMDV3                            LEDDRV,2          /* bit 2 */
COMDV4                            LEDDRV,3          /* bit 3 */
COMDV5                            LEDDRV,4          /* bit 4 */
COMDV6                            LEDDRV,5          /* bit 5 */
COMDV7                            LEDDRV,6          /* bit 6 */
COMDV8                            LEDDRV,7          /* bit 7 */
COMIOS1                           LEDIOS0,0          /* bit 0 */
COMIOS2                           LEDIOS0,1          /* bit 1 */
COMIOS3                           LEDIOS0,2          /* bit 2 */
COMIOS4                           LEDIOS0,3          /* bit 3 */
COMIOS5                           LEDIOS0,4          /* bit 4 */
COMIOS6                           LEDIOS0,5          /* bit 5 */
COMIOS7                           LEDIOS0,6          /* bit 6 */
COMIOS8                           LEDIOS0,7          /* bit 7 */
DC                                STATUS,1       	 /* bit 1 */
DRVPS                             LEDCR1,7         /* bit 7 */
DUTY                              LEDCR0,6         /* bit 6 */
FLED0                             LEDCR1,0         /* bit 0 */
FLED1                             LEDCR1,1         /* bit 1 */
FSR00                             FSR0,0          /* bit 0 */
FSR01                             FSR0,1          /* bit 1 */
FSR02                             FSR0,2          /* bit 2 */
FSR03                             FSR0,3          /* bit 3 */
FSR04                             FSR0,4          /* bit 4 */
FSR05                             FSR0,5          /* bit 5 */
FSR06                             FSR0,6          /* bit 6 */
FSR07                             FSR0,7          /* bit 7 */
FSR10                             FSR1,0          /* bit 0 */
FSR11                             FSR1,1          /* bit 1 */
FSR12                             FSR1,2          /* bit 2 */
FSR13                             FSR1,3          /* bit 3 */
FSR14                             FSR1,4          /* bit 4 */
FSR15                             FSR1,5          /* bit 5 */
FSR16                             FSR1,6          /* bit 6 */
FSR17                             FSR1,7          /* bit 7 */
GIE                               MCR,7           /* bit 7 */
GYS0                              LEDCR0,0         /* bit 0 */
GYS1                              LEDCR0,1         /* bit 1 */
GYS2                              LEDCR0,2         /* bit 2 */
HFEN                              OSCM,0           /* bit 0 */
HIBYTE0                           HIBYTE,0          /* bit 0 */
HIBYTE1                           HIBYTE,1          /* bit 1 */
HIBYTE2                           HIBYTE,2          /* bit 2 */
HIBYTE3                           HIBYTE,3          /* bit 3 */
HIBYTE4                           HIBYTE,4          /* bit 4 */
HIBYTE5                           HIBYTE,5          /* bit 5 */
HIBYTE6                           HIBYTE,6          /* bit 6 */
HIBYTE7                           HIBYTE,7          /* bit 7 */
IBPS0                             LEDCR1,3         /* bit 3 */
IBPS1                             LEDCR1,4         /* bit 4 */
INDF00                            INDF0,0          /* bit 0 */
INDF01                            INDF0,1        	 /* bit 1 */
INDF02                            INDF0,2          /* bit 2 */
INDF03                            INDF0,3        	 /* bit 3 */
INDF04                            INDF0,4        	 /* bit 4 */
INDF05                            INDF0,5        	 /* bit 5 */
INDF06                            INDF0,6        	 /* bit 6 */
INDF07                            INDF0,7        	 /* bit 7 */
INDF10                            INDF1,0          /* bit 0 */
INDF11                            INDF1,1          /* bit 1 */
INDF12                            INDF1,2          /* bit 2 */
INDF13                            INDF1,3          /* bit 3 */
INDF14                            INDF1,4          /* bit 4 */
INDF15                            INDF1,5          /* bit 5 */
INDF16                            INDF1,6          /* bit 6 */
INDF17                            INDF1,7          /* bit 7 */
INDF20                            INDF2,0          /* bit 0 */
INDF21                            INDF2,1          /* bit 1 */
INDF22                            INDF2,2          /* bit 2 */
INDF23                            INDF2,3          /* bit 3 */
INDF24                            INDF2,4          /* bit 4 */
INDF25                            INDF2,5          /* bit 5 */
INDF26                            INDF2,6          /* bit 6 */
INDF27                            INDF2,7          /* bit 7 */
INDF30                            INDF3,0          /* bit 0 */
INDF31                            INDF3,1          /* bit 1 */
INDF32                            INDF3,2          /* bit 2 */
INDF33                            INDF3,3          /* bit 3 */
INDF34                            INDF3,4          /* bit 4 */
INDF35                            INDF3,5          /* bit 5 */
INDF36                            INDF3,6          /* bit 6 */
INDF37                            INDF3,7          /* bit 7 */
INT0IE                            INTE,2            /* bit 2 */
INT0IF                            INTF,2       	  /* bit 2 */
INT1IE                            INTE,3            /* bit 3 */
INT1IF                            INTF,3          /* bit 3 */
IREFEN                            LEDCR1,2         /* bit 2 */
KBIE                              INTE,4            /* bit 4 */
KBIF                              INTF,4          /* bit 4 */
LEDEN                             LEDCR0,7         /* bit 7 */
LFEN                              OSCM,1           /* bit 1 */
MINT00                            MCR,0           /* bit 0 */
MINT01                            MCR,1           /* bit 1 */
MINT10                            MCR,2           /* bit 2 */
MINT11                            MCR,3           /* bit 3 */
P00D                              IOP0,0           /* bit 0 */
P00OE                             OEP0,0          /* bit 0 */
P00PD                             PDP0,0            /* bit 0 */
P00PU                             PUP0,0          /* bit 0 */
P01D                              IOP0,1           /* bit 1 */
P01OE                             OEP0,1          /* bit 1 */
P01PD                             PDP0,1            /* bit 1 */
P01PU                             PUP0,1          /* bit 1 */
P02D                              IOP0,2           /* bit 2 */
P02OE                             OEP0,2          /* bit 2 */
P02PD                             PDP0,2            /* bit 2 */
P02PU                             PUP0,2          /* bit 2 */
P03D                              IOP0,3           /* bit 3 */
P03OE                             OEP0,3          /* bit 3 */
P03PD                             PDP0,3            /* bit 3 */
P03PU                             PUP0,3          /* bit 3 */
P04D                              IOP0,4           /* bit 4 */
P04OE                             OEP0,4          /* bit 4 */
P04PD                             PDP0,4            /* bit 4 */
P04PU                             PUP0,4          /* bit 4 */
P05D                              IOP0,5           /* bit 5 */
P05OE                             OEP0,5          /* bit 5 */
P05PD                             PDP0,5            /* bit 5 */
P05PU                             PUP0,5          /* bit 5 */
P06D                              IOP0,6           /* bit 6 */
P06OE                             OEP0,6          /* bit 6 */
P06PD                             PDP0,6            /* bit 6 */
P06PU                             PUP0,6          /* bit 6 */
P07D                              IOP0,7           /* bit 7 */
P07OE                             OEP0,7          /* bit 7 */
P07PD                             PDP0,7            /* bit 7 */
P07PU                             PUP0,7          /* bit 7 */
P10D                              IOP1,0           /* bit 0 */
P10OE                             OEP1,0           /* bit 0 */
P10PD                             PDP1,0      	   /* bit 0 */
P10PU                             PUP1,0           /* bit 0 */
P11D                              IOP1,1           /* bit 1 */
P11OE                             OEP1,1           /* bit 1 */
P11PD                             PDP1,1      	   /* bit 1 */
P11PU                             PUP1,1           /* bit 1 */
P12D                              IOP1,2           /* bit 2 */
P12OE                             OEP1,2           /* bit 2 */
P12PD                             PDP1,2      	   /* bit 2 */
P12PU                             PUP1,2           /* bit 2 */
P20D                              IOP2,0           /* bit 0 */
P20OE                             OEP2,0          /* bit 0 */
P20PD                             PDP2,0          /* bit 0 */
P20PU                             PUP2,0          /* bit 0 */
P21D                              IOP2,1           /* bit 1 */
P21OE                             OEP2,1          /* bit 1 */
P21PD                             PDP2,1      	  /* bit 1 */
P21PU                             PUP2,1          /* bit 1 */
P22D                              IOP2,2           /* bit 2 */
P22OE                             OEP2,2          /* bit 2 */
P22PD                             PDP2,2      	  /* bit 2 */
P22PU                             PUP2,2          /* bit 2 */
P23D                              IOP2,3           /* bit 3 */
P23OE                             OEP2,3          /* bit 3 */
P23PD                             PDP2,3      	  /* bit 3 */
P23PU                             PUP2,3          /* bit 3 */
P24D                              IOP2,4           /* bit 4 */
P24OE                             OEP2,4          /* bit 4 */
P24PD                             PDP2,4      	  /* bit 4 */
P24PU                             PUP2,4          /* bit 4 */
P25D                              IOP2,5           /* bit 5 */
P25OE                             OEP2,5          /* bit 5 */
P25PD                             PDP2,5      	  /* bit 5 */
P25PU                             PUP2,5          /* bit 5 */
P26D                              IOP2,6           /* bit 6 */
P26OE                             OEP2,6          /* bit 6 */
P26PD                             PDP2,6      	  /* bit 6 */
P26PU                             PUP2,6          /* bit 6 */
P30D                              IOP3,0          /* bit 0 */
P30OE                             OEP3,0          /* bit 0 */
P30PD                             PDP3,0      	  /* bit 0 */
P30PU                             PUP3,0          /* bit 0 */
P31D                              IOP3,1          /* bit 1 */
P31OE                             OEP3,1          /* bit 1 */
P31PD                             PDP3,1      	  /* bit 1 */
P31PU                             PUP3,1          /* bit 1 */
P32D                              IOP3,2          /* bit 2 */
P32OE                             OEP3,2          /* bit 2 */
P32PD                             PDP3,2      	  /* bit 2 */
P32PU                             PUP3,2          /* bit 2 */
P33D                              IOP3,3          /* bit 3 */
P33OE                             OEP3,3          /* bit 3 */
P33PD                             PDP3,3      	  /* bit 3 */
P33PU                             PUP3,3          /* bit 3 */
P34D                              IOP3,4          /* bit 4 */
P34OE                             OEP3,4          /* bit 4 */
P34PD                             PDP3,4      	  /* bit 4 */
P34PU                             PUP3,4          /* bit 4 */
P35D                              IOP3,5          /* bit 5 */
P35OE                             OEP3,5          /* bit 5 */
P35PD                             PDP3,5      	  /* bit 5 */
P35PU                             PUP3,5          /* bit 5 */
P36D                              IOP3,6          /* bit 6 */
P36OE                             OEP3,6          /* bit 6 */
P36PD                             PDP3,6      	  /* bit 6 */
P36PU                             PUP3,6          /* bit 6 */
P37D                              IOP3,7          /* bit 7 */
P37OE                             OEP3,7          /* bit 7 */
P37PD                             PDP3,7      	  /* bit 7 */
P37PU                             PUP3,7          /* bit 7 */
PC0                               PCL,0          /* bit 0 */
PC1                               PCL,1          /* bit 1 */
PC2                               PCL,2          /* bit 2 */
PC3                               PCL,3          /* bit 3 */
PC4                               PCL,4          /* bit 4 */
PC5                               PCL,5          /* bit 5 */
PC6                               PCL,6          /* bit 6 */
PC7                               PCL,7          /* bit 7 */
PD                                MCR,4           /* bit 4 */
PWM0OE                            T0CR,6           /* bit 6 */
PWM1OE                            T1CR,6    	      /* bit 6 */
SEGIOS1                           LEDIOS1,0          /* bit 0 */
SEGIOS2                           LEDIOS1,1          /* bit 1 */
SEGIOS3                           LEDIOS1,2          /* bit 2 */
SEGIOS4                           LEDIOS1,3          /* bit 3 */
SEGIOS5                           LEDIOS1,4          /* bit 4 */
SEGIOS6                           LEDIOS1,5          /* bit 5 */
SEGIOS7                           LEDIOS1,6          /* bit 6 */
SEGIOS8                           LEDIOS1,7          /* bit 7 */
STBH                              OSCM,4           /* bit 4 */
STBL                              OSCM,5           /* bit 5 */
T0C0                              T0CNT,0          /* bit 0 */
T0C1                              T0CNT,1          /* bit 1 */
T0C2                              T0CNT,2          /* bit 2 */
T0C3                              T0CNT,3          /* bit 3 */
T0C4                              T0CNT,4          /* bit 4 */
T0C5                              T0CNT,5          /* bit 5 */
T0C6                              T0CNT,6          /* bit 6 */
T0C7                              T0CNT,7          /* bit 7 */
T0DATA0                           T0DATA,0        	/* bit 0 */
T0DATA1                           T0DATA,1       	  /* bit 1 */
T0DATA2                           T0DATA,2      	  /* bit 2 */
T0DATA3                           T0DATA,3      	  /* bit 3 */
T0DATA4                           T0DATA,4      	  /* bit 4 */
T0DATA5                           T0DATA,5      	  /* bit 5 */
T0DATA6                           T0DATA,6      	  /* bit 6 */
T0DATA7                           T0DATA,7      	  /* bit 7 */
T0IE                              INTE,0    	      /* bit 0 */
T0IF                              INTF,0         	/* bit 0 */
T0LOAD0                           T0LOAD,0      /* bit 0 */
T0LOAD1                           T0LOAD,1      /* bit 1 */
T0LOAD2                           T0LOAD,2      /* bit 2 */
T0LOAD3                           T0LOAD,3      /* bit 3 */
T0LOAD4                           T0LOAD,4      /* bit 4 */
T0LOAD5                           T0LOAD,5      /* bit 5 */
T0LOAD6                           T0LOAD,6      /* bit 6 */
T0LOAD7                           T0LOAD,7      /* bit 7 */
T0PR0                             T0CR,0           /* bit 0 */
T0PR1                             T0CR,1           /* bit 1 */
T0PR2                             T0CR,2           /* bit 2 */
T0PTS0                            T0CR,3           /* bit 3 */
T0PTS1                            T0CR,4           /* bit 4 */
T1C0                              T1CNT,0          /* bit 0 */
T1C1                              T1CNT,1          /* bit 1 */
T1C2                              T1CNT,2          /* bit 2 */
T1C3                              T1CNT,3          /* bit 3 */
T1C4                              T1CNT,4          /* bit 4 */
T1C5                              T1CNT,5          /* bit 5 */
T1C6                              T1CNT,6          /* bit 6 */
T1C7                              T1CNT,7          /* bit 7 */
T1DATA0                           T1DATA,0       	/* bit 0 */
T1DATA1                           T1DATA,1      	/* bit 1 */
T1DATA2                           T1DATA,2     	  /* bit 2 */
T1DATA3                           T1DATA,3     	  /* bit 3 */
T1DATA4                           T1DATA,4     	  /* bit 4 */
T1DATA5                           T1DATA,5     	  /* bit 5 */
T1DATA6                           T1DATA,6     	  /* bit 6 */
T1DATA7                           T1DATA,7     	  /* bit 7 */
T1IE                              INTE,1            /* bit 1 */
T1IF                              INTF,1          /* bit 1 */
T1LOAD0                           T1LOAD,0       	/* bit 0 */
T1LOAD1                           T1LOAD,1      	/* bit 1 */
T1LOAD2                           T1LOAD,2     	  /* bit 2 */
T1LOAD3                           T1LOAD,3     	  /* bit 3 */
T1LOAD4                           T1LOAD,4     	  /* bit 4 */
T1LOAD5                           T1LOAD,5     	  /* bit 5 */
T1LOAD6                           T1LOAD,6     	  /* bit 6 */
T1LOAD7                           T1LOAD,7     	  /* bit 7 */
T1PR0                             T1CR,0           	/* bit 0 */
T1PR1                             T1CR,1           	/* bit 1 */
T1PR2                             T1CR,2           	/* bit 2 */
T1PTS0                            T1CR,3      	    /* bit 3 */
T1PTS1                            T1CR,4      	    /* bit 4 */
T2C0                              T2CNTL,0         /* bit 0 */
T2C1                              T2CNTL,1         /* bit 1 */
T2C10                             T2CNTH,2           /* bit 2 */
T2C11                             T2CNTH,3           /* bit 3 */
T2C12                             T2CNTH,4           /* bit 4 */
T2C13                             T2CNTH,5           /* bit 5 */
T2C14                             T2CNTH,6           /* bit 6 */
T2C15                             T2CNTH,7           /* bit 7 */
T2C2                              T2CNTL,2         /* bit 2 */
T2C3                              T2CNTL,3         /* bit 3 */
T2C4                              T2CNTL,4         /* bit 4 */
T2C5                              T2CNTL,5         /* bit 5 */
T2C6                              T2CNTL,6         /* bit 6 */
T2C7                              T2CNTL,7         /* bit 7 */
T2C8                              T2CNTH,0           /* bit 0 */
T2C9                              T2CNTH,1           /* bit 1 */
T2LOAD0                           T2LOADL,0       	/* bit 0 */
T2LOAD1                           T2LOADL,1      	  /* bit 1 */
T2LOAD10                          T2LOADH,2     	  /* bit 2 */
T2LOAD11                          T2LOADH,3     	  /* bit 3 */
T2LOAD12                          T2LOADH,4     	  /* bit 4 */
T2LOAD13                          T2LOADH,5     	  /* bit 5 */
T2LOAD14                          T2LOADH,6     	  /* bit 6 */
T2LOAD15                          T2LOADH,7     	  /* bit 7 */
T2LOAD2                           T2LOADL,2     	  /* bit 2 */
T2LOAD3                           T2LOADL,3     	  /* bit 3 */
T2LOAD4                           T2LOADL,4     	  /* bit 4 */
T2LOAD5                           T2LOADL,5     	  /* bit 5 */
T2LOAD6                           T2LOADL,6     	  /* bit 6 */
T2LOAD7                           T2LOADL,7     	  /* bit 7 */
T2LOAD8                           T2LOADH,0       	/* bit 0 */
T2LOAD9                           T2LOADH,1      	  /* bit 1 */
T2MODE                            T2CR,5    	      /* bit 5 */
T2PR0                             T2CR,0           	/* bit 0 */
T2PR1                             T2CR,1           	/* bit 1 */
T2PR2                             T2CR,2           	/* bit 2 */
T2PTS0                            T2CR,3      	    /* bit 3 */
T2PTS1                            T2CR,4      	    /* bit 4 */
TC0EN                             T0CR,7           /* bit 7 */
TC1EN                             T1CR,7        	  /* bit 7 */
TC2EN                             T2CR,7        	  /* bit 7 */
TK0C0                             TK0CNTL,0        	 /* bit 0 */
TK0C1                             TK0CNTL,1      	   /* bit 1 */
TK0C10                            TK0CNTH,2         /* bit 2 */
TK0C11                            TK0CNTH,3         /* bit 3 */
TK0C12                            TK0CNTH,4         /* bit 4 */
TK0C13                            TK0CNTH,5         /* bit 5 */
TK0C14                            TK0CNTH,6         /* bit 6 */
TK0C15                            TK0CNTH,7         /* bit 7 */
TK0C2                             TK0CNTL,2     	   /* bit 2 */
TK0C3                             TK0CNTL,3      	   /* bit 3 */
TK0C4                             TK0CNTL,4     	   /* bit 4 */
TK0C5                             TK0CNTL,5      	   /* bit 5 */
TK0C6                             TK0CNTL,6      	   /* bit 6 */
TK0C7                             TK0CNTL,7     	   /* bit 7 */
TK0C8                             TK0CNTH,0         /* bit 0 */
TK0C9                             TK0CNTH,1         /* bit 1 */
TK0CLR                            TK0CR0,3       	  /* bit 3 */
TK0FL0                            TK0CR1,4            /* bit 4 */
TK0FL1                            TK0CR1,5            /* bit 5 */
TK0FQ0                            TK0CR0,0       	  /* bit 0 */
TK0FQ1                            TK0CR0,1       	  /* bit 1 */
TK0FQ2                            TK0CR0,2       	  /* bit 2 */
TK0IE                             TK0CR1,6           /* bit 6 */
TK0IF                             TK0CR1,7           /* bit 7 */
TK0IO0                            TK0CR2,0          /* bit 0 */
TK0IO1                            TK0CR2,1          /* bit 1 */
TK0IO2                            TK0CR2,2          /* bit 2 */
TK0IO3                            TK0CR2,3          /* bit 3 */
TK0IO4                            TK0CR2,4          /* bit 4 */
TK0IO5                            TK0CR2,5          /* bit 5 */
TK0IO6                            TK0CR2,6          /* bit 6 */
TK0IO7                            TK0CR2,7          /* bit 7 */
TK0JE                             TK0CR0,5      	  /* bit 5 */
TK0K0                             TK0CR1,0            /* bit 0 */
TK0K1                             TK0CR1,1            /* bit 1 */
TK0K2                             TK0CR1,2            /* bit 2 */
TK0RCE                            TK0CR0,4     	    /* bit 4 */
TK1C0                             TK1CNTL,0        	 /* bit 0 */
TK1C1                             TK1CNTL,1      	   /* bit 1 */
TK1C10                            TK1CNTH,2          /* bit 2 */
TK1C11                            TK1CNTH,3          /* bit 3 */
TK1C12                            TK1CNTH,4          /* bit 4 */
TK1C13                            TK1CNTH,5          /* bit 5 */
TK1C14                            TK1CNTH,6          /* bit 6 */
TK1C15                            TK1CNTH,7          /* bit 7 */
TK1C2                             TK1CNTL,2     	   /* bit 2 */
TK1C3                             TK1CNTL,3      	   /* bit 3 */
TK1C4                             TK1CNTL,4     	   /* bit 4 */
TK1C5                             TK1CNTL,5      	   /* bit 5 */
TK1C6                             TK1CNTL,6      	   /* bit 6 */
TK1C7                             TK1CNTL,7     	   /* bit 7 */
TK1C8                             TK1CNTH,0          /* bit 0 */
TK1C9                             TK1CNTH,1          /* bit 1 */
TK1CLR                            TK1CR0,3       	  /* bit 3 */
TK1FL0                            TK0CR1,4            /* bit 4 */
TK1FL1                            TK0CR1,5            /* bit 5 */
TK1FQ0                            TK1CR0,0       	  /* bit 0 */
TK1FQ1                            TK1CR0,1       	  /* bit 1 */
TK1FQ2                            TK1CR0,2       	  /* bit 2 */
TK1IE                             TK0CR1,6            /* bit 6 */
TK1IF                             TK0CR1,7            /* bit 7 */
TK1IO0                            TK1CR2,0          /* bit 0 */
TK1IO1                            TK1CR2,1          /* bit 1 */
TK1IO2                            TK1CR2,2          /* bit 2 */
TK1IO3                            TK1CR2,3          /* bit 3 */
TK1IO4                            TK1CR2,4          /* bit 4 */
TK1IO5                            TK1CR2,5          /* bit 5 */
TK1IO6                            TK1CR2,6          /* bit 6 */
TK1IO7                            TK1CR2,7          /* bit 7 */
TK1JE                             TK1CR0,5      	  /* bit 5 */
TK1K0                             TK0CR1,0            /* bit 0 */
TK1K1                             TK0CR1,1            /* bit 1 */
TK1K2                             TK0CR1,2            /* bit 2 */
TK1RCE                            TK1CR0,4     	    /* bit 4 */
TO                                MCR,5           /* bit 5 */
VREFP_PHEN                        ADCR1,0   	   /* bit 0 */
Z                                 STATUS,2         /* bit 2 */

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

