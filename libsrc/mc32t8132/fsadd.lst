gpasm-1.7.0_beta1 (Nov 23 2015)fsadd.asm          2015-11-30  22:56:07         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : ANSI-C Compiler
                      00003 ; Version 0.0.4 (Nov 23 2015) (Linux)
                      00004 ; This file was generated Mon Nov 30 22:56:07 2015
                      00005 ;--------------------------------------------------------
                      00006 ; MC3X port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc/fsadd.c"
                      00009         list    p=8132
                      00010         radix dec
                      00011         include "8132.inc"
                      00001 
                      00002   ;processor mc32t8132
                      00003 
  000001A0            00004 INDF       equ   0x1a0
  000001A0            00005 INDF0      equ   0x1a0
  000001A1            00006 INDF1      equ   0x1a1
  000001A2            00007 INDF2      equ   0x1a2
  000001A3            00008 HIBYTE     equ   0x1a3
  000001A4            00009 FSR        equ   0x1a4
  000001A4            00010 FSR0       equ   0x1a4
  000001A5            00011 FSR1       equ   0x1a5
  000001A6            00012 PCL        equ   0x1a6
  000001A7            00013 STATUS     equ   0x1a7
  000001A7            00014 PFLAG      equ   0x1a7
  000001A8            00015 MCR        equ   0x1a8
  000001A9            00016 INDF3      equ   0x1a9
  000001AA            00017 INTE         equ   0x1aa
  000001AB            00018 INTF         equ   0x1ab
  000001AC            00019 OSCM       equ   0x1ac
  000001AD            00020 CLKO       equ   0x1ad
                      00021 
  000001B0            00022 IOP0       equ   0x1b0
  000001B1            00023 OEP0       equ   0x1b1
  000001B2            00024 PUP0       equ   0x1b2
  000001B3            00025 PDP0       equ   0x1b3
  000001B4            00026 IOP1       equ   0x1b4
  000001B5            00027 OEP1       equ   0x1b5
  000001B6            00028 PUP1       equ   0x1b6
  000001B7            00029 PDP1       equ   0x1b7
  000001B8            00030 IOP2       equ   0x1b8
  000001B9            00031 OEP2       equ   0x1b9
  000001BA            00032 PUP2       equ   0x1ba
  000001BB            00033 PDP2       equ   0x1bb
  000001BC            00034 IOP3       equ   0x1bc
  000001BD            00035 OEP3       equ   0x1bd
  000001BE            00036 PUP3       equ   0x1be
  000001BF            00037 PDP3       equ   0x1bf
                      00038 
  000001C0            00039 T0CR       equ   0x1c0
  000001C1            00040 T0CNT      equ   0x1c1  
  000001C2            00041 T0LOAD     equ   0x1c2
  000001C3            00042 T0DATA     equ   0x1c3 
  000001C4            00043 T1CR       equ   0x1c4
  000001C5            00044 T1CNT      equ   0x1c5  
  000001C6            00045 T1LOAD     equ   0x1c6
  000001C7            00046 T1DATA     equ   0x1c7
  000001C8            00047 T2CR       equ   0x1c8
  000001C9            00048 T2CNTH     equ   0x1c9  
  000001CA            00049 T2CNTL     equ   0x1ca  
  000001CB            00050 T2LOADH    equ   0x1cb
  000001CC            00051 T2LOADL    equ   0x1cc
                      00052 
  000001D0            00053 TK0CR0     equ   0x1d0
  000001D1            00054 TK0CR1     equ   0x1d1
  000001D2            00055 TK0CR2     equ   0x1d2
  000001D3            00056 TK0CNTH    equ   0x1d3
  000001D4            00057 TK0CNTL    equ   0x1d4
  000001D8            00058 TK1CR0     equ   0x1d8
  000001D9            00059 TK1CR1     equ   0x1d9
  000001DA            00060 TK1CR2     equ   0x1da
  000001DB            00061 TK1CNTH    equ   0x1db
  000001DC            00062 TK1CNTL    equ   0x1dc
                      00063 
  000001E0            00064 ADCR0      equ   0x1e0
  000001E1            00065 ADCR1      equ   0x1e1
  000001E2            00066 ADCR2      equ   0x1e2
  000001E3            00067 ADIO0      equ   0x1e3
  000001E4            00068 ADIO1      equ   0x1e4
  000001E5            00069 ADRH       equ   0x1e5  
  000001E6            00070 ADRL       equ   0x1e6
                      00071 
  000001E8            00072 LEDDS1     equ   0x1e8
  000001E9            00073 LEDDS2     equ   0x1e9
  000001EA            00074 LEDDS3     equ   0x1ea
  000001EB            00075 LEDDS4     equ   0x1eb
  000001EC            00076 LEDDS5     equ   0x1ec
  000001ED            00077 LEDDS6     equ   0x1ed
  000001EE            00078 LEDDS7     equ   0x1ee
  000001EF            00079 LEDDS8     equ   0x1ef
  000001F0            00080 LEDCR0     equ   0x1f0
  000001F1            00081 LEDCR1     equ   0x1f1
  000001F2            00082 LEDIOS0    equ   0x1f2
  000001F3            00083 LEDIOS1    equ   0x1f3
  000001F4            00084 LEDDRV     equ   0x1f4 
                      00085 
                      00086 
                      00087 ; ----- INDF0 Bits --------------------------------------------
                      00088 #define INDF00           INDF0,0          /* bit 0 */
                      00089 #define INDF01           INDF0,1                 /* bit 1 */
                      00090 #define INDF02           INDF0,2          /* bit 2 */
                      00091 #define INDF03           INDF0,3                 /* bit 3 */
                      00092 #define INDF04           INDF0,4                 /* bit 4 */
                      00093 #define INDF05           INDF0,5                 /* bit 5 */
                      00094 #define INDF06           INDF0,6                 /* bit 6 */
                      00095 #define INDF07           INDF0,7                 /* bit 7 */
                      00096 
                      00097 ; ----- INDF1 Bits --------------------------------------------
                      00098 #define INDF10           INDF1,0          /* bit 0 */
                      00099 #define INDF11           INDF1,1          /* bit 1 */
                      00100 #define INDF12           INDF1,2          /* bit 2 */
                      00101 #define INDF13           INDF1,3          /* bit 3 */
                      00102 #define INDF14           INDF1,4          /* bit 4 */
                      00103 #define INDF15           INDF1,5          /* bit 5 */
                      00104 #define INDF16           INDF1,6          /* bit 6 */
                      00105 #define INDF17           INDF1,7          /* bit 7 */
                      00106 
                      00107 ; ----- INDF2 Bits --------------------------------------------
                      00108 #define INDF20           INDF2,0          /* bit 0 */
                      00109 #define INDF21           INDF2,1          /* bit 1 */
                      00110 #define INDF22           INDF2,2          /* bit 2 */
                      00111 #define INDF23           INDF2,3          /* bit 3 */
                      00112 #define INDF24           INDF2,4          /* bit 4 */
                      00113 #define INDF25           INDF2,5          /* bit 5 */
                      00114 #define INDF26           INDF2,6          /* bit 6 */
                      00115 #define INDF27           INDF2,7          /* bit 7 */
                      00116 
                      00117 ; ----- HIBYTE Bits --------------------------------------------
                      00118 #define HIBYTE0           HIBYTE,0          /* bit 0 */
                      00119 #define HIBYTE1           HIBYTE,1          /* bit 1 */
                      00120 #define HIBYTE2           HIBYTE,2          /* bit 2 */
                      00121 #define HIBYTE3           HIBYTE,3          /* bit 3 */
                      00122 #define HIBYTE4           HIBYTE,4          /* bit 4 */
                      00123 #define HIBYTE5           HIBYTE,5          /* bit 5 */
                      00124 #define HIBYTE6           HIBYTE,6          /* bit 6 */
                      00125 #define HIBYTE7           HIBYTE,7          /* bit 7 */
                      00126 
                      00127 ; ----- FSR0 Bits ---------------------------------------------
                      00128 #define FSR00           FSR0,0          /* bit 0 */
                      00129 #define FSR01           FSR0,1          /* bit 1 */
                      00130 #define FSR02           FSR0,2          /* bit 2 */
                      00131 #define FSR03           FSR0,3          /* bit 3 */
                      00132 #define FSR04           FSR0,4          /* bit 4 */
                      00133 #define FSR05           FSR0,5          /* bit 5 */
                      00134 #define FSR06           FSR0,6          /* bit 6 */
                      00135 #define FSR07           FSR0,7          /* bit 7 */
                      00136 
                      00137 ; ----- FSR1 Bits ---------------------------------------------
                      00138 #define FSR10           FSR1,0          /* bit 0 */
                      00139 #define FSR11           FSR1,1          /* bit 1 */
                      00140 #define FSR12           FSR1,2          /* bit 2 */
                      00141 #define FSR13           FSR1,3          /* bit 3 */
                      00142 #define FSR14           FSR1,4          /* bit 4 */
                      00143 #define FSR15           FSR1,5          /* bit 5 */
                      00144 #define FSR16           FSR1,6          /* bit 6 */
                      00145 #define FSR17           FSR1,7          /* bit 7 */
                      00146 
                      00147 ; ----- PCL Bits ---------------------------------------------
                      00148 #define PC0           PCL,0          /* bit 0 */
                      00149 #define PC1           PCL,1          /* bit 1 */
                      00150 #define PC2           PCL,2          /* bit 2 */
                      00151 #define PC3           PCL,3          /* bit 3 */
                      00152 #define PC4           PCL,4          /* bit 4 */
                      00153 #define PC5           PCL,5          /* bit 5 */
                      00154 #define PC6           PCL,6          /* bit 6 */
                      00155 #define PC7           PCL,7          /* bit 7 */
                      00156 
                      00157 ; ----- STATUS Bits --------------------------------------------
                      00158 #define C               STATUS,0         /* bit 0 */
                      00159 #define DC              STATUS,1         /* bit 1 */
                      00160 #define Z               STATUS,2         /* bit 2 */
                      00161 
                      00162 ; ----- MCR Bits --------------------------------------------
                      00163 #define MINT00          MCR,0           /* bit 0 */
                      00164 #define MINT01          MCR,1           /* bit 1 */
                      00165 #define MINT10          MCR,2           /* bit 2 */
                      00166 #define MINT11          MCR,3           /* bit 3 */
                      00167 #define PD              MCR,4           /* bit 4 */
                      00168 #define TO              MCR,5           /* bit 5 */
                      00169 #define GIE             MCR,7           /* bit 7 */
                      00170 
                      00171 ; ----- INDF3 Bits --------------------------------------------
                      00172 #define INDF30           INDF3,0          /* bit 0 */
                      00173 #define INDF31           INDF3,1          /* bit 1 */
                      00174 #define INDF32           INDF3,2          /* bit 2 */
                      00175 #define INDF33           INDF3,3          /* bit 3 */
                      00176 #define INDF34           INDF3,4          /* bit 4 */
                      00177 #define INDF35           INDF3,5          /* bit 5 */
                      00178 #define INDF36           INDF3,6          /* bit 6 */
                      00179 #define INDF37           INDF3,7          /* bit 7 */
                      00180 
                      00181 ; ----- INTE Bits --------------------------------------------
                      00182 #define T0IE                INTE,0            /* bit 0 */
                      00183 #define T1IE            INTE,1            /* bit 1 */
                      00184 #define INT0IE          INTE,2            /* bit 2 */
                      00185 #define INT1IE          INTE,3            /* bit 3 */
                      00186 #define KBIE            INTE,4            /* bit 4 */
                      00187 #define ADIE            INTE,6            /* bit 6 */
                      00188 
                      00189 ; ----- INTF Bits --------------------------------------------
                      00190 #define T0IF                INTF,0              /* bit 0 */
                      00191 #define T1IF            INTF,1          /* bit 1 */
                      00192 #define INT0IF              INTF,2                /* bit 2 */
                      00193 #define INT1IF          INTF,3          /* bit 3 */
                      00194 #define KBIF            INTF,4          /* bit 4 */
                      00195 #define ADIF            INTF,6          /* bit 6 */
                      00196 
                      00197 ; ----- OSCM Bits --------------------------------------------
                      00198 #define HFEN            OSCM,0           /* bit 0 */
                      00199 #define LFEN            OSCM,1           /* bit 1 */
                      00200 #define CLKS            OSCM,2           /* bit 2 */
                      00201 #define STBH            OSCM,4           /* bit 4 */
                      00202 #define STBL            OSCM,5           /* bit 5 */
                      00203 
                      00204 ; ----- CLKO Bits --------------------------------------------
                      00205 #define CLKOS0          CLKO,0          /* bit 0 */
                      00206 #define CLKOS1          CLKO,1          /* bit 1 */
                      00207 #define CLKOS2          CLKO,2          /* bit 2 */
                      00208 #define CLKOEN          CLKO,7          /* bit 7 */
                      00209 
                      00210 ; ----- IOP0 Bits --------------------------------------------
                      00211 #define P00D            IOP0,0           /* bit 0 */
                      00212 #define P01D            IOP0,1           /* bit 1 */
                      00213 #define P02D            IOP0,2           /* bit 2 */
                      00214 #define P03D            IOP0,3           /* bit 3 */
                      00215 #define P04D            IOP0,4           /* bit 4 */
                      00216 #define P05D            IOP0,5           /* bit 5 */
                      00217 #define P06D            IOP0,6           /* bit 6 */
                      00218 #define P07D            IOP0,7           /* bit 7 */
                      00219 
                      00220 ; ----- OEP0 Bits --------------------------------------------
                      00221 #define P00OE           OEP0,0          /* bit 0 */
                      00222 #define P01OE           OEP0,1          /* bit 1 */
                      00223 #define P02OE           OEP0,2          /* bit 2 */
                      00224 #define P03OE           OEP0,3          /* bit 3 */
                      00225 #define P04OE           OEP0,4          /* bit 4 */
                      00226 #define P05OE           OEP0,5          /* bit 5 */
                      00227 #define P06OE           OEP0,6          /* bit 6 */
                      00228 #define P07OE           OEP0,7          /* bit 7 */
                      00229 
                      00230 ; ----- PUP0 Bits --------------------------------------------
                      00231 #define P00PU           PUP0,0          /* bit 0 */
                      00232 #define P01PU           PUP0,1          /* bit 1 */
                      00233 #define P02PU           PUP0,2          /* bit 2 */
                      00234 #define P03PU           PUP0,3          /* bit 3 */
                      00235 #define P04PU           PUP0,4          /* bit 4 */
                      00236 #define P05PU           PUP0,5          /* bit 5 */
                      00237 #define P06PU           PUP0,6          /* bit 6 */
                      00238 #define P07PU           PUP0,7          /* bit 7 */
                      00239 
                      00240 ; ----- PDP0 Bits --------------------------------------------
                      00241 #define P00PD           PDP0,0            /* bit 0 */
                      00242 #define P01PD           PDP0,1            /* bit 1 */
                      00243 #define P02PD           PDP0,2            /* bit 2 */
                      00244 #define P03PD           PDP0,3            /* bit 3 */
                      00245 #define P04PD           PDP0,4            /* bit 4 */
                      00246 #define P05PD           PDP0,5            /* bit 5 */
                      00247 #define P06PD           PDP0,6            /* bit 6 */
                      00248 #define P07PD           PDP0,7            /* bit 7 */
                      00249 
                      00250 ; ----- IOP1 Bits --------------------------------------------
                      00251 #define P10D            IOP1,0           /* bit 0 */
                      00252 #define P11D            IOP1,1           /* bit 1 */
                      00253 #define P12D            IOP1,2           /* bit 2 */
                      00254 
                      00255 ; ----- OEP1 Bits --------------------------------------------
                      00256 #define P10OE           OEP1,0           /* bit 0 */
                      00257 #define P11OE           OEP1,1           /* bit 1 */
                      00258 #define P12OE           OEP1,2           /* bit 2 */
                      00259 
                      00260 ; ----- PUP1 Bits --------------------------------------------
                      00261 #define P10PU           PUP1,0           /* bit 0 */
                      00262 #define P11PU           PUP1,1           /* bit 1 */
                      00263 #define P12PU           PUP1,2           /* bit 2 */
                      00264 
                      00265 ; ----- PDP1 Bits --------------------------------------------
                      00266 #define P10PD               PDP1,0                 /* bit 0 */
                      00267 #define P11PD               PDP1,1                 /* bit 1 */
                      00268 #define P12PD               PDP1,2                 /* bit 2 */
                      00269 
                      00270 ; ----- IOP2 Bits --------------------------------------------
                      00271 #define P20D            IOP2,0           /* bit 0 */
                      00272 #define P21D            IOP2,1           /* bit 1 */
                      00273 #define P22D            IOP2,2           /* bit 2 */
                      00274 #define P23D            IOP2,3           /* bit 3 */
                      00275 #define P24D            IOP2,4           /* bit 4 */
                      00276 #define P25D            IOP2,5           /* bit 5 */
                      00277 #define P26D            IOP2,6           /* bit 6 */
                      00278 
                      00279 ; ----- OEP2 Bits --------------------------------------------
                      00280 #define P20OE           OEP2,0          /* bit 0 */
                      00281 #define P21OE           OEP2,1          /* bit 1 */
                      00282 #define P22OE           OEP2,2          /* bit 2 */
                      00283 #define P23OE           OEP2,3          /* bit 3 */
                      00284 #define P24OE           OEP2,4          /* bit 4 */
                      00285 #define P25OE           OEP2,5          /* bit 5 */
                      00286 #define P26OE           OEP2,6          /* bit 6 */
                      00287 
                      00288 ; ----- PUP2 Bits --------------------------------------------
                      00289 #define P20PU           PUP2,0          /* bit 0 */
                      00290 #define P21PU           PUP2,1          /* bit 1 */
                      00291 #define P22PU           PUP2,2          /* bit 2 */
                      00292 #define P23PU           PUP2,3          /* bit 3 */
                      00293 #define P24PU           PUP2,4          /* bit 4 */
                      00294 #define P25PU           PUP2,5          /* bit 5 */
                      00295 #define P26PU           PUP2,6          /* bit 6 */
                      00296 
                      00297 ; ----- PDP2 Bits --------------------------------------------
                      00298 #define P20PD           PDP2,0          /* bit 0 */
                      00299 #define P21PD               PDP2,1                /* bit 1 */
                      00300 #define P22PD           PDP2,2            /* bit 2 */
                      00301 #define P23PD           PDP2,3            /* bit 3 */
                      00302 #define P24PD           PDP2,4            /* bit 4 */
                      00303 #define P25PD               PDP2,5                /* bit 5 */
                      00304 #define P26PD               PDP2,6                /* bit 6 */
                      00305 
                      00306 ; ----- IOP3 Bits --------------------------------------------
                      00307 #define P30D            IOP3,0          /* bit 0 */
                      00308 #define P31D            IOP3,1          /* bit 1 */
                      00309 #define P32D            IOP3,2          /* bit 2 */
                      00310 #define P33D            IOP3,3          /* bit 3 */
                      00311 #define P34D            IOP3,4          /* bit 4 */
                      00312 #define P35D            IOP3,5          /* bit 5 */
                      00313 #define P36D            IOP3,6          /* bit 6 */
                      00314 #define P37D            IOP3,7          /* bit 7 */
                      00315 
                      00316 ; ----- OEP3 Bits --------------------------------------------
                      00317 #define P30OE           OEP3,0          /* bit 0 */
                      00318 #define P31OE           OEP3,1          /* bit 1 */
                      00319 #define P32OE           OEP3,2          /* bit 2 */
                      00320 #define P33OE           OEP3,3          /* bit 3 */
                      00321 #define P34OE           OEP3,4          /* bit 4 */
                      00322 #define P35OE           OEP3,5          /* bit 5 */
                      00323 #define P36OE           OEP3,6          /* bit 6 */
                      00324 #define P37OE           OEP3,7          /* bit 7 */
                      00325 
                      00326 ; ----- PUP3 Bits --------------------------------------------
                      00327 #define P30PU           PUP3,0          /* bit 0 */
                      00328 #define P31PU           PUP3,1          /* bit 1 */
                      00329 #define P32PU           PUP3,2          /* bit 2 */
                      00330 #define P33PU           PUP3,3          /* bit 3 */
                      00331 #define P34PU           PUP3,4          /* bit 4 */
                      00332 #define P35PU           PUP3,5          /* bit 5 */
                      00333 #define P36PU           PUP3,6          /* bit 6 */
                      00334 #define P37PU           PUP3,7          /* bit 7 */
                      00335 
                      00336 ; ----- PDP3 Bits --------------------------------------------
                      00337 #define P30PD               PDP3,0                /* bit 0 */
                      00338 #define P31PD               PDP3,1                /* bit 1 */
                      00339 #define P32PD               PDP3,2                /* bit 2 */
                      00340 #define P33PD               PDP3,3                /* bit 3 */
                      00341 #define P34PD               PDP3,4                /* bit 4 */
                      00342 #define P35PD               PDP3,5                /* bit 5 */
                      00343 #define P36PD               PDP3,6                /* bit 6 */
                      00344 #define P37PD               PDP3,7                /* bit 7 */
                      00345 
                      00346 ; ----- T0CR Bits --------------------------------------------
                      00347 #define T0PR0           T0CR,0           /* bit 0 */
                      00348 #define T0PR1           T0CR,1           /* bit 1 */
                      00349 #define T0PR2           T0CR,2           /* bit 2 */
                      00350 #define T0PTS0          T0CR,3           /* bit 3 */
                      00351 #define T0PTS1          T0CR,4           /* bit 4 */
                      00352 #define BUZ0OE          T0CR,5           /* bit 5 */
                      00353 #define PWM0OE          T0CR,6           /* bit 6 */
                      00354 #define TC0EN           T0CR,7           /* bit 7 */
                      00355 
                      00356 ; ----- T0CNT Bits --------------------------------------------
                      00357 #define T0C0            T0CNT,0          /* bit 0 */
                      00358 #define T0C1            T0CNT,1          /* bit 1 */
                      00359 #define T0C2            T0CNT,2          /* bit 2 */
                      00360 #define T0C3            T0CNT,3          /* bit 3 */
                      00361 #define T0C4            T0CNT,4          /* bit 4 */
                      00362 #define T0C5            T0CNT,5          /* bit 5 */
                      00363 #define T0C6            T0CNT,6          /* bit 6 */
                      00364 #define T0C7            T0CNT,7          /* bit 7 */
                      00365 
                      00366 ; ----- T0LOAD Bits --------------------------------------------
                      00367 #define T0LOAD0         T0LOAD,0      /* bit 0 */
                      00368 #define T0LOAD1         T0LOAD,1      /* bit 1 */
                      00369 #define T0LOAD2         T0LOAD,2      /* bit 2 */
                      00370 #define T0LOAD3         T0LOAD,3      /* bit 3 */
                      00371 #define T0LOAD4         T0LOAD,4      /* bit 4 */
                      00372 #define T0LOAD5         T0LOAD,5      /* bit 5 */
                      00373 #define T0LOAD6         T0LOAD,6      /* bit 6 */
                      00374 #define T0LOAD7         T0LOAD,7      /* bit 7 */
                      00375 
                      00376 ; ----- T0DATA Bits --------------------------------------------
                      00377 #define T0DATA0         T0DATA,0                /* bit 0 */
                      00378 #define T0DATA1         T0DATA,1          /* bit 1 */
                      00379 #define T0DATA2         T0DATA,2          /* bit 2 */
                      00380 #define T0DATA3         T0DATA,3          /* bit 3 */
                      00381 #define T0DATA4         T0DATA,4          /* bit 4 */
                      00382 #define T0DATA5         T0DATA,5          /* bit 5 */
                      00383 #define T0DATA6         T0DATA,6          /* bit 6 */
                      00384 #define T0DATA7         T0DATA,7          /* bit 7 */
                      00385 
                      00386 ; ----- T1CR Bits --------------------------------------------
                      00387 #define T1PR0               T1CR,0              /* bit 0 */
                      00388 #define T1PR1               T1CR,1              /* bit 1 */
                      00389 #define T1PR2               T1CR,2              /* bit 2 */
                      00390 #define T1PTS0              T1CR,3                  /* bit 3 */
                      00391 #define T1PTS1              T1CR,4                  /* bit 4 */
                      00392 #define BUZ1OE                T1CR,5                  /* bit 5 */
                      00393 #define PWM1OE                T1CR,6                  /* bit 6 */
                      00394 #define TC1EN                 T1CR,7              /* bit 7 */
                      00395 
                      00396 ; ----- T1CNT Bits --------------------------------------------
                      00397 #define T1C0            T1CNT,0          /* bit 0 */
                      00398 #define T1C1            T1CNT,1          /* bit 1 */
                      00399 #define T1C2            T1CNT,2          /* bit 2 */
                      00400 #define T1C3            T1CNT,3          /* bit 3 */
                      00401 #define T1C4            T1CNT,4          /* bit 4 */
                      00402 #define T1C5            T1CNT,5          /* bit 5 */
                      00403 #define T1C6            T1CNT,6          /* bit 6 */
                      00404 #define T1C7            T1CNT,7          /* bit 7 */
                      00405 
                      00406 ; ----- T1LOAD Bits --------------------------------------------
                      00407 #define T1LOAD0           T1LOAD,0              /* bit 0 */
                      00408 #define T1LOAD1           T1LOAD,1              /* bit 1 */
                      00409 #define T1LOAD2             T1LOAD,2              /* bit 2 */
                      00410 #define T1LOAD3             T1LOAD,3              /* bit 3 */
                      00411 #define T1LOAD4             T1LOAD,4              /* bit 4 */
                      00412 #define T1LOAD5             T1LOAD,5              /* bit 5 */
                      00413 #define T1LOAD6             T1LOAD,6              /* bit 6 */
                      00414 #define T1LOAD7             T1LOAD,7              /* bit 7 */
                      00415 
                      00416 ; ----- T1DATA Bits --------------------------------------------
                      00417 #define T1DATA0           T1DATA,0              /* bit 0 */
                      00418 #define T1DATA1           T1DATA,1              /* bit 1 */
                      00419 #define T1DATA2             T1DATA,2              /* bit 2 */
                      00420 #define T1DATA3             T1DATA,3              /* bit 3 */
                      00421 #define T1DATA4             T1DATA,4              /* bit 4 */
                      00422 #define T1DATA5             T1DATA,5              /* bit 5 */
                      00423 #define T1DATA6             T1DATA,6              /* bit 6 */
                      00424 #define T1DATA7             T1DATA,7              /* bit 7 */
                      00425 
                      00426 ; ----- T2CR Bits --------------------------------------------
                      00427 #define T2PR0               T2CR,0              /* bit 0 */
                      00428 #define T2PR1               T2CR,1              /* bit 1 */
                      00429 #define T2PR2               T2CR,2              /* bit 2 */
                      00430 #define T2PTS0              T2CR,3                  /* bit 3 */
                      00431 #define T2PTS1              T2CR,4                  /* bit 4 */
                      00432 #define T2MODE                T2CR,5                  /* bit 5 */
                      00433 #define TC2EN                 T2CR,7              /* bit 7 */
                      00434 
                      00435 ; ----- T2CNTH Bits --------------------------------------------
                      00436 #define T2C8            T2CNTH,0           /* bit 0 */
                      00437 #define T2C9            T2CNTH,1           /* bit 1 */
                      00438 #define T2C10           T2CNTH,2           /* bit 2 */
                      00439 #define T2C11           T2CNTH,3           /* bit 3 */
                      00440 #define T2C12           T2CNTH,4           /* bit 4 */
                      00441 #define T2C13           T2CNTH,5           /* bit 5 */
                      00442 #define T2C14           T2CNTH,6           /* bit 6 */
                      00443 #define T2C15           T2CNTH,7           /* bit 7 */
                      00444 
                      00445 ; ----- T2CNTL Bits --------------------------------------------
                      00446 #define T2C0            T2CNTL,0         /* bit 0 */
                      00447 #define T2C1            T2CNTL,1         /* bit 1 */
                      00448 #define T2C2            T2CNTL,2         /* bit 2 */
                      00449 #define T2C3            T2CNTL,3         /* bit 3 */
                      00450 #define T2C4            T2CNTL,4         /* bit 4 */
                      00451 #define T2C5            T2CNTL,5         /* bit 5 */
                      00452 #define T2C6            T2CNTL,6         /* bit 6 */
                      00453 #define T2C7            T2CNTL,7         /* bit 7 */
                      00454 
                      00455 ; ----- T2LOADH Bits --------------------------------------------
                      00456 #define T2LOAD8           T2LOADH,0             /* bit 0 */
                      00457 #define T2LOAD9           T2LOADH,1               /* bit 1 */
                      00458 #define T2LOAD10        T2LOADH,2         /* bit 2 */
                      00459 #define T2LOAD11          T2LOADH,3               /* bit 3 */
                      00460 #define T2LOAD12          T2LOADH,4               /* bit 4 */
                      00461 #define T2LOAD13          T2LOADH,5               /* bit 5 */
                      00462 #define T2LOAD14          T2LOADH,6               /* bit 6 */
                      00463 #define T2LOAD15          T2LOADH,7               /* bit 7 */
                      00464 
                      00465 ; ----- T2LOADL Bits --------------------------------------------
                      00466 #define T2LOAD0           T2LOADL,0             /* bit 0 */
                      00467 #define T2LOAD1           T2LOADL,1               /* bit 1 */
                      00468 #define T2LOAD2             T2LOADL,2             /* bit 2 */
                      00469 #define T2LOAD3             T2LOADL,3             /* bit 3 */
                      00470 #define T2LOAD4             T2LOADL,4             /* bit 4 */
                      00471 #define T2LOAD5             T2LOADL,5             /* bit 5 */
                      00472 #define T2LOAD6             T2LOADL,6             /* bit 6 */
                      00473 #define T2LOAD7             T2LOADL,7             /* bit 7 */
                      00474 
                      00475 ; ----- TK0CR0 Bits --------------------------------------------
                      00476 #define TK0FQ0              TK0CR0,0              /* bit 0 */
                      00477 #define TK0FQ1              TK0CR0,1              /* bit 1 */
                      00478 #define TK0FQ2              TK0CR0,2              /* bit 2 */
                      00479 #define TK0CLR            TK0CR0,3                /* bit 3 */
                      00480 #define TK0RCE              TK0CR0,4                /* bit 4 */
                      00481 #define TK0JE               TK0CR0,5              /* bit 5 */
                      00482 
                      00483 ; ---- TK0CR1 Bits ----------------------------------------------
                      00484 #define TK0K0           TK0CR1,0            /* bit 0 */
                      00485 #define TK0K1           TK0CR1,1            /* bit 1 */
                      00486 #define TK0K2           TK0CR1,2            /* bit 2 */
                      00487 #define TK0FL0          TK0CR1,4            /* bit 4 */
                      00488 #define TK0FL1          TK0CR1,5            /* bit 5 */
                      00489 #define TK0IE           TK0CR1,6           /* bit 6 */
                      00490 #define TK0IF           TK0CR1,7           /* bit 7 */
                      00491 
                      00492 ; ---- TK0CR2 Bits ----------------------------------------------
                      00493 #define TK0IO0          TK0CR2,0          /* bit 0 */
                      00494 #define TK0IO1          TK0CR2,1          /* bit 1 */
                      00495 #define TK0IO2          TK0CR2,2          /* bit 2 */
                      00496 #define TK0IO3          TK0CR2,3          /* bit 3 */
                      00497 #define TK0IO4          TK0CR2,4          /* bit 4 */
                      00498 #define TK0IO5          TK0CR2,5          /* bit 5 */
                      00499 #define TK0IO6          TK0CR2,6          /* bit 6 */
                      00500 #define TK0IO7          TK0CR2,7          /* bit 7 */
                      00501 
                      00502 ; ---- TK0CNTH Bits ----------------------------------------------
                      00503 #define TK0C8           TK0CNTH,0         /* bit 0 */
                      00504 #define TK0C9           TK0CNTH,1         /* bit 1 */
                      00505 #define TK0C10          TK0CNTH,2         /* bit 2 */
                      00506 #define TK0C11          TK0CNTH,3         /* bit 3 */
                      00507 #define TK0C12          TK0CNTH,4         /* bit 4 */
                      00508 #define TK0C13          TK0CNTH,5         /* bit 5 */
                      00509 #define TK0C14          TK0CNTH,6         /* bit 6 */
                      00510 #define TK0C15          TK0CNTH,7         /* bit 7 */
                      00511 
                      00512 ; ----- TK0CNTL Bits --------------------------------------------
                      00513 #define TK0C0               TK0CNTL,0            /* bit 0 */
                      00514 #define TK0C1               TK0CNTL,1              /* bit 1 */
                      00515 #define TK0C2               TK0CNTL,2              /* bit 2 */
                      00516 #define TK0C3                 TK0CNTL,3            /* bit 3 */
                      00517 #define TK0C4               TK0CNTL,4              /* bit 4 */
                      00518 #define TK0C5                 TK0CNTL,5            /* bit 5 */
                      00519 #define TK0C6                 TK0CNTL,6            /* bit 6 */
                      00520 #define TK0C7                 TK0CNTL,7            /* bit 7 */
                      00521 
                      00522 ; ----- TK1CR0 Bits --------------------------------------------
                      00523 #define TK1FQ0              TK1CR0,0              /* bit 0 */
                      00524 #define TK1FQ1              TK1CR0,1              /* bit 1 */
                      00525 #define TK1FQ2              TK1CR0,2              /* bit 2 */
                      00526 #define TK1CLR            TK1CR0,3                /* bit 3 */
                      00527 #define TK1RCE              TK1CR0,4                /* bit 4 */
                      00528 #define TK1JE               TK1CR0,5              /* bit 5 */
                      00529 
                      00530 ; ---- TK1CR1 Bits ----------------------------------------------
                      00531 #define TK1K0           TK0CR1,0            /* bit 0 */
                      00532 #define TK1K1           TK0CR1,1            /* bit 1 */
                      00533 #define TK1K2           TK0CR1,2            /* bit 2 */
                      00534 #define TK1FL0          TK0CR1,4            /* bit 4 */
                      00535 #define TK1FL1          TK0CR1,5            /* bit 5 */
                      00536 #define TK1IE           TK0CR1,6            /* bit 6 */
                      00537 #define TK1IF           TK0CR1,7            /* bit 7 */
                      00538 
                      00539 ; ---- TK1CR2 Bits ----------------------------------------------
                      00540 #define TK1IO0          TK1CR2,0          /* bit 0 */
                      00541 #define TK1IO1          TK1CR2,1          /* bit 1 */
                      00542 #define TK1IO2          TK1CR2,2          /* bit 2 */
                      00543 #define TK1IO3          TK1CR2,3          /* bit 3 */
                      00544 #define TK1IO4          TK1CR2,4          /* bit 4 */
                      00545 #define TK1IO5          TK1CR2,5          /* bit 5 */
                      00546 #define TK1IO6          TK1CR2,6          /* bit 6 */
                      00547 #define TK1IO7          TK1CR2,7          /* bit 7 */
                      00548 
                      00549 ; ---- TK1CNTH Bits ----------------------------------------------
                      00550 #define TK1C8           TK1CNTH,0          /* bit 0 */
                      00551 #define TK1C9           TK1CNTH,1          /* bit 1 */
                      00552 #define TK1C10          TK1CNTH,2          /* bit 2 */
                      00553 #define TK1C11          TK1CNTH,3          /* bit 3 */
                      00554 #define TK1C12          TK1CNTH,4          /* bit 4 */
                      00555 #define TK1C13          TK1CNTH,5          /* bit 5 */
                      00556 #define TK1C14          TK1CNTH,6          /* bit 6 */
                      00557 #define TK1C15          TK1CNTH,7          /* bit 7 */
                      00558 
                      00559 ; ----- TK1CNTL Bits --------------------------------------------
                      00560 #define TK1C0               TK1CNTL,0            /* bit 0 */
                      00561 #define TK1C1               TK1CNTL,1              /* bit 1 */
                      00562 #define TK1C2               TK1CNTL,2              /* bit 2 */
                      00563 #define TK1C3                 TK1CNTL,3            /* bit 3 */
                      00564 #define TK1C4               TK1CNTL,4              /* bit 4 */
                      00565 #define TK1C5                 TK1CNTL,5            /* bit 5 */
                      00566 #define TK1C6                 TK1CNTL,6            /* bit 6 */
                      00567 #define TK1C7                 TK1CNTL,7            /* bit 7 */
                      00568 
                      00569 ; ----- ADCR0 Bits --------------------------------------------
                      00570 #define ADON            ADCR0,0              /* bit 0 */
                      00571 #define ADEOC           ADCR0,1                /* bit 1 */
                      00572 #define ADCHS0          ADCR0,3                  /* bit 3 */
                      00573 #define ADCHS1          ADCR0,4                  /* bit 4 */
                      00574 #define ADCHS2          ADCR0,5                  /* bit 5 */
                      00575 #define ADCHS3          ADCR0,6                  /* bit 6 */
                      00576 #define ADCHS4          ADCR0,7                  /* bit 7 */
                      00577 
                      00578 ; ----- ADCR1 Bits --------------------------------------------
                      00579 #define VREFP_PHEN          ADCR1,0        /* bit 0 */
                      00580 #define ADCKS0              ADCR1,1                  /* bit 1 */
                      00581 #define ADCKS1              ADCR1,2                  /* bit 2 */
                      00582 #define ADREF0              ADCR1,3                  /* bit 3 */
                      00583 #define ADREF1              ADCR1,4                  /* bit 4 */
                      00584 #define ADREF2              ADCR1,5                  /* bit 5 */
                      00585 #define ADREF3              ADCR1,6                  /* bit 6 */
                      00586 #define ADTEN                 ADCR1,7                /* bit 7 */
                      00587 
                      00588 ; ----- ADCR2 Bits --------------------------------------------
                      00589 #define ADSMP0          ADCR2,0                /* bit 0 */
                      00590 #define ADSMP1          ADCR2,1                /* bit 1 */
                      00591 #define ADSMP2          ADCR2,2                /* bit 2 */
                      00592 #define ADSMP3          ADCR2,3                /* bit 3 */
                      00593 
                      00594 ; ---- ADIO0 Bits ----------------------------------------------
                      00595 #define ADIOS0          ADIO0,0          /* bit 0 */
                      00596 #define ADIOS1          ADIO0,1          /* bit 1 */
                      00597 #define ADIOS2          ADIO0,2          /* bit 2 */
                      00598 #define ADIOS3          ADIO0,3          /* bit 3 */
                      00599 #define ADIOS4          ADIO0,4          /* bit 4 */
                      00600 #define ADIOS5          ADIO0,5          /* bit 5 */
                      00601 #define ADIOS6          ADIO0,6          /* bit 6 */
                      00602 #define ADIOS7          ADIO0,7          /* bit 7 */
                      00603 
                      00604 ; ---- ADIO1 Bits ----------------------------------------------
                      00605 #define ADIOS8          ADIO1,0         /* bit 0 */
                      00606 #define ADIOS9          ADIO1,1         /* bit 1 */
                      00607 #define ADIOS10         ADIO1,2         /* bit 2 */
                      00608 #define ADIOS11         ADIO1,3         /* bit 3 */
                      00609 #define ADIOS12         ADIO1,4         /* bit 4 */
                      00610 #define ADIOS13         ADIO1,5         /* bit 5 */
                      00611 #define ADIOS14         ADIO1,6         /* bit 6 */
                      00612 #define ADIOS15         ADIO1,7         /* bit 7 */
                      00613 
                      00614 ; ---- ADRH Bits ----------------------------------------------
                      00615 #define ADR4            ADRH,0           /* bit 0 */
                      00616 #define ADR5            ADRH,1           /* bit 1 */
                      00617 #define ADR6            ADRH,2           /* bit 2 */
                      00618 #define ADR7            ADRH,3           /* bit 3 */
                      00619 #define ADR8            ADRH,4           /* bit 4 */
                      00620 #define ADR9            ADRH,5           /* bit 5 */
                      00621 #define ADR10           ADRH,6           /* bit 6 */
                      00622 #define ADR11           ADRH,7           /* bit 7 */
                      00623 
                      00624 ; ---- ADRL Bits ----------------------------------------------
                      00625 #define ADR0            ADRL,0           /* bit 0 */
                      00626 #define ADR1            ADRL,1           /* bit 1 */
                      00627 #define ADR2            ADRL,2           /* bit 2 */
                      00628 #define ADR3            ADRL,3           /* bit 3 */
                      00629 
                      00630 ; ---- LEDCR0 Bits ----------------------------------------------
                      00631 #define GYS0            LEDCR0,0         /* bit 0 */
                      00632 #define GYS1            LEDCR0,1         /* bit 1 */
                      00633 #define GYS2            LEDCR0,2         /* bit 2 */
                      00634 #define DUTY            LEDCR0,6         /* bit 6 */
                      00635 #define LEDEN           LEDCR0,7         /* bit 7 */
                      00636 
                      00637 ; ---- LEDCR1 Bits ----------------------------------------------
                      00638 #define FLED0           LEDCR1,0         /* bit 0 */
                      00639 #define FLED1           LEDCR1,1         /* bit 1 */
                      00640 #define IREFEN          LEDCR1,2         /* bit 2 */
                      00641 #define IBPS0           LEDCR1,3         /* bit 3 */
                      00642 #define IBPS1           LEDCR1,4         /* bit 4 */
                      00643 #define CLKS0           LEDCR1,5         /* bit 5 */
                      00644 #define CLKS1           LEDCR1,6         /* bit 6 */
                      00645 #define DRVPS           LEDCR1,7         /* bit 7 */
                      00646 
                      00647 ; ---- LEDIOS0 Bits ----------------------------------------------
                      00648 #define COMIOS1          LEDIOS0,0          /* bit 0 */
                      00649 #define COMIOS2          LEDIOS0,1          /* bit 1 */
                      00650 #define COMIOS3          LEDIOS0,2          /* bit 2 */
                      00651 #define COMIOS4          LEDIOS0,3          /* bit 3 */
                      00652 #define COMIOS5          LEDIOS0,4          /* bit 4 */
                      00653 #define COMIOS6          LEDIOS0,5          /* bit 5 */
                      00654 #define COMIOS7          LEDIOS0,6          /* bit 6 */
                      00655 #define COMIOS8          LEDIOS0,7          /* bit 7 */
                      00656 
                      00657 ; ---- LEDIOS1 Bits ----------------------------------------------
                      00658 #define SEGIOS1          LEDIOS1,0          /* bit 0 */
                      00659 #define SEGIOS2          LEDIOS1,1          /* bit 1 */
                      00660 #define SEGIOS3          LEDIOS1,2          /* bit 2 */
                      00661 #define SEGIOS4          LEDIOS1,3          /* bit 3 */
                      00662 #define SEGIOS5          LEDIOS1,4          /* bit 4 */
                      00663 #define SEGIOS6          LEDIOS1,5          /* bit 5 */
                      00664 #define SEGIOS7          LEDIOS1,6          /* bit 6 */
                      00665 #define SEGIOS8          LEDIOS1,7          /* bit 7 */
                      00666 
                      00667 ; ---- LEDDRV Bits ----------------------------------------------
                      00668 #define COMDV1          LEDDRV,0          /* bit 0 */
                      00669 #define COMDV2          LEDDRV,1          /* bit 1 */
                      00670 #define COMDV3          LEDDRV,2          /* bit 2 */
                      00671 #define COMDV4          LEDDRV,3          /* bit 3 */
                      00672 #define COMDV5          LEDDRV,4          /* bit 4 */
                      00673 #define COMDV6          LEDDRV,5          /* bit 5 */
                      00674 #define COMDV7          LEDDRV,6          /* bit 6 */
                      00675 #define COMDV8          LEDDRV,7          /* bit 7 */
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015         extern  ___uchar2fs
                      00016         extern  ___schar2fs
                      00017         extern  ___uint2fs
                      00018         extern  ___sint2fs
                      00019         extern  ___ulong2fs
                      00020         extern  ___slong2fs
                      00021         extern  ___fs2uchar
                      00022         extern  ___fs2schar
                      00023         extern  ___fs2uint
                      00024         extern  ___fs2sint
                      00025         extern  ___fs2ulong
                      00026         extern  ___fs2slong
                      00027         extern  ___fssub
                      00028         extern  ___fsmul
                      00029         extern  ___fsdiv
                      00030         extern  ___fslt
                      00031         extern  ___fseq
                      00032         extern  ___fsneq
                      00033         extern  ___fsgt
                      00034 
                      00035         extern STK06
                      00036         extern STK05
                      00037         extern STK04
                      00038         extern STK03
                      00039         extern STK02
                      00040         extern STK01
                      00041         extern STK00
                      00042 ;--------------------------------------------------------
                      00043 ; global declarations
                      00044 ;--------------------------------------------------------
                      00045         global  ___fsadd
                      00046 
                      00047 ;--------------------------------------------------------
                      00048 ; global definitions
                      00049 ;--------------------------------------------------------
                      00050 ;--------------------------------------------------------
                      00051 ; absolute symbol definitions
                      00052 ;--------------------------------------------------------
                      00053 ;--------------------------------------------------------
                      00054 ; compiler-defined variables
                      00055 ;--------------------------------------------------------
                      00056 UDL_fsadd_0     udata
0000                  00057 r0x100B res     1
0000                  00058 r0x100A res     1
0001                  00059 r0x1009 res     1
0001                  00060 r0x1008 res     1
0002                  00061 r0x100F res     1
0002                  00062 r0x100E res     1
0003                  00063 r0x100D res     1
0003                  00064 r0x100C res     1
0004                  00065 r0x1010 res     1
0004                  00066 r0x1011 res     1
0005                  00067 r0x1012 res     1
0005                  00068 r0x1013 res     1
0006                  00069 r0x1014 res     1
0006                  00070 r0x1015 res     1
0007                  00071 r0x1016 res     1
0007                  00072 r0x1017 res     1
0008                  00073 r0x1018 res     1
0008                  00074 r0x1019 res     1
0009                  00075 r0x101A res     1
0009                  00076 r0x101B res     1
000A                  00077 r0x101C res     1
000A                  00078 r0x101D res     1
000B                  00079 r0x101E res     1
000B                  00080 r0x101F res     1
000C                  00081 ___fsadd_fl1_1_22       res     4
000E                  00082 ___fsadd_fl2_1_22       res     4
                      00083 ;--------------------------------------------------------
                      00084 ; initialized data
                      00085 ;--------------------------------------------------------
                      00086 ;--------------------------------------------------------
                      00087 ; overlayable items in internal ram 
                      00088 ;--------------------------------------------------------
                      00089 ;       udata_ovr
                      00090 ;--------------------------------------------------------
                      00091 ; code
                      00092 ;--------------------------------------------------------
                      00093 code_fsadd      code
                      00094 ;***
                      00095 ;  pBlock Stats: dbName = C
                      00096 ;***
                      00097 ;entry:  ___fsadd       ;Function start
                      00098 ; 2 exit points
                      00099 ;has an exit
                      00100 ;31 compiler assigned registers:
                      00101 ;   r0x1008
                      00102 ;   STK00
                      00103 ;   r0x1009
                      00104 ;   STK01
                      00105 ;   r0x100A
                      00106 ;   STK02
                      00107 ;   r0x100B
                      00108 ;   STK03
                      00109 ;   r0x100C
                      00110 ;   STK04
                      00111 ;   r0x100D
                      00112 ;   STK05
                      00113 ;   r0x100E
                      00114 ;   STK06
                      00115 ;   r0x100F
                      00116 ;   r0x1010
                      00117 ;   r0x1011
                      00118 ;   r0x1012
                      00119 ;   r0x1013
                      00120 ;   r0x1014
                      00121 ;   r0x1015
                      00122 ;   r0x1016
                      00123 ;   r0x1017
                      00124 ;   r0x1018
                      00125 ;   r0x1019
                      00126 ;   r0x101A
                      00127 ;   r0x101B
                      00128 ;   r0x101C
                      00129 ;   r0x101D
                      00130 ;   r0x101E
                      00131 ;   r0x101F
                      00132 ;; Starting pCode block
                      00133 ;;[ICODE] ../libsdcc/fsadd.c:53:  _entry($30) :
                      00134 ;;[ICODE] ../libsdcc/fsadd.c:53:        proc ___fsadd [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0000                  00135 ___fsadd        ;Function start
                      00136 ; 2 exit points
                      00137 ;;[ICODE] ../libsdcc/fsadd.c:53: iTemp0 [k2 lr3:7 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsadd_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ] = recv ___fsadd [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
                      00138 ;       .line   53; "../libsdcc/fsadd.c"        float __fsadd (float a1, float a2) _FS_REENTRANT
0000   5600           00139         MOVRA   r0x1008
0001   5800           00140         MOVAR   STK00
0002   5600           00141         MOVRA   r0x1009
0003   5800           00142         MOVAR   STK01
0004   5600           00143         MOVRA   r0x100A
0005   5800           00144         MOVAR   STK02
0006   5600           00145         MOVRA   (___fsadd_fl1_1_22 + 0)
0007   5600           00146         MOVRA   r0x100B
                      00147 ;;[ICODE] ../libsdcc/fsadd.c:53: iTemp1 [k4 lr4:9 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsadd_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ] = recv ___fsadd [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0008   5800           00148         MOVAR   STK03
0009   5600           00149         MOVRA   r0x100C
000A   5800           00150         MOVAR   STK04
000B   5600           00151         MOVRA   r0x100D
000C   5800           00152         MOVAR   STK05
000D   5600           00153         MOVRA   r0x100E
000E   5800           00154         MOVAR   STK06
000F   5600           00155         MOVRA   (___fsadd_fl2_1_22 + 0)
0010   5600           00156         MOVRA   r0x100F
                      00157 ;;[ICODE] ../libsdcc/fsadd.c:58:        iTemp2 [k6 lr5:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsadd_sign_1_22}[r0x1008 r0x1009 r0x100A r0x100B ] := 0x0 {unsigned-long-int literal}
                      00158 ;       .line   58; "../libsdcc/fsadd.c"        unsigned long sign = 0;
0011   7600           00159         CLRR    r0x1010
0012   7600           00160         CLRR    r0x1011
0013   7600           00161         CLRR    r0x1012
0014   7600           00162         CLRR    r0x1013
                      00163 ;;[ICODE] ../libsdcc/fsadd.c:60:        iTemp3 [k9 lr6:7 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsadd_fl1_1_22 [k8 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00164 ;;[ICODE] ../libsdcc/fsadd.c:60:        *(iTemp3 [k9 lr6:7 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp0 [k2 lr3:7 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsadd_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00165 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
                      00166 ;;117   MOVAR   r0x100B
                      00167 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
                      00168 ;       .line   60; "../libsdcc/fsadd.c"        fl1.f = a1;
0015   5800           00169         MOVAR   r0x100A
0016   5600           00170         MOVRA   (___fsadd_fl1_1_22 + 1)
                      00171 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
0017   5800           00172         MOVAR   r0x1009
0018   5600           00173         MOVRA   (___fsadd_fl1_1_22 + 2)
                      00174 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
0019   5800           00175         MOVAR   r0x1008
001A   5600           00176         MOVRA   (___fsadd_fl1_1_22 + 3)
                      00177 ;;[ICODE] ../libsdcc/fsadd.c:61:        iTemp5 [k13 lr8:9 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsadd_fl2_1_22 [k12 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00178 ;;[ICODE] ../libsdcc/fsadd.c:61:        *(iTemp5 [k13 lr8:9 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp1 [k4 lr4:9 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsadd_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ]
                      00179 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
                      00180 ;;118   MOVAR   r0x100F
                      00181 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
                      00182 ;       .line   61; "../libsdcc/fsadd.c"        fl2.f = a2;
001B   5800           00183         MOVAR   r0x100E
001C   5600           00184         MOVRA   (___fsadd_fl2_1_22 + 1)
                      00185 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
001D   5800           00186         MOVAR   r0x100D
001E   5600           00187         MOVRA   (___fsadd_fl2_1_22 + 2)
                      00188 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
001F   5800           00189         MOVAR   r0x100C
0020   5600           00190         MOVRA   (___fsadd_fl2_1_22 + 3)
                      00191 ;;[ICODE] ../libsdcc/fsadd.c:64:        iTemp7 [k16 lr10:11 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsadd_fl1_1_22 [k8 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00192 ;;[ICODE] ../libsdcc/fsadd.c:64:        iTemp9 [k19 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp7 [k16 lr10:11 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00193 ;       .line   64; "../libsdcc/fsadd.c"        if (!fl1.l)
0021   5800           00194         MOVAR   (___fsadd_fl1_1_22 + 0)
0022   5600           00195         MOVRA   r0x100B
0023   5800           00196         MOVAR   (___fsadd_fl1_1_22 + 1)
0024   5600           00197         MOVRA   r0x100A
0025   5800           00198         MOVAR   (___fsadd_fl1_1_22 + 2)
0026   5600           00199         MOVRA   r0x1009
0027   5800           00200         MOVAR   (___fsadd_fl1_1_22 + 3)
0028   5600           00201         MOVRA   r0x1008
                      00202 ;;[ICODE] ../libsdcc/fsadd.c:64:        if iTemp9 [k19 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] != 0 goto _iffalse_0($2)
0029   5800           00203         MOVAR   r0x100B
002A   5C00           00204         ORAR    r0x100A
002B   5C00           00205         ORAR    r0x1009
002C   5C00           00206         ORAR    r0x1008
002D   E5A7           00207         JBSET   STATUS,2
002E   A000           00208         GOTO    _00106_DS_
                      00209 ;;[ICODE] ../libsdcc/fsadd.c:65:        iTemp10 [k20 lr13:14 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsadd_fl2_1_22 [k12 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00210 ;;[ICODE] ../libsdcc/fsadd.c:65:        iTemp12 [k23 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp10 [k20 lr13:14 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00211 ;       .line   65; "../libsdcc/fsadd.c"        return (fl2.f);
002F   5800           00212         MOVAR   (___fsadd_fl2_1_22 + 0)
0030   5600           00213         MOVRA   r0x100B
0031   5800           00214         MOVAR   (___fsadd_fl2_1_22 + 1)
0032   5600           00215         MOVRA   r0x100A
0033   5800           00216         MOVAR   (___fsadd_fl2_1_22 + 2)
0034   5600           00217         MOVRA   r0x1009
0035   5800           00218         MOVAR   (___fsadd_fl2_1_22 + 3)
0036   5600           00219         MOVRA   r0x1008
                      00220 ;;[ICODE] ../libsdcc/fsadd.c:65:        ret iTemp12 [k23 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0037   5800           00221         MOVAR   r0x100B
0038   5600           00222         MOVRA   STK02
0039   5800           00223         MOVAR   r0x100A
003A   5600           00224         MOVRA   STK01
003B   5800           00225         MOVAR   r0x1009
003C   5600           00226         MOVRA   STK00
003D   5800           00227         MOVAR   r0x1008
003E   A000           00228         GOTO    _00133_DS_
                      00229 ;;[ICODE] ../libsdcc/fsadd.c:65:  _iffalse_0($2) :
                      00230 ;;[ICODE] ../libsdcc/fsadd.c:66:        iTemp13 [k24 lr17:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsadd_fl2_1_22 [k12 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00231 ;;[ICODE] ../libsdcc/fsadd.c:66:        iTemp15 [k27 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp13 [k24 lr17:18 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
003F                  00232 _00106_DS_
                      00233 ;       .line   66; "../libsdcc/fsadd.c"        if (!fl2.l)
003F   5800           00234         MOVAR   (___fsadd_fl2_1_22 + 0)
0040   5600           00235         MOVRA   r0x100B
0041   5800           00236         MOVAR   (___fsadd_fl2_1_22 + 1)
0042   5600           00237         MOVRA   r0x100A
0043   5800           00238         MOVAR   (___fsadd_fl2_1_22 + 2)
0044   5600           00239         MOVRA   r0x1009
0045   5800           00240         MOVAR   (___fsadd_fl2_1_22 + 3)
0046   5600           00241         MOVRA   r0x1008
                      00242 ;;[ICODE] ../libsdcc/fsadd.c:66:        if iTemp15 [k27 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] != 0 goto _iffalse_1($4)
0047   5800           00243         MOVAR   r0x100B
0048   5C00           00244         ORAR    r0x100A
0049   5C00           00245         ORAR    r0x1009
004A   5C00           00246         ORAR    r0x1008
004B   E5A7           00247         JBSET   STATUS,2
004C   A000           00248         GOTO    _00108_DS_
                      00249 ;;[ICODE] ../libsdcc/fsadd.c:67:        iTemp16 [k28 lr20:21 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsadd_fl1_1_22 [k8 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00250 ;;[ICODE] ../libsdcc/fsadd.c:67:        iTemp18 [k31 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp16 [k28 lr20:21 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00251 ;       .line   67; "../libsdcc/fsadd.c"        return (fl1.f);
004D   5800           00252         MOVAR   (___fsadd_fl1_1_22 + 0)
004E   5600           00253         MOVRA   r0x100B
004F   5800           00254         MOVAR   (___fsadd_fl1_1_22 + 1)
0050   5600           00255         MOVRA   r0x100A
0051   5800           00256         MOVAR   (___fsadd_fl1_1_22 + 2)
0052   5600           00257         MOVRA   r0x1009
0053   5800           00258         MOVAR   (___fsadd_fl1_1_22 + 3)
0054   5600           00259         MOVRA   r0x1008
                      00260 ;;[ICODE] ../libsdcc/fsadd.c:67:        ret iTemp18 [k31 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0055   5800           00261         MOVAR   r0x100B
0056   5600           00262         MOVRA   STK02
0057   5800           00263         MOVAR   r0x100A
0058   5600           00264         MOVRA   STK01
0059   5800           00265         MOVAR   r0x1009
005A   5600           00266         MOVRA   STK00
005B   5800           00267         MOVAR   r0x1008
005C   A000           00268         GOTO    _00133_DS_
                      00269 ;;[ICODE] ../libsdcc/fsadd.c:67:  _iffalse_1($4) :
                      00270 ;;[ICODE] ../libsdcc/fsadd.c:69:        iTemp20 [k34 lr24:25 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsadd_fl1_1_22 [k8 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00271 ;;[ICODE] ../libsdcc/fsadd.c:69:        iTemp22 [k37 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp20 [k34 lr24:25 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
005D                  00272 _00108_DS_
                      00273 ;       .line   69; "../libsdcc/fsadd.c"        exp1 = EXP (fl1.l);
005D   5800           00274         MOVAR   (___fsadd_fl1_1_22 + 0)
005E   5600           00275         MOVRA   r0x100B
005F   5800           00276         MOVAR   (___fsadd_fl1_1_22 + 1)
0060   5600           00277         MOVRA   r0x100A
0061   5800           00278         MOVAR   (___fsadd_fl1_1_22 + 2)
0062   5600           00279         MOVRA   r0x1009
0063   5800           00280         MOVAR   (___fsadd_fl1_1_22 + 3)
0064   5600           00281         MOVRA   r0x1008
                      00282 ;;[ICODE] ../libsdcc/fsadd.c:69:        iTemp23 [k38 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] = iTemp22 [k37 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] >> 0x17 {const-unsigned-char literal}
0065   5000           00283         RLAR    r0x1009
0066   5000           00284         RLAR    r0x1008
0067   5600           00285         MOVRA   r0x100B
0068   5600           00286         MOVRA   r0x100F
0069   7600           00287         CLRR    r0x100E
006A   5200           00288         RLR     r0x100E
006B   7600           00289         CLRR    r0x100D
006C   7600           00290         CLRR    r0x100C
                      00291 ;;[ICODE] ../libsdcc/fsadd.c:69:        iTemp24 [k39 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = iTemp23 [k38 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] & 0xff {unsigned-long-int literal}
                      00292 ;;116   MOVAR   r0x100F
006D   7600           00293         CLRR    r0x100A
006E   7600           00294         CLRR    r0x1009
006F   7600           00295         CLRR    r0x1008
                      00296 ;;[ICODE] ../libsdcc/fsadd.c:69:        iTemp19 [k32 lr28:98 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ] = (int fixed)iTemp24 [k39 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0070   5800           00297         MOVAR   r0x100B
0071   5600           00298         MOVRA   r0x100F
0072   3C00           00299         MOVAI   0x00
0073   5600           00300         MOVRA   r0x100E
                      00301 ;;[ICODE] ../libsdcc/fsadd.c:70:        iTemp27 [k43 lr30:31 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsadd_fl2_1_22 [k12 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00302 ;;[ICODE] ../libsdcc/fsadd.c:70:        iTemp29 [k46 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp27 [k43 lr30:31 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00303 ;       .line   70; "../libsdcc/fsadd.c"        exp2 = EXP (fl2.l);
0074   5800           00304         MOVAR   (___fsadd_fl2_1_22 + 0)
0075   5600           00305         MOVRA   r0x100B
0076   5800           00306         MOVAR   (___fsadd_fl2_1_22 + 1)
0077   5600           00307         MOVRA   r0x100A
0078   5800           00308         MOVAR   (___fsadd_fl2_1_22 + 2)
0079   5600           00309         MOVRA   r0x1009
007A   5800           00310         MOVAR   (___fsadd_fl2_1_22 + 3)
007B   5600           00311         MOVRA   r0x1008
                      00312 ;;[ICODE] ../libsdcc/fsadd.c:70:        iTemp30 [k47 lr32:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1006 r0x1007 r0x100C r0x100D ] = iTemp29 [k46 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] >> 0x17 {const-unsigned-char literal}
007C   5000           00313         RLAR    r0x1009
007D   5000           00314         RLAR    r0x1008
007E   5600           00315         MOVRA   r0x100D
007F   7600           00316         CLRR    r0x100C
0080   5200           00317         RLR     r0x100C
0081   7600           00318         CLRR    r0x1014
0082   7600           00319         CLRR    r0x1015
                      00320 ;;[ICODE] ../libsdcc/fsadd.c:70:        iTemp31 [k48 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = iTemp30 [k47 lr32:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1006 r0x1007 r0x100C r0x100D ] & 0xff {unsigned-long-int literal}
0083   5800           00321         MOVAR   r0x100D
0084   5600           00322         MOVRA   r0x100D
0085   5600           00323         MOVRA   r0x100B
0086   7600           00324         CLRR    r0x100A
0087   7600           00325         CLRR    r0x1009
0088   7600           00326         CLRR    r0x1008
                      00327 ;;[ICODE] ../libsdcc/fsadd.c:70:        iTemp26 [k41 lr34:84 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp2_1_22}[r0x1006 r0x1007 ] = (int fixed)iTemp31 [k48 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00328 ;;115   MOVAR   r0x100B
0089   3C00           00329         MOVAI   0x00
008A   5600           00330         MOVRA   r0x100C
                      00331 ;;[ICODE] ../libsdcc/fsadd.c:72:        iTemp33 [k50 lr36:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x1000 r0x1001 ] = iTemp26 [k41 lr34:84 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp2_1_22}[r0x1006 r0x1007 ] + 0x19 {int literal}
                      00332 ;       .line   72; "../libsdcc/fsadd.c"        if (exp1 > exp2 + 25)
008B   3C19           00333         MOVAI   0x19
008C   7C00           00334         ADDAR   r0x100D
008D   5600           00335         MOVRA   r0x100B
008E   7600           00336         CLRR    r0x100A
008F   5200           00337         RLR     r0x100A
0090   5800           00338         MOVAR   r0x100C
0091   7E00           00339         ADDRA   r0x100A
                      00340 ;;[ICODE] ../libsdcc/fsadd.c:72:        iTemp34 [k51 lr37:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp19 [k32 lr28:98 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ] > iTemp33 [k50 lr36:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x1000 r0x1001 ]
0092   5800           00341         MOVAR   r0x100A
0093   3F80           00342         ADDAI   0x80
0094   5600           00343         MOVRA   r0x1016
0095   5800           00344         MOVAR   r0x100E
0096   3F80           00345         ADDAI   0x80
0097   4800           00346         RSUBAR  r0x1016
0098   E5A7           00347         JBSET   STATUS,2
0099   A000           00348         GOTO    _00165_DS_
009A   5800           00349         MOVAR   r0x100F
009B   4800           00350         RSUBAR  r0x100B
009C                  00351 _00165_DS_
009C   F1A7           00352         JBCLR   STATUS,0
009D   A000           00353         GOTO    _00110_DS_
                      00354 ;;genSkipc:3246: created from rifx:0xbff8c8d0
                      00355 ;;[ICODE] ../libsdcc/fsadd.c:72:        if iTemp34 [k51 lr37:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($6)
                      00356 ;;[ICODE] ../libsdcc/fsadd.c:73:        iTemp35 [k52 lr39:40 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsadd_fl1_1_22 [k8 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00357 ;;[ICODE] ../libsdcc/fsadd.c:73:        iTemp37 [k55 lr40:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x100C r0x100D ] = @[iTemp35 [k52 lr39:40 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00358 ;       .line   73; "../libsdcc/fsadd.c"        return (fl1.f);
009E   5800           00359         MOVAR   (___fsadd_fl1_1_22 + 0)
009F   5600           00360         MOVRA   r0x100B
00A0   5800           00361         MOVAR   (___fsadd_fl1_1_22 + 1)
00A1   5600           00362         MOVRA   r0x100A
00A2   5800           00363         MOVAR   (___fsadd_fl1_1_22 + 2)
00A3   5600           00364         MOVRA   r0x1014
00A4   5800           00365         MOVAR   (___fsadd_fl1_1_22 + 3)
00A5   5600           00366         MOVRA   r0x1015
                      00367 ;;[ICODE] ../libsdcc/fsadd.c:73:        ret iTemp37 [k55 lr40:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x100C r0x100D ]
00A6   5800           00368         MOVAR   r0x100B
00A7   5600           00369         MOVRA   STK02
00A8   5800           00370         MOVAR   r0x100A
00A9   5600           00371         MOVRA   STK01
00AA   5800           00372         MOVAR   r0x1014
00AB   5600           00373         MOVRA   STK00
00AC   5800           00374         MOVAR   r0x1015
00AD   A000           00375         GOTO    _00133_DS_
                      00376 ;;[ICODE] ../libsdcc/fsadd.c:73:  _iffalse_2($6) :
                      00377 ;;[ICODE] ../libsdcc/fsadd.c:74:        iTemp38 [k56 lr43:44 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x1000 r0x1001 ] = iTemp19 [k32 lr28:98 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ] + 0x19 {int literal}
00AE                  00378 _00110_DS_
                      00379 ;       .line   74; "../libsdcc/fsadd.c"        if (exp2 > exp1 + 25)
00AE   3C19           00380         MOVAI   0x19
00AF   7C00           00381         ADDAR   r0x100F
00B0   5600           00382         MOVRA   r0x100B
00B1   7600           00383         CLRR    r0x100A
00B2   5200           00384         RLR     r0x100A
00B3   5800           00385         MOVAR   r0x100E
00B4   7E00           00386         ADDRA   r0x100A
                      00387 ;;[ICODE] ../libsdcc/fsadd.c:74:        iTemp39 [k57 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp26 [k41 lr34:84 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp2_1_22}[r0x1006 r0x1007 ] > iTemp38 [k56 lr43:44 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x1000 r0x1001 ]
00B5   5800           00388         MOVAR   r0x100A
00B6   3F80           00389         ADDAI   0x80
00B7   5600           00390         MOVRA   r0x1016
00B8   5800           00391         MOVAR   r0x100C
00B9   3F80           00392         ADDAI   0x80
00BA   4800           00393         RSUBAR  r0x1016
00BB   E5A7           00394         JBSET   STATUS,2
00BC   A000           00395         GOTO    _00166_DS_
00BD   5800           00396         MOVAR   r0x100D
00BE   4800           00397         RSUBAR  r0x100B
00BF                  00398 _00166_DS_
00BF   F1A7           00399         JBCLR   STATUS,0
00C0   A000           00400         GOTO    _00112_DS_
                      00401 ;;genSkipc:3246: created from rifx:0xbff8c8d0
                      00402 ;;[ICODE] ../libsdcc/fsadd.c:74:        if iTemp39 [k57 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_3($8)
                      00403 ;;[ICODE] ../libsdcc/fsadd.c:75:        iTemp40 [k58 lr46:47 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsadd_fl2_1_22 [k12 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00404 ;;[ICODE] ../libsdcc/fsadd.c:75:        iTemp42 [k61 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x100C r0x100D ] = @[iTemp40 [k58 lr46:47 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00405 ;       .line   75; "../libsdcc/fsadd.c"        return (fl2.f);
00C1   5800           00406         MOVAR   (___fsadd_fl2_1_22 + 0)
00C2   5600           00407         MOVRA   r0x100B
00C3   5800           00408         MOVAR   (___fsadd_fl2_1_22 + 1)
00C4   5600           00409         MOVRA   r0x100A
00C5   5800           00410         MOVAR   (___fsadd_fl2_1_22 + 2)
00C6   5600           00411         MOVRA   r0x1014
00C7   5800           00412         MOVAR   (___fsadd_fl2_1_22 + 3)
00C8   5600           00413         MOVRA   r0x1015
                      00414 ;;[ICODE] ../libsdcc/fsadd.c:75:        ret iTemp42 [k61 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x100C r0x100D ]
00C9   5800           00415         MOVAR   r0x100B
00CA   5600           00416         MOVRA   STK02
00CB   5800           00417         MOVAR   r0x100A
00CC   5600           00418         MOVRA   STK01
00CD   5800           00419         MOVAR   r0x1014
00CE   5600           00420         MOVRA   STK00
00CF   5800           00421         MOVAR   r0x1015
00D0   A000           00422         GOTO    _00133_DS_
                      00423 ;;[ICODE] ../libsdcc/fsadd.c:75:  _iffalse_3($8) :
                      00424 ;;[ICODE] ../libsdcc/fsadd.c:77:        iTemp44 [k64 lr50:51 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsadd_fl1_1_22 [k8 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00425 ;;[ICODE] ../libsdcc/fsadd.c:77:        iTemp46 [k67 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x100C r0x100D ] = @[iTemp44 [k64 lr50:51 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
00D1                  00426 _00112_DS_
                      00427 ;       .line   77; "../libsdcc/fsadd.c"        mant1 = MANT (fl1.l);
00D1   5800           00428         MOVAR   (___fsadd_fl1_1_22 + 0)
00D2   5600           00429         MOVRA   r0x100B
00D3   5800           00430         MOVAR   (___fsadd_fl1_1_22 + 1)
00D4   5600           00431         MOVRA   r0x100A
00D5   5800           00432         MOVAR   (___fsadd_fl1_1_22 + 2)
00D6   5600           00433         MOVRA   r0x1014
00D7   5800           00434         MOVAR   (___fsadd_fl1_1_22 + 3)
00D8   5600           00435         MOVRA   r0x1015
                      00436 ;;[ICODE] ../libsdcc/fsadd.c:77:        iTemp47 [k68 lr52:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1001 r0x100C r0x100D ] = iTemp46 [k67 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x100C r0x100D ] & 0x7fffff {unsigned-long-int literal}
00D9   DE00           00437         BCLR    r0x1014,7
00DA   7600           00438         CLRR    r0x1015
                      00439 ;;[ICODE] ../libsdcc/fsadd.c:77:        iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] = iTemp47 [k68 lr52:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1001 r0x100C r0x100D ] | 0x800000 {unsigned-long-int literal}
00DB   CE00           00440         BSET    r0x1014,7
                      00441 ;;[ICODE] ../libsdcc/fsadd.c:78:        iTemp50 [k72 lr55:56 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsadd_fl2_1_22 [k12 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00442 ;;[ICODE] ../libsdcc/fsadd.c:78:        iTemp52 [k75 lr56:57 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100E r0x100F r0x1010 r0x1011 ] = @[iTemp50 [k72 lr55:56 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00443 ;       .line   78; "../libsdcc/fsadd.c"        mant2 = MANT (fl2.l);
00DC   5800           00444         MOVAR   (___fsadd_fl2_1_22 + 0)
00DD   5600           00445         MOVRA   r0x1016
00DE   5800           00446         MOVAR   (___fsadd_fl2_1_22 + 1)
00DF   5600           00447         MOVRA   r0x1017
00E0   5800           00448         MOVAR   (___fsadd_fl2_1_22 + 2)
00E1   5600           00449         MOVRA   r0x1018
00E2   5800           00450         MOVAR   (___fsadd_fl2_1_22 + 3)
00E3   5600           00451         MOVRA   r0x1019
                      00452 ;;[ICODE] ../libsdcc/fsadd.c:78:        iTemp53 [k76 lr57:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x100E r0x100F r0x1010 r0x1011 ] = iTemp52 [k75 lr56:57 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100E r0x100F r0x1010 r0x1011 ] & 0x7fffff {unsigned-long-int literal}
00E4   DE00           00453         BCLR    r0x1018,7
00E5   7600           00454         CLRR    r0x1019
                      00455 ;;[ICODE] ../libsdcc/fsadd.c:78:        iTemp49 [k70 lr58:86 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant2_1_22}[r0x100E r0x100F r0x1010 r0x1011 ] = iTemp53 [k76 lr57:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x100E r0x100F r0x1010 r0x1011 ] | 0x800000 {unsigned-long-int literal}
00E6   CE00           00456         BSET    r0x1018,7
                      00457 ;;[ICODE] ../libsdcc/fsadd.c:80:        iTemp55 [k78 lr60:61 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsadd_fl1_1_22 [k8 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00458 ;;[ICODE] ../libsdcc/fsadd.c:80:        iTemp57 [k81 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1012 r0x1013 r0x1014 r0x1015 ] = @[iTemp55 [k78 lr60:61 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00459 ;       .line   80; "../libsdcc/fsadd.c"        if (SIGN (fl1.l))
00E7   5800           00460         MOVAR   (___fsadd_fl1_1_22 + 0)
00E8   5600           00461         MOVRA   r0x101A
00E9   5800           00462         MOVAR   (___fsadd_fl1_1_22 + 1)
00EA   5600           00463         MOVRA   r0x101B
00EB   5800           00464         MOVAR   (___fsadd_fl1_1_22 + 2)
00EC   5600           00465         MOVRA   r0x101C
00ED   5800           00466         MOVAR   (___fsadd_fl1_1_22 + 3)
00EE   5600           00467         MOVRA   r0x101D
                      00468 ;;[ICODE] ../libsdcc/fsadd.c:80:        iTemp58 [k82 lr62:63 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1016 ] = gabit iTemp57 [k81 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1012 r0x1013 r0x1014 r0x1015 ]
00EF   5800           00469         MOVAR   r0x101D
00F0   3E80           00470         ANDAI   0x80
00F1   E5A7           00471         JBSET   STATUS,2
00F2   3C01           00472         MOVAI   0x01
00F3   5600           00473         MOVRA   r0x101E
                      00474 ;;[ICODE] ../libsdcc/fsadd.c:80:        if iTemp58 [k82 lr62:63 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1016 ] == 0 goto _iffalse_4($10)
00F4   3C00           00475         MOVAI   0x00
00F5   5C00           00476         ORAR    r0x101E
00F6   F5A7           00477         JBCLR   STATUS,2
00F7   A000           00478         GOTO    _00114_DS_
                      00479 ;;[ICODE] ../libsdcc/fsadd.c:81:        iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] = - iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ]
                      00480 ;       .line   81; "../libsdcc/fsadd.c"        mant1 = -mant1;
00F8   7200           00481         COMR    r0x100B
00F9   7200           00482         COMR    r0x100A
00FA   7200           00483         COMR    r0x1014
00FB   7200           00484         COMR    r0x1015
00FC   6600           00485         INCR    r0x100B
00FD   F5A7           00486         JBCLR   STATUS,2
00FE   6600           00487         INCR    r0x100A
00FF   F5A7           00488         JBCLR   STATUS,2
0100   6600           00489         INCR    r0x1014
0101   F5A7           00490         JBCLR   STATUS,2
0102   6600           00491         INCR    r0x1015
                      00492 ;;[ICODE] ../libsdcc/fsadd.c:81:  _iffalse_4($10) :
                      00493 ;;[ICODE] ../libsdcc/fsadd.c:82:        iTemp60 [k84 lr67:68 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsadd_fl2_1_22 [k12 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00494 ;;[ICODE] ../libsdcc/fsadd.c:82:        iTemp62 [k87 lr68:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1012 r0x1013 r0x1014 r0x1015 ] = @[iTemp60 [k84 lr67:68 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0103                  00495 _00114_DS_
                      00496 ;       .line   82; "../libsdcc/fsadd.c"        if (SIGN (fl2.l))
0103   5800           00497         MOVAR   (___fsadd_fl2_1_22 + 0)
0104   5600           00498         MOVRA   r0x101A
0105   5800           00499         MOVAR   (___fsadd_fl2_1_22 + 1)
0106   5600           00500         MOVRA   r0x101B
0107   5800           00501         MOVAR   (___fsadd_fl2_1_22 + 2)
0108   5600           00502         MOVRA   r0x101C
0109   5800           00503         MOVAR   (___fsadd_fl2_1_22 + 3)
010A   5600           00504         MOVRA   r0x101D
                      00505 ;;[ICODE] ../libsdcc/fsadd.c:82:        iTemp63 [k88 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1016 ] = gabit iTemp62 [k87 lr68:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1012 r0x1013 r0x1014 r0x1015 ]
010B   5800           00506         MOVAR   r0x101D
010C   3E80           00507         ANDAI   0x80
010D   E5A7           00508         JBSET   STATUS,2
010E   3C01           00509         MOVAI   0x01
010F   5600           00510         MOVRA   r0x101E
                      00511 ;;[ICODE] ../libsdcc/fsadd.c:82:        if iTemp63 [k88 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1016 ] == 0 goto _iffalse_5($12)
0110   3C00           00512         MOVAI   0x00
0111   5C00           00513         ORAR    r0x101E
0112   F5A7           00514         JBCLR   STATUS,2
0113   A000           00515         GOTO    _00116_DS_
                      00516 ;;[ICODE] ../libsdcc/fsadd.c:83:        iTemp49 [k70 lr58:86 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant2_1_22}[r0x100E r0x100F r0x1010 r0x1011 ] = - iTemp49 [k70 lr58:86 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant2_1_22}[r0x100E r0x100F r0x1010 r0x1011 ]
                      00517 ;       .line   83; "../libsdcc/fsadd.c"        mant2 = -mant2;
0114   7200           00518         COMR    r0x1016
0115   7200           00519         COMR    r0x1017
0116   7200           00520         COMR    r0x1018
0117   7200           00521         COMR    r0x1019
0118   6600           00522         INCR    r0x1016
0119   F5A7           00523         JBCLR   STATUS,2
011A   6600           00524         INCR    r0x1017
011B   F5A7           00525         JBCLR   STATUS,2
011C   6600           00526         INCR    r0x1018
011D   F5A7           00527         JBCLR   STATUS,2
011E   6600           00528         INCR    r0x1019
                      00529 ;;[ICODE] ../libsdcc/fsadd.c:83:  _iffalse_5($12) :
                      00530 ;;[ICODE] ../libsdcc/fsadd.c:85:        iTemp65 [k90 lr74:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp19 [k32 lr28:98 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ] > iTemp26 [k41 lr34:84 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp2_1_22}[r0x1006 r0x1007 ]
011F                  00531 _00116_DS_
                      00532 ;       .line   85; "../libsdcc/fsadd.c"        if (exp1 > exp2)
011F   5800           00533         MOVAR   r0x100C
0120   3F80           00534         ADDAI   0x80
0121   5600           00535         MOVRA   r0x101F
0122   5800           00536         MOVAR   r0x100E
0123   3F80           00537         ADDAI   0x80
0124   4800           00538         RSUBAR  r0x101F
0125   E5A7           00539         JBSET   STATUS,2
0126   A000           00540         GOTO    _00167_DS_
0127   5800           00541         MOVAR   r0x100F
0128   4800           00542         RSUBAR  r0x100D
0129                  00543 _00167_DS_
0129   F1A7           00544         JBCLR   STATUS,0
012A   A000           00545         GOTO    _00118_DS_
                      00546 ;;genSkipc:3246: created from rifx:0xbff8c8d0
                      00547 ;;[ICODE] ../libsdcc/fsadd.c:85:        if iTemp65 [k90 lr74:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_6($14)
                      00548 ;;[ICODE] ../libsdcc/fsadd.c:87:        iTemp66 [k91 lr76:77 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x1012 r0x1013 ] = iTemp19 [k32 lr28:98 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ] - iTemp26 [k41 lr34:84 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp2_1_22}[r0x1006 r0x1007 ]
                      00549 ;       .line   87; "../libsdcc/fsadd.c"        mant2 >>= exp1 - exp2;
012B   5800           00550         MOVAR   r0x100D
012C   4800           00551         RSUBAR  r0x100F
012D   5600           00552         MOVRA   r0x101A
012E   5800           00553         MOVAR   r0x100C
012F   E1A7           00554         JBSET   STATUS,0
0130   6400           00555         INCAR   r0x100C
0131   4800           00556         RSUBAR  r0x100E
0132   5600           00557         MOVRA   r0x101B
                      00558 ;;[ICODE] ../libsdcc/fsadd.c:87:        iTemp49 [k70 lr58:86 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant2_1_22}[r0x100E r0x100F r0x1010 r0x1011 ] = iTemp49 [k70 lr58:86 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant2_1_22}[r0x100E r0x100F r0x1010 r0x1011 ] >> iTemp66 [k91 lr76:77 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x1012 r0x1013 ]
0133   5800           00559         MOVAR   r0x101A
0134   FE00           00560         JBCLR   r0x101A,7
0135   A000           00561         GOTO    _00170_DS_
0136   3A00           00562         ISUBAI  0x00
0137   F5A7           00563         JBCLR   STATUS,2
0138   A000           00564         GOTO    _00169_DS_
0139                  00565 _00168_DS_
0139   D1A7           00566         BCLR    STATUS,0
013A   FE00           00567         JBCLR   r0x1019,7
013B   C1A7           00568         BSET    STATUS,0
013C   4E00           00569         RRR     r0x1019
013D   4E00           00570         RRR     r0x1018
013E   4E00           00571         RRR     r0x1017
013F   4E00           00572         RRR     r0x1016
0140   3F01           00573         ADDAI   0x01
0141   E1A7           00574         JBSET   STATUS,0
0142   A000           00575         GOTO    _00168_DS_
0143   A000           00576         GOTO    _00169_DS_
0144                  00577 _00170_DS_
0144   D1A7           00578         BCLR    STATUS,0
0145                  00579 _00171_DS_
0145   5200           00580         RLR     r0x1016
0146   5200           00581         RLR     r0x1017
0147   5200           00582         RLR     r0x1018
0148   5200           00583         RLR     r0x1019
0149   3F01           00584         ADDAI   0x01
014A   E1A7           00585         JBSET   STATUS,0
014B   A000           00586         GOTO    _00171_DS_
                      00587 ;;[ICODE] ../libsdcc/fsadd.c:87:         goto _ifend_6($15)
014C                  00588 _00169_DS_
014C   A000           00589         GOTO    _00119_DS_
                      00590 ;;[ICODE] ../libsdcc/fsadd.c:87:  _iffalse_6($14) :
                      00591 ;;[ICODE] ../libsdcc/fsadd.c:91:        iTemp68 [k93 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x1012 r0x1013 ] = iTemp26 [k41 lr34:84 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp2_1_22}[r0x1006 r0x1007 ] - iTemp19 [k32 lr28:98 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ]
014D                  00592 _00118_DS_
                      00593 ;       .line   91; "../libsdcc/fsadd.c"        mant1 >>= exp2 - exp1;
014D   5800           00594         MOVAR   r0x100F
014E   4800           00595         RSUBAR  r0x100D
014F   5600           00596         MOVRA   r0x101A
0150   5800           00597         MOVAR   r0x100E
0151   E1A7           00598         JBSET   STATUS,0
0152   6400           00599         INCAR   r0x100E
0153   4800           00600         RSUBAR  r0x100C
0154   5600           00601         MOVRA   r0x101B
                      00602 ;;[ICODE] ../libsdcc/fsadd.c:91:        iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] = iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] >> iTemp68 [k93 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x1012 r0x1013 ]
0155   5800           00603         MOVAR   r0x101A
0156   FE00           00604         JBCLR   r0x101A,7
0157   A000           00605         GOTO    _00174_DS_
0158   3A00           00606         ISUBAI  0x00
0159   F5A7           00607         JBCLR   STATUS,2
015A   A000           00608         GOTO    _00173_DS_
015B                  00609 _00172_DS_
015B   D1A7           00610         BCLR    STATUS,0
015C   FE00           00611         JBCLR   r0x1015,7
015D   C1A7           00612         BSET    STATUS,0
015E   4E00           00613         RRR     r0x1015
015F   4E00           00614         RRR     r0x1014
0160   4E00           00615         RRR     r0x100A
0161   4E00           00616         RRR     r0x100B
0162   3F01           00617         ADDAI   0x01
0163   E1A7           00618         JBSET   STATUS,0
0164   A000           00619         GOTO    _00172_DS_
0165   A000           00620         GOTO    _00173_DS_
0166                  00621 _00174_DS_
0166   D1A7           00622         BCLR    STATUS,0
0167                  00623 _00175_DS_
0167   5200           00624         RLR     r0x100B
0168   5200           00625         RLR     r0x100A
0169   5200           00626         RLR     r0x1014
016A   5200           00627         RLR     r0x1015
016B   3F01           00628         ADDAI   0x01
016C   E1A7           00629         JBSET   STATUS,0
016D   A000           00630         GOTO    _00175_DS_
                      00631 ;;[ICODE] ../libsdcc/fsadd.c:92:        iTemp19 [k32 lr28:98 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ] := iTemp26 [k41 lr34:84 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp2_1_22}[r0x1006 r0x1007 ]
016E                  00632 _00173_DS_
                      00633 ;       .line   92; "../libsdcc/fsadd.c"        exp1 = exp2;
016E   5800           00634         MOVAR   r0x100D
016F   5600           00635         MOVRA   r0x100F
0170   5800           00636         MOVAR   r0x100C
0171   5600           00637         MOVRA   r0x100E
                      00638 ;;[ICODE] ../libsdcc/fsadd.c:92:  _ifend_6($15) :
                      00639 ;;[ICODE] ../libsdcc/fsadd.c:94:        iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] = iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] + iTemp49 [k70 lr58:86 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant2_1_22}[r0x100E r0x100F r0x1010 r0x1011 ]
0172                  00640 _00119_DS_
                      00641 ;       .line   94; "../libsdcc/fsadd.c"        mant1 += mant2;
0172   5800           00642         MOVAR   r0x1016
0173   7E00           00643         ADDRA   r0x100B
0174   5800           00644         MOVAR   r0x1017
0175   F1A7           00645         JBCLR   STATUS,0
0176   6000           00646         JZAR    r0x1017
0177   7E00           00647         ADDRA   r0x100A
0178   5800           00648         MOVAR   r0x1018
0179   F1A7           00649         JBCLR   STATUS,0
017A   6000           00650         JZAR    r0x1018
017B   7E00           00651         ADDRA   r0x1014
017C   5800           00652         MOVAR   r0x1019
017D   F1A7           00653         JBCLR   STATUS,0
017E   6000           00654         JZAR    r0x1019
017F   7E00           00655         ADDRA   r0x1015
                      00656 ;;[ICODE] ../libsdcc/fsadd.c:96:        iTemp71 [k96 lr88:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] < 0x0 {long-int literal}
                      00657 ;;signed compare: left < lit(0x0=0), size=4, mask=ffffffff
                      00658 ;       .line   96; "../libsdcc/fsadd.c"        if (mant1 < 0)
0180   C1A7           00659         BSET    STATUS,0
0181   EE00           00660         JBSET   r0x1015,7
0182   D1A7           00661         BCLR    STATUS,0
0183   E1A7           00662         JBSET   STATUS,0
0184   A000           00663         GOTO    _00123_DS_
                      00664 ;;genSkipc:3246: created from rifx:0xbff8c8d0
                      00665 ;;[ICODE] ../libsdcc/fsadd.c:96:        if iTemp71 [k96 lr88:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_8($19)
                      00666 ;;[ICODE] ../libsdcc/fsadd.c:98:        iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] = - iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ]
                      00667 ;       .line   98; "../libsdcc/fsadd.c"        mant1 = -mant1;
0185   7200           00668         COMR    r0x100B
0186   7200           00669         COMR    r0x100A
0187   7200           00670         COMR    r0x1014
0188   7200           00671         COMR    r0x1015
0189   6600           00672         INCR    r0x100B
018A   F5A7           00673         JBCLR   STATUS,2
018B   6600           00674         INCR    r0x100A
018C   F5A7           00675         JBCLR   STATUS,2
018D   6600           00676         INCR    r0x1014
018E   F5A7           00677         JBCLR   STATUS,2
018F   6600           00678         INCR    r0x1015
                      00679 ;;[ICODE] ../libsdcc/fsadd.c:99:        iTemp2 [k6 lr5:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsadd_sign_1_22}[r0x1008 r0x1009 r0x100A r0x100B ] := 0x80000000 {unsigned-long-int literal}
                      00680 ;       .line   99; "../libsdcc/fsadd.c"        sign = SIGNBIT;
0190   7600           00681         CLRR    r0x1010
0191   7600           00682         CLRR    r0x1011
0192   7600           00683         CLRR    r0x1012
0193   3C80           00684         MOVAI   0x80
0194   5600           00685         MOVRA   r0x1013
                      00686 ;;[ICODE] ../libsdcc/fsadd.c:99:         goto preHeaderLbl0($41)
0195   A000           00687         GOTO    _00125_DS_
                      00688 ;;[ICODE] ../libsdcc/fsadd.c:99:  _iffalse_8($19) :
                      00689 ;;[ICODE] ../libsdcc/fsadd.c:101:       if iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] != 0 goto preHeaderLbl0($41)
0196                  00690 _00123_DS_
                      00691 ;       .line   101; "../libsdcc/fsadd.c"       else if (!mant1)
0196   5800           00692         MOVAR   r0x100B
0197   5C00           00693         ORAR    r0x100A
0198   5C00           00694         ORAR    r0x1014
0199   5C00           00695         ORAR    r0x1015
019A   E5A7           00696         JBSET   STATUS,2
019B   A000           00697         GOTO    _00125_DS_
                      00698 ;;[ICODE] ../libsdcc/fsadd.c:102:       ret 0 {float literal}
                      00699 ;       .line   102; "../libsdcc/fsadd.c"       return (0);
019C   3C00           00700         MOVAI   0x00
019D   5600           00701         MOVRA   STK02
019E   3C00           00702         MOVAI   0x00
019F   5600           00703         MOVRA   STK01
01A0   3C00           00704         MOVAI   0x00
01A1   5600           00705         MOVRA   STK00
01A2   3C00           00706         MOVAI   0x00
01A3   A000           00707         GOTO    _00133_DS_
                      00708 ;;[ICODE] ../libsdcc/fsadd.c:105:  preHeaderLbl0($41) :
                      00709 ;;[ICODE] ../libsdcc/fsadd.c:105:       iTemp77 [k102 lr98:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x1004 r0x1005 ] := iTemp19 [k32 lr28:98 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ]
                      00710 ;;[ICODE] ../libsdcc/fsadd.c:105:  _whilecontinue_0($21) :
                      00711 ;;[ICODE] ../libsdcc/fsadd.c:105:       iTemp73 [k98 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1006 r0x1007 r0x100E r0x100F ] = (unsigned-long-int register)iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ]
01A4                  00712 _00125_DS_
                      00713 ;       .line   105; "../libsdcc/fsadd.c"       while (mant1<HIDDEN) {
01A4   5800           00714         MOVAR   r0x100B
01A5   5600           00715         MOVRA   r0x100D
01A6   5800           00716         MOVAR   r0x100A
01A7   5600           00717         MOVRA   r0x100C
                      00718 ;;112   MOVAR   r0x1014
01A8   5800           00719         MOVAR   r0x1015
01A9   5600           00720         MOVRA   r0x1017
                      00721 ;;[ICODE] ../libsdcc/fsadd.c:105:       iTemp74 [k99 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp73 [k98 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1006 r0x1007 r0x100E r0x100F ] & 0xff800000 {const-long-int literal}
                      00722 ;;111   MOVAR   r0x1016
01AA   5800           00723         MOVAR   r0x1014
01AB   5600           00724         MOVRA   r0x1016
01AC   FE00           00725         JBCLR   r0x1016,7
01AD   A000           00726         GOTO    _00130_DS_
01AE   5800           00727         MOVAR   r0x1017
01AF   3EFF           00728         ANDAI   0xff
01B0   E5A7           00729         JBSET   STATUS,2
01B1   A000           00730         GOTO    _00130_DS_
                      00731 ;;[ICODE] ../libsdcc/fsadd.c:105:       if iTemp74 [k99 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl1($44)
                      00732 ;;[ICODE] ../libsdcc/fsadd.c:106:       iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] = iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] << 0x1 {const-unsigned-char literal}
                      00733 ;       .line   106; "../libsdcc/fsadd.c"       mant1 <<= 1;
01B2   D1A7           00734         BCLR    STATUS,0
01B3   5200           00735         RLR     r0x100B
01B4   5200           00736         RLR     r0x100A
01B5   5200           00737         RLR     r0x1014
01B6   5200           00738         RLR     r0x1015
                      00739 ;;[ICODE] ../libsdcc/fsadd.c:107:       iTemp77 [k102 lr98:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x1004 r0x1005 ] = iTemp77 [k102 lr98:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x1004 r0x1005 ] - 0x1 {const-unsigned-char literal}
                      00740 ;       .line   107; "../libsdcc/fsadd.c"       exp1--;
01B7   3CFF           00741         MOVAI   0xff
01B8   7E00           00742         ADDRA   r0x100F
01B9   E1A7           00743         JBSET   STATUS,0
01BA   6E00           00744         DECR    r0x100E
                      00745 ;;[ICODE] ../libsdcc/fsadd.c:107:        goto _whilecontinue_0($21)
01BB   A000           00746         GOTO    _00125_DS_
                      00747 ;;[ICODE] ../libsdcc/fsadd.c:111:  preHeaderLbl1($44) :
                      00748 ;;[ICODE] ../libsdcc/fsadd.c:111:       iTemp84 [k109 lr109:128 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ] := iTemp77 [k102 lr98:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x1004 r0x1005 ]
                      00749 ;;[ICODE] ../libsdcc/fsadd.c:111:  _whilecontinue_1($26) :
                      00750 ;;[ICODE] ../libsdcc/fsadd.c:111:       iTemp78 [k103 lr112:125 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1006 r0x1007 r0x100E r0x100F ] = (unsigned-long-int register)iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ]
01BC                  00751 _00130_DS_
                      00752 ;       .line   111; "../libsdcc/fsadd.c"       while (mant1 & 0xff000000) {
01BC   5800           00753         MOVAR   r0x100B
01BD   5600           00754         MOVRA   r0x100D
01BE   5800           00755         MOVAR   r0x100A
01BF   5600           00756         MOVRA   r0x100C
01C0   5800           00757         MOVAR   r0x1014
01C1   5600           00758         MOVRA   r0x1016
                      00759 ;;114   MOVAR   r0x1015
                      00760 ;;[ICODE] ../libsdcc/fsadd.c:111:       iTemp79 [k104 lr113:114 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} = iTemp78 [k103 lr112:125 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1006 r0x1007 r0x100E r0x100F ] & 0xff000000 {const-unsigned-long-int literal}
                      00761 ;;113   MOVAR   r0x1017
01C2   5800           00762         MOVAR   r0x1015
01C3   5600           00763         MOVRA   r0x1017
01C4   3EFF           00764         ANDAI   0xff
01C5   F5A7           00765         JBCLR   STATUS,2
01C6   A000           00766         GOTO    _00132_DS_
                      00767 ;;[ICODE] ../libsdcc/fsadd.c:111:       if iTemp79 [k104 lr113:114 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} == 0 goto _whilebreak_1($28)
                      00768 ;;[ICODE] ../libsdcc/fsadd.c:112:       iTemp80 [k105 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int fixed} = iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] & 0x1 {long-int literal}
                      00769 ;       .line   112; "../libsdcc/fsadd.c"       if (mant1&1)
01C7   E000           00770         JBSET   r0x100B,0
01C8   A000           00771         GOTO    _00129_DS_
                      00772 ;;[ICODE] ../libsdcc/fsadd.c:112:       if iTemp80 [k105 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int fixed} == 0 goto _iffalse_9($25)
                      00773 ;;[ICODE] ../libsdcc/fsadd.c:113:       iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] = iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] + 0x2 {long-int literal}
                      00774 ;       .line   113; "../libsdcc/fsadd.c"       mant1 += 2;
01C9   3C02           00775         MOVAI   0x02
01CA   7E00           00776         ADDRA   r0x100B
01CB   F1A7           00777         JBCLR   STATUS,0
01CC   6600           00778         INCR    r0x100A
01CD   F5A7           00779         JBCLR   STATUS,2
01CE   6600           00780         INCR    r0x1014
01CF   F5A7           00781         JBCLR   STATUS,2
01D0   6600           00782         INCR    r0x1015
                      00783 ;;[ICODE] ../libsdcc/fsadd.c:113:  _iffalse_9($25) :
                      00784 ;;[ICODE] ../libsdcc/fsadd.c:114:       iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] = iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] >> 0x1 {const-unsigned-char literal}
                      00785 ;;shiftRight_Left2ResultLit:5278: shCount=1, size=4, sign=1, same=1, offr=0
01D1                  00786 _00129_DS_
                      00787 ;       .line   114; "../libsdcc/fsadd.c"       mant1 >>= 1 ;
01D1   D1A7           00788         BCLR    STATUS,0
01D2   FE00           00789         JBCLR   r0x1015,7
01D3   C1A7           00790         BSET    STATUS,0
01D4   4E00           00791         RRR     r0x1015
01D5   4E00           00792         RRR     r0x1014
01D6   4E00           00793         RRR     r0x100A
01D7   4E00           00794         RRR     r0x100B
                      00795 ;;[ICODE] ../libsdcc/fsadd.c:115:       iTemp84 [k109 lr109:128 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ] = iTemp84 [k109 lr109:128 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ] + 0x1 {const-unsigned-char literal}
                      00796 ;       .line   115; "../libsdcc/fsadd.c"       exp1++;
01D8   6600           00797         INCR    r0x100F
01D9   F5A7           00798         JBCLR   STATUS,2
01DA   6600           00799         INCR    r0x100E
                      00800 ;;[ICODE] ../libsdcc/fsadd.c:115:        goto _whilecontinue_1($26)
01DB   A000           00801         GOTO    _00130_DS_
                      00802 ;;[ICODE] ../libsdcc/fsadd.c:115:  _whilebreak_1($28) :
                      00803 ;;[ICODE] ../libsdcc/fsadd.c:119:       iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] = iTemp78 [k103 lr112:125 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1006 r0x1007 r0x100E r0x100F ] & 0xff7fffff {unsigned-long-int literal}
01DC                  00804 _00132_DS_
                      00805 ;       .line   119; "../libsdcc/fsadd.c"       mant1 &= ~HIDDEN;
01DC   5800           00806         MOVAR   r0x100D
01DD   5600           00807         MOVRA   r0x100B
01DE   5800           00808         MOVAR   r0x100C
01DF   5600           00809         MOVRA   r0x100A
01E0   3C7F           00810         MOVAI   0x7f
01E1   7800           00811         ANDAR   r0x1016
01E2   5600           00812         MOVRA   r0x1014
01E3   5800           00813         MOVAR   r0x1017
01E4   5600           00814         MOVRA   r0x1015
                      00815 ;;[ICODE] ../libsdcc/fsadd.c:122:       iTemp87 [k112 lr127:133 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsadd_fl1_1_22 [k8 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00816 ;;[ICODE] ../libsdcc/fsadd.c:122:       iTemp89 [k115 lr128:129 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1006 r0x1007 r0x100E r0x100F ] = (unsigned-long-int fixed)iTemp84 [k109 lr109:128 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ]
                      00817 ;       .line   122; "../libsdcc/fsadd.c"       fl1.l = PACK (sign, (unsigned long) exp1, mant1);
01E5   5800           00818         MOVAR   r0x100F
01E6   5600           00819         MOVRA   r0x100D
01E7   5800           00820         MOVAR   r0x100E
01E8   5600           00821         MOVRA   r0x100C
01E9   3C00           00822         MOVAI   0x00
01EA   FE00           00823         JBCLR   r0x100C,7
01EB   3CFF           00824         MOVAI   0xff
01EC   5600           00825         MOVRA   r0x1017
01ED   5600           00826         MOVRA   r0x1016
                      00827 ;;[ICODE] ../libsdcc/fsadd.c:122:       iTemp90 [k116 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1004 r0x1005 r0x1010 r0x1011 ] = iTemp89 [k115 lr128:129 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1006 r0x1007 r0x100E r0x100F ] << 0x17 {const-unsigned-char literal}
01EE   4C00           00828         RRAR    r0x100C
01EF   4C00           00829         RRAR    r0x100D
01F0   5600           00830         MOVRA   r0x1019
01F1   7600           00831         CLRR    r0x1018
01F2   4E00           00832         RRR     r0x1018
01F3   7600           00833         CLRR    r0x100E
01F4   7600           00834         CLRR    r0x100F
                      00835 ;;[ICODE] ../libsdcc/fsadd.c:122:       iTemp91 [k117 lr130:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1008 r0x1009 r0x100A r0x100B ] = iTemp2 [k6 lr5:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsadd_sign_1_22}[r0x1008 r0x1009 r0x100A r0x100B ] | iTemp90 [k116 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1004 r0x1005 r0x1010 r0x1011 ]
01F5   3C00           00836         MOVAI   0x00
01F6   5E00           00837         ORRA    r0x1010
01F7   3C00           00838         MOVAI   0x00
01F8   5E00           00839         ORRA    r0x1011
01F9   5800           00840         MOVAR   r0x1018
01FA   5E00           00841         ORRA    r0x1012
01FB   5800           00842         MOVAR   r0x1019
01FC   5E00           00843         ORRA    r0x1013
                      00844 ;;[ICODE] ../libsdcc/fsadd.c:122:       iTemp92 [k118 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] = (unsigned-long-int fixed)iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ]
                      00845 ;;102   MOVAR   r0x100B
                      00846 ;;104   MOVAR   r0x100A
                      00847 ;;106   MOVAR   r0x1014
                      00848 ;;108   MOVAR   r0x1015
                      00849 ;;[ICODE] ../libsdcc/fsadd.c:122:       iTemp93 [k119 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x100C r0x100D ] = iTemp91 [k117 lr130:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1008 r0x1009 r0x100A r0x100B ] | iTemp92 [k118 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ]
                      00850 ;;101   MOVAR   r0x100F
01FD   5800           00851         MOVAR   r0x100B
01FE   5600           00852         MOVRA   r0x100F
01FF   5C00           00853         ORAR    r0x1010
0200   5600           00854         MOVRA   (___fsadd_fl1_1_22 + 0)
0201   5600           00855         MOVRA   r0x100B
                      00856 ;;103   MOVAR   r0x100E
0202   5800           00857         MOVAR   r0x100A
0203   5600           00858         MOVRA   r0x100E
0204   5C00           00859         ORAR    r0x1011
0205   5600           00860         MOVRA   (___fsadd_fl1_1_22 + 1)
0206   5600           00861         MOVRA   r0x100A
                      00862 ;;105   MOVAR   r0x100D
0207   5800           00863         MOVAR   r0x1014
0208   5600           00864         MOVRA   r0x100D
0209   5C00           00865         ORAR    r0x1012
020A   5600           00866         MOVRA   (___fsadd_fl1_1_22 + 2)
020B   5600           00867         MOVRA   r0x1014
                      00868 ;;107   MOVAR   r0x100C
020C   5800           00869         MOVAR   r0x1015
020D   5600           00870         MOVRA   r0x100C
020E   5C00           00871         ORAR    r0x1013
020F   5600           00872         MOVRA   (___fsadd_fl1_1_22 + 3)
0210   5600           00873         MOVRA   r0x1015
                      00874 ;;[ICODE] ../libsdcc/fsadd.c:122:       *(iTemp87 [k112 lr127:133 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := iTemp93 [k119 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x100C r0x100D ]
                      00875 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
                      00876 ;;99    MOVAR   r0x100B
                      00877 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
                      00878 ;;100   MOVAR   r0x100A
                      00879 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
                      00880 ;;109   MOVAR   r0x1014
                      00881 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
                      00882 ;;110   MOVAR   r0x1015
                      00883 ;;[ICODE] ../libsdcc/fsadd.c:124:       iTemp94 [k120 lr134:135 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsadd_fl1_1_22 [k8 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00884 ;;[ICODE] ../libsdcc/fsadd.c:124:       iTemp96 [k123 lr135:136 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1004 r0x1005 ] = @[iTemp94 [k120 lr134:135 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00885 ;       .line   124; "../libsdcc/fsadd.c"       return (fl1.f);
0211   5800           00886         MOVAR   (___fsadd_fl1_1_22 + 0)
0212   5600           00887         MOVRA   r0x100B
0213   5800           00888         MOVAR   (___fsadd_fl1_1_22 + 1)
0214   5600           00889         MOVRA   r0x100A
0215   5800           00890         MOVAR   (___fsadd_fl1_1_22 + 2)
0216   5600           00891         MOVRA   r0x100F
0217   5800           00892         MOVAR   (___fsadd_fl1_1_22 + 3)
0218   5600           00893         MOVRA   r0x100E
                      00894 ;;[ICODE] ../libsdcc/fsadd.c:124:       ret iTemp96 [k123 lr135:136 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1004 r0x1005 ]
0219   5800           00895         MOVAR   r0x100B
021A   5600           00896         MOVRA   STK02
021B   5800           00897         MOVAR   r0x100A
021C   5600           00898         MOVRA   STK01
021D   5800           00899         MOVAR   r0x100F
021E   5600           00900         MOVRA   STK00
021F   5800           00901         MOVAR   r0x100E
                      00902 ;;[ICODE] ../libsdcc/fsadd.c:124:  _return($29) :
                      00903 ;;[ICODE] ../libsdcc/fsadd.c:124:       eproc ___fsadd [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0220                  00904 _00133_DS_
0220   000C           00905         RETURN  
                      00906 ; exit point of ___fsadd
                      00907 
                      00908 
                      00909 ;       code size estimation:
                      00910 ;         545+    0 =   545 instructions ( 1090 byte)
                      00911 
                      00912         end
gpasm-1.7.0_beta1 (Nov 23 2015)fsadd.asm          2015-11-30  22:56:07         PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

ADCR0                             000001E0
ADCR1                             000001E1
ADCR2                             000001E2
ADIO0                             000001E3
ADIO1                             000001E4
ADRH                              000001E5
ADRL                              000001E6
CLKO                              000001AD
FSR                               000001A4
FSR0                              000001A4
FSR1                              000001A5
HIBYTE                            000001A3
INDF                              000001A0
INDF0                             000001A0
INDF1                             000001A1
INDF2                             000001A2
INDF3                             000001A9
INTE                              000001AA
INTF                              000001AB
IOP0                              000001B0
IOP1                              000001B4
IOP2                              000001B8
IOP3                              000001BC
LEDCR0                            000001F0
LEDCR1                            000001F1
LEDDRV                            000001F4
LEDDS1                            000001E8
LEDDS2                            000001E9
LEDDS3                            000001EA
LEDDS4                            000001EB
LEDDS5                            000001EC
LEDDS6                            000001ED
LEDDS7                            000001EE
LEDDS8                            000001EF
LEDIOS0                           000001F2
LEDIOS1                           000001F3
MCR                               000001A8
OEP0                              000001B1
OEP1                              000001B5
OEP2                              000001B9
OEP3                              000001BD
OSCM                              000001AC
PCL                               000001A6
PDP0                              000001B3
PDP1                              000001B7
PDP2                              000001BB
PDP3                              000001BF
PFLAG                             000001A7
PUP0                              000001B2
PUP1                              000001B6
PUP2                              000001BA
PUP3                              000001BE
STATUS                            000001A7
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
T0CNT                             000001C1
T0CR                              000001C0
T0DATA                            000001C3
T0LOAD                            000001C2
T1CNT                             000001C5
T1CR                              000001C4
T1DATA                            000001C7
T1LOAD                            000001C6
T2CNTH                            000001C9
T2CNTL                            000001CA
T2CR                              000001C8
T2LOADH                           000001CB
T2LOADL                           000001CC
TK0CNTH                           000001D3
TK0CNTL                           000001D4
TK0CR0                            000001D0
TK0CR1                            000001D1
TK0CR2                            000001D2
TK1CNTH                           000001DB
TK1CNTL                           000001DC
TK1CR0                            000001D8
TK1CR1                            000001D9
TK1CR2                            000001DA
_00106_DS_                        0000003F
_00108_DS_                        0000005D
_00110_DS_                        000000AE
_00112_DS_                        000000D1
_00114_DS_                        00000103
_00116_DS_                        0000011F
_00118_DS_                        0000014D
_00119_DS_                        00000172
_00123_DS_                        00000196
_00125_DS_                        000001A4
_00129_DS_                        000001D1
_00130_DS_                        000001BC
_00132_DS_                        000001DC
_00133_DS_                        00000220
_00165_DS_                        0000009C
_00166_DS_                        000000BF
_00167_DS_                        00000129
_00168_DS_                        00000139
_00169_DS_                        0000014C
_00170_DS_                        00000144
_00171_DS_                        00000145
_00172_DS_                        0000015B
_00173_DS_                        0000016E
_00174_DS_                        00000166
_00175_DS_                        00000167
__32T8132                         00000001
___fs2schar                       00000000
___fs2sint                        00000000
___fs2slong                       00000000
___fs2uchar                       00000000
___fs2uint                        00000000
___fs2ulong                       00000000
___fsadd                          00000000
___fsadd_fl1_1_22                 00000018
___fsadd_fl2_1_22                 0000001C
___fsdiv                          00000000
___fseq                           00000000
___fsgt                           00000000
___fslt                           00000000
___fsmul                          00000000
___fsneq                          00000000
___fssub                          00000000
___schar2fs                       00000000
___sint2fs                        00000000
___slong2fs                       00000000
___uchar2fs                       00000000
___uint2fs                        00000000
___ulong2fs                       00000000
r0x1008                           00000003
r0x1009                           00000002
r0x100A                           00000001
r0x100B                           00000000
r0x100C                           00000007
r0x100D                           00000006
r0x100E                           00000005
r0x100F                           00000004
r0x1010                           00000008
r0x1011                           00000009
r0x1012                           0000000A
r0x1013                           0000000B
r0x1014                           0000000C
r0x1015                           0000000D
r0x1016                           0000000E
r0x1017                           0000000F
r0x1018                           00000010
r0x1019                           00000011
r0x101A                           00000012
r0x101B                           00000013
r0x101C                           00000014
r0x101D                           00000015
r0x101E                           00000016
r0x101F                           00000017
ADCHS0                            ADCR0,3 	         /* bit 3 */
ADCHS1                            ADCR0,4 	         /* bit 4 */
ADCHS2                            ADCR0,5 	         /* bit 5 */
ADCHS3                            ADCR0,6 	         /* bit 6 */
ADCHS4                            ADCR0,7 	         /* bit 7 */
ADCKS0                            ADCR1,1      	     /* bit 1 */
ADCKS1                            ADCR1,2      	     /* bit 2 */
ADEOC                             ADCR0,1   	       /* bit 1 */
ADIE                              INTE,6            /* bit 6 */
ADIF                              INTF,6          /* bit 6 */
ADIOS0                            ADIO0,0          /* bit 0 */
ADIOS1                            ADIO0,1          /* bit 1 */
ADIOS10                           ADIO1,2         /* bit 2 */
ADIOS11                           ADIO1,3         /* bit 3 */
ADIOS12                           ADIO1,4         /* bit 4 */
ADIOS13                           ADIO1,5         /* bit 5 */
ADIOS14                           ADIO1,6         /* bit 6 */
ADIOS15                           ADIO1,7         /* bit 7 */
ADIOS2                            ADIO0,2          /* bit 2 */
ADIOS3                            ADIO0,3          /* bit 3 */
ADIOS4                            ADIO0,4          /* bit 4 */
ADIOS5                            ADIO0,5          /* bit 5 */
ADIOS6                            ADIO0,6          /* bit 6 */
ADIOS7                            ADIO0,7          /* bit 7 */
ADIOS8                            ADIO1,0         /* bit 0 */
ADIOS9                            ADIO1,1         /* bit 1 */
ADON                              ADCR0,0     	     /* bit 0 */
ADR0                              ADRL,0           /* bit 0 */
ADR1                              ADRL,1           /* bit 1 */
ADR10                             ADRH,6           /* bit 6 */
ADR11                             ADRH,7           /* bit 7 */
ADR2                              ADRL,2           /* bit 2 */
ADR3                              ADRL,3           /* bit 3 */
ADR4                              ADRH,0           /* bit 0 */
ADR5                              ADRH,1           /* bit 1 */
ADR6                              ADRH,2           /* bit 2 */
ADR7                              ADRH,3           /* bit 3 */
ADR8                              ADRH,4           /* bit 4 */
ADR9                              ADRH,5           /* bit 5 */
ADREF0                            ADCR1,3     	     /* bit 3 */
ADREF1                            ADCR1,4     	     /* bit 4 */
ADREF2                            ADCR1,5     	     /* bit 5 */
ADREF3                            ADCR1,6     	     /* bit 6 */
ADSMP0                            ADCR2,0   	       /* bit 0 */
ADSMP1                            ADCR2,1   	       /* bit 1 */
ADSMP2                            ADCR2,2   	       /* bit 2 */
ADSMP3                            ADCR2,3   	       /* bit 3 */
ADTEN                             ADCR1,7     	     /* bit 7 */
BUZ0OE                            T0CR,5           /* bit 5 */
BUZ1OE                            T1CR,5    	      /* bit 5 */
C                                 STATUS,0         /* bit 0 */
CLKOEN                            CLKO,7          /* bit 7 */
CLKOS0                            CLKO,0          /* bit 0 */
CLKOS1                            CLKO,1          /* bit 1 */
CLKOS2                            CLKO,2          /* bit 2 */
CLKS                              OSCM,2           /* bit 2 */
CLKS0                             LEDCR1,5         /* bit 5 */
CLKS1                             LEDCR1,6         /* bit 6 */
COMDV1                            LEDDRV,0          /* bit 0 */
COMDV2                            LEDDRV,1          /* bit 1 */
COMDV3                            LEDDRV,2          /* bit 2 */
COMDV4                            LEDDRV,3          /* bit 3 */
COMDV5                            LEDDRV,4          /* bit 4 */
COMDV6                            LEDDRV,5          /* bit 5 */
COMDV7                            LEDDRV,6          /* bit 6 */
COMDV8                            LEDDRV,7          /* bit 7 */
COMIOS1                           LEDIOS0,0          /* bit 0 */
COMIOS2                           LEDIOS0,1          /* bit 1 */
COMIOS3                           LEDIOS0,2          /* bit 2 */
COMIOS4                           LEDIOS0,3          /* bit 3 */
COMIOS5                           LEDIOS0,4          /* bit 4 */
COMIOS6                           LEDIOS0,5          /* bit 5 */
COMIOS7                           LEDIOS0,6          /* bit 6 */
COMIOS8                           LEDIOS0,7          /* bit 7 */
DC                                STATUS,1       	 /* bit 1 */
DRVPS                             LEDCR1,7         /* bit 7 */
DUTY                              LEDCR0,6         /* bit 6 */
FLED0                             LEDCR1,0         /* bit 0 */
FLED1                             LEDCR1,1         /* bit 1 */
FSR00                             FSR0,0          /* bit 0 */
FSR01                             FSR0,1          /* bit 1 */
FSR02                             FSR0,2          /* bit 2 */
FSR03                             FSR0,3          /* bit 3 */
FSR04                             FSR0,4          /* bit 4 */
FSR05                             FSR0,5          /* bit 5 */
FSR06                             FSR0,6          /* bit 6 */
FSR07                             FSR0,7          /* bit 7 */
FSR10                             FSR1,0          /* bit 0 */
FSR11                             FSR1,1          /* bit 1 */
FSR12                             FSR1,2          /* bit 2 */
FSR13                             FSR1,3          /* bit 3 */
FSR14                             FSR1,4          /* bit 4 */
FSR15                             FSR1,5          /* bit 5 */
FSR16                             FSR1,6          /* bit 6 */
FSR17                             FSR1,7          /* bit 7 */
GIE                               MCR,7           /* bit 7 */
GYS0                              LEDCR0,0         /* bit 0 */
GYS1                              LEDCR0,1         /* bit 1 */
GYS2                              LEDCR0,2         /* bit 2 */
HFEN                              OSCM,0           /* bit 0 */
HIBYTE0                           HIBYTE,0          /* bit 0 */
HIBYTE1                           HIBYTE,1          /* bit 1 */
HIBYTE2                           HIBYTE,2          /* bit 2 */
HIBYTE3                           HIBYTE,3          /* bit 3 */
HIBYTE4                           HIBYTE,4          /* bit 4 */
HIBYTE5                           HIBYTE,5          /* bit 5 */
HIBYTE6                           HIBYTE,6          /* bit 6 */
HIBYTE7                           HIBYTE,7          /* bit 7 */
IBPS0                             LEDCR1,3         /* bit 3 */
IBPS1                             LEDCR1,4         /* bit 4 */
INDF00                            INDF0,0          /* bit 0 */
INDF01                            INDF0,1        	 /* bit 1 */
INDF02                            INDF0,2          /* bit 2 */
INDF03                            INDF0,3        	 /* bit 3 */
INDF04                            INDF0,4        	 /* bit 4 */
INDF05                            INDF0,5        	 /* bit 5 */
INDF06                            INDF0,6        	 /* bit 6 */
INDF07                            INDF0,7        	 /* bit 7 */
INDF10                            INDF1,0          /* bit 0 */
INDF11                            INDF1,1          /* bit 1 */
INDF12                            INDF1,2          /* bit 2 */
INDF13                            INDF1,3          /* bit 3 */
INDF14                            INDF1,4          /* bit 4 */
INDF15                            INDF1,5          /* bit 5 */
INDF16                            INDF1,6          /* bit 6 */
INDF17                            INDF1,7          /* bit 7 */
INDF20                            INDF2,0          /* bit 0 */
INDF21                            INDF2,1          /* bit 1 */
INDF22                            INDF2,2          /* bit 2 */
INDF23                            INDF2,3          /* bit 3 */
INDF24                            INDF2,4          /* bit 4 */
INDF25                            INDF2,5          /* bit 5 */
INDF26                            INDF2,6          /* bit 6 */
INDF27                            INDF2,7          /* bit 7 */
INDF30                            INDF3,0          /* bit 0 */
INDF31                            INDF3,1          /* bit 1 */
INDF32                            INDF3,2          /* bit 2 */
INDF33                            INDF3,3          /* bit 3 */
INDF34                            INDF3,4          /* bit 4 */
INDF35                            INDF3,5          /* bit 5 */
INDF36                            INDF3,6          /* bit 6 */
INDF37                            INDF3,7          /* bit 7 */
INT0IE                            INTE,2            /* bit 2 */
INT0IF                            INTF,2       	  /* bit 2 */
INT1IE                            INTE,3            /* bit 3 */
INT1IF                            INTF,3          /* bit 3 */
IREFEN                            LEDCR1,2         /* bit 2 */
KBIE                              INTE,4            /* bit 4 */
KBIF                              INTF,4          /* bit 4 */
LEDEN                             LEDCR0,7         /* bit 7 */
LFEN                              OSCM,1           /* bit 1 */
MINT00                            MCR,0           /* bit 0 */
MINT01                            MCR,1           /* bit 1 */
MINT10                            MCR,2           /* bit 2 */
MINT11                            MCR,3           /* bit 3 */
P00D                              IOP0,0           /* bit 0 */
P00OE                             OEP0,0          /* bit 0 */
P00PD                             PDP0,0            /* bit 0 */
P00PU                             PUP0,0          /* bit 0 */
P01D                              IOP0,1           /* bit 1 */
P01OE                             OEP0,1          /* bit 1 */
P01PD                             PDP0,1            /* bit 1 */
P01PU                             PUP0,1          /* bit 1 */
P02D                              IOP0,2           /* bit 2 */
P02OE                             OEP0,2          /* bit 2 */
P02PD                             PDP0,2            /* bit 2 */
P02PU                             PUP0,2          /* bit 2 */
P03D                              IOP0,3           /* bit 3 */
P03OE                             OEP0,3          /* bit 3 */
P03PD                             PDP0,3            /* bit 3 */
P03PU                             PUP0,3          /* bit 3 */
P04D                              IOP0,4           /* bit 4 */
P04OE                             OEP0,4          /* bit 4 */
P04PD                             PDP0,4            /* bit 4 */
P04PU                             PUP0,4          /* bit 4 */
P05D                              IOP0,5           /* bit 5 */
P05OE                             OEP0,5          /* bit 5 */
P05PD                             PDP0,5            /* bit 5 */
P05PU                             PUP0,5          /* bit 5 */
P06D                              IOP0,6           /* bit 6 */
P06OE                             OEP0,6          /* bit 6 */
P06PD                             PDP0,6            /* bit 6 */
P06PU                             PUP0,6          /* bit 6 */
P07D                              IOP0,7           /* bit 7 */
P07OE                             OEP0,7          /* bit 7 */
P07PD                             PDP0,7            /* bit 7 */
P07PU                             PUP0,7          /* bit 7 */
P10D                              IOP1,0           /* bit 0 */
P10OE                             OEP1,0           /* bit 0 */
P10PD                             PDP1,0      	   /* bit 0 */
P10PU                             PUP1,0           /* bit 0 */
P11D                              IOP1,1           /* bit 1 */
P11OE                             OEP1,1           /* bit 1 */
P11PD                             PDP1,1      	   /* bit 1 */
P11PU                             PUP1,1           /* bit 1 */
P12D                              IOP1,2           /* bit 2 */
P12OE                             OEP1,2           /* bit 2 */
P12PD                             PDP1,2      	   /* bit 2 */
P12PU                             PUP1,2           /* bit 2 */
P20D                              IOP2,0           /* bit 0 */
P20OE                             OEP2,0          /* bit 0 */
P20PD                             PDP2,0          /* bit 0 */
P20PU                             PUP2,0          /* bit 0 */
P21D                              IOP2,1           /* bit 1 */
P21OE                             OEP2,1          /* bit 1 */
P21PD                             PDP2,1      	  /* bit 1 */
P21PU                             PUP2,1          /* bit 1 */
P22D                              IOP2,2           /* bit 2 */
P22OE                             OEP2,2          /* bit 2 */
P22PD                             PDP2,2      	  /* bit 2 */
P22PU                             PUP2,2          /* bit 2 */
P23D                              IOP2,3           /* bit 3 */
P23OE                             OEP2,3          /* bit 3 */
P23PD                             PDP2,3      	  /* bit 3 */
P23PU                             PUP2,3          /* bit 3 */
P24D                              IOP2,4           /* bit 4 */
P24OE                             OEP2,4          /* bit 4 */
P24PD                             PDP2,4      	  /* bit 4 */
P24PU                             PUP2,4          /* bit 4 */
P25D                              IOP2,5           /* bit 5 */
P25OE                             OEP2,5          /* bit 5 */
P25PD                             PDP2,5      	  /* bit 5 */
P25PU                             PUP2,5          /* bit 5 */
P26D                              IOP2,6           /* bit 6 */
P26OE                             OEP2,6          /* bit 6 */
P26PD                             PDP2,6      	  /* bit 6 */
P26PU                             PUP2,6          /* bit 6 */
P30D                              IOP3,0          /* bit 0 */
P30OE                             OEP3,0          /* bit 0 */
P30PD                             PDP3,0      	  /* bit 0 */
P30PU                             PUP3,0          /* bit 0 */
P31D                              IOP3,1          /* bit 1 */
P31OE                             OEP3,1          /* bit 1 */
P31PD                             PDP3,1      	  /* bit 1 */
P31PU                             PUP3,1          /* bit 1 */
P32D                              IOP3,2          /* bit 2 */
P32OE                             OEP3,2          /* bit 2 */
P32PD                             PDP3,2      	  /* bit 2 */
P32PU                             PUP3,2          /* bit 2 */
P33D                              IOP3,3          /* bit 3 */
P33OE                             OEP3,3          /* bit 3 */
P33PD                             PDP3,3      	  /* bit 3 */
P33PU                             PUP3,3          /* bit 3 */
P34D                              IOP3,4          /* bit 4 */
P34OE                             OEP3,4          /* bit 4 */
P34PD                             PDP3,4      	  /* bit 4 */
P34PU                             PUP3,4          /* bit 4 */
P35D                              IOP3,5          /* bit 5 */
P35OE                             OEP3,5          /* bit 5 */
P35PD                             PDP3,5      	  /* bit 5 */
P35PU                             PUP3,5          /* bit 5 */
P36D                              IOP3,6          /* bit 6 */
P36OE                             OEP3,6          /* bit 6 */
P36PD                             PDP3,6      	  /* bit 6 */
P36PU                             PUP3,6          /* bit 6 */
P37D                              IOP3,7          /* bit 7 */
P37OE                             OEP3,7          /* bit 7 */
P37PD                             PDP3,7      	  /* bit 7 */
P37PU                             PUP3,7          /* bit 7 */
PC0                               PCL,0          /* bit 0 */
PC1                               PCL,1          /* bit 1 */
PC2                               PCL,2          /* bit 2 */
PC3                               PCL,3          /* bit 3 */
PC4                               PCL,4          /* bit 4 */
PC5                               PCL,5          /* bit 5 */
PC6                               PCL,6          /* bit 6 */
PC7                               PCL,7          /* bit 7 */
PD                                MCR,4           /* bit 4 */
PWM0OE                            T0CR,6           /* bit 6 */
PWM1OE                            T1CR,6    	      /* bit 6 */
SEGIOS1                           LEDIOS1,0          /* bit 0 */
SEGIOS2                           LEDIOS1,1          /* bit 1 */
SEGIOS3                           LEDIOS1,2          /* bit 2 */
SEGIOS4                           LEDIOS1,3          /* bit 3 */
SEGIOS5                           LEDIOS1,4          /* bit 4 */
SEGIOS6                           LEDIOS1,5          /* bit 5 */
SEGIOS7                           LEDIOS1,6          /* bit 6 */
SEGIOS8                           LEDIOS1,7          /* bit 7 */
STBH                              OSCM,4           /* bit 4 */
STBL                              OSCM,5           /* bit 5 */
T0C0                              T0CNT,0          /* bit 0 */
T0C1                              T0CNT,1          /* bit 1 */
T0C2                              T0CNT,2          /* bit 2 */
T0C3                              T0CNT,3          /* bit 3 */
T0C4                              T0CNT,4          /* bit 4 */
T0C5                              T0CNT,5          /* bit 5 */
T0C6                              T0CNT,6          /* bit 6 */
T0C7                              T0CNT,7          /* bit 7 */
T0DATA0                           T0DATA,0        	/* bit 0 */
T0DATA1                           T0DATA,1       	  /* bit 1 */
T0DATA2                           T0DATA,2      	  /* bit 2 */
T0DATA3                           T0DATA,3      	  /* bit 3 */
T0DATA4                           T0DATA,4      	  /* bit 4 */
T0DATA5                           T0DATA,5      	  /* bit 5 */
T0DATA6                           T0DATA,6      	  /* bit 6 */
T0DATA7                           T0DATA,7      	  /* bit 7 */
T0IE                              INTE,0    	      /* bit 0 */
T0IF                              INTF,0         	/* bit 0 */
T0LOAD0                           T0LOAD,0      /* bit 0 */
T0LOAD1                           T0LOAD,1      /* bit 1 */
T0LOAD2                           T0LOAD,2      /* bit 2 */
T0LOAD3                           T0LOAD,3      /* bit 3 */
T0LOAD4                           T0LOAD,4      /* bit 4 */
T0LOAD5                           T0LOAD,5      /* bit 5 */
T0LOAD6                           T0LOAD,6      /* bit 6 */
T0LOAD7                           T0LOAD,7      /* bit 7 */
T0PR0                             T0CR,0           /* bit 0 */
T0PR1                             T0CR,1           /* bit 1 */
T0PR2                             T0CR,2           /* bit 2 */
T0PTS0                            T0CR,3           /* bit 3 */
T0PTS1                            T0CR,4           /* bit 4 */
T1C0                              T1CNT,0          /* bit 0 */
T1C1                              T1CNT,1          /* bit 1 */
T1C2                              T1CNT,2          /* bit 2 */
T1C3                              T1CNT,3          /* bit 3 */
T1C4                              T1CNT,4          /* bit 4 */
T1C5                              T1CNT,5          /* bit 5 */
T1C6                              T1CNT,6          /* bit 6 */
T1C7                              T1CNT,7          /* bit 7 */
T1DATA0                           T1DATA,0       	/* bit 0 */
T1DATA1                           T1DATA,1      	/* bit 1 */
T1DATA2                           T1DATA,2     	  /* bit 2 */
T1DATA3                           T1DATA,3     	  /* bit 3 */
T1DATA4                           T1DATA,4     	  /* bit 4 */
T1DATA5                           T1DATA,5     	  /* bit 5 */
T1DATA6                           T1DATA,6     	  /* bit 6 */
T1DATA7                           T1DATA,7     	  /* bit 7 */
T1IE                              INTE,1            /* bit 1 */
T1IF                              INTF,1          /* bit 1 */
T1LOAD0                           T1LOAD,0       	/* bit 0 */
T1LOAD1                           T1LOAD,1      	/* bit 1 */
T1LOAD2                           T1LOAD,2     	  /* bit 2 */
T1LOAD3                           T1LOAD,3     	  /* bit 3 */
T1LOAD4                           T1LOAD,4     	  /* bit 4 */
T1LOAD5                           T1LOAD,5     	  /* bit 5 */
T1LOAD6                           T1LOAD,6     	  /* bit 6 */
T1LOAD7                           T1LOAD,7     	  /* bit 7 */
T1PR0                             T1CR,0           	/* bit 0 */
T1PR1                             T1CR,1           	/* bit 1 */
T1PR2                             T1CR,2           	/* bit 2 */
T1PTS0                            T1CR,3      	    /* bit 3 */
T1PTS1                            T1CR,4      	    /* bit 4 */
T2C0                              T2CNTL,0         /* bit 0 */
T2C1                              T2CNTL,1         /* bit 1 */
T2C10                             T2CNTH,2           /* bit 2 */
T2C11                             T2CNTH,3           /* bit 3 */
T2C12                             T2CNTH,4           /* bit 4 */
T2C13                             T2CNTH,5           /* bit 5 */
T2C14                             T2CNTH,6           /* bit 6 */
T2C15                             T2CNTH,7           /* bit 7 */
T2C2                              T2CNTL,2         /* bit 2 */
T2C3                              T2CNTL,3         /* bit 3 */
T2C4                              T2CNTL,4         /* bit 4 */
T2C5                              T2CNTL,5         /* bit 5 */
T2C6                              T2CNTL,6         /* bit 6 */
T2C7                              T2CNTL,7         /* bit 7 */
T2C8                              T2CNTH,0           /* bit 0 */
T2C9                              T2CNTH,1           /* bit 1 */
T2LOAD0                           T2LOADL,0       	/* bit 0 */
T2LOAD1                           T2LOADL,1      	  /* bit 1 */
T2LOAD10                          T2LOADH,2     	  /* bit 2 */
T2LOAD11                          T2LOADH,3     	  /* bit 3 */
T2LOAD12                          T2LOADH,4     	  /* bit 4 */
T2LOAD13                          T2LOADH,5     	  /* bit 5 */
T2LOAD14                          T2LOADH,6     	  /* bit 6 */
T2LOAD15                          T2LOADH,7     	  /* bit 7 */
T2LOAD2                           T2LOADL,2     	  /* bit 2 */
T2LOAD3                           T2LOADL,3     	  /* bit 3 */
T2LOAD4                           T2LOADL,4     	  /* bit 4 */
T2LOAD5                           T2LOADL,5     	  /* bit 5 */
T2LOAD6                           T2LOADL,6     	  /* bit 6 */
T2LOAD7                           T2LOADL,7     	  /* bit 7 */
T2LOAD8                           T2LOADH,0       	/* bit 0 */
T2LOAD9                           T2LOADH,1      	  /* bit 1 */
T2MODE                            T2CR,5    	      /* bit 5 */
T2PR0                             T2CR,0           	/* bit 0 */
T2PR1                             T2CR,1           	/* bit 1 */
T2PR2                             T2CR,2           	/* bit 2 */
T2PTS0                            T2CR,3      	    /* bit 3 */
T2PTS1                            T2CR,4      	    /* bit 4 */
TC0EN                             T0CR,7           /* bit 7 */
TC1EN                             T1CR,7        	  /* bit 7 */
TC2EN                             T2CR,7        	  /* bit 7 */
TK0C0                             TK0CNTL,0        	 /* bit 0 */
TK0C1                             TK0CNTL,1      	   /* bit 1 */
TK0C10                            TK0CNTH,2         /* bit 2 */
TK0C11                            TK0CNTH,3         /* bit 3 */
TK0C12                            TK0CNTH,4         /* bit 4 */
TK0C13                            TK0CNTH,5         /* bit 5 */
TK0C14                            TK0CNTH,6         /* bit 6 */
TK0C15                            TK0CNTH,7         /* bit 7 */
TK0C2                             TK0CNTL,2     	   /* bit 2 */
TK0C3                             TK0CNTL,3      	   /* bit 3 */
TK0C4                             TK0CNTL,4     	   /* bit 4 */
TK0C5                             TK0CNTL,5      	   /* bit 5 */
TK0C6                             TK0CNTL,6      	   /* bit 6 */
TK0C7                             TK0CNTL,7     	   /* bit 7 */
TK0C8                             TK0CNTH,0         /* bit 0 */
TK0C9                             TK0CNTH,1         /* bit 1 */
TK0CLR                            TK0CR0,3       	  /* bit 3 */
TK0FL0                            TK0CR1,4            /* bit 4 */
TK0FL1                            TK0CR1,5            /* bit 5 */
TK0FQ0                            TK0CR0,0       	  /* bit 0 */
TK0FQ1                            TK0CR0,1       	  /* bit 1 */
TK0FQ2                            TK0CR0,2       	  /* bit 2 */
TK0IE                             TK0CR1,6           /* bit 6 */
TK0IF                             TK0CR1,7           /* bit 7 */
TK0IO0                            TK0CR2,0          /* bit 0 */
TK0IO1                            TK0CR2,1          /* bit 1 */
TK0IO2                            TK0CR2,2          /* bit 2 */
TK0IO3                            TK0CR2,3          /* bit 3 */
TK0IO4                            TK0CR2,4          /* bit 4 */
TK0IO5                            TK0CR2,5          /* bit 5 */
TK0IO6                            TK0CR2,6          /* bit 6 */
TK0IO7                            TK0CR2,7          /* bit 7 */
TK0JE                             TK0CR0,5      	  /* bit 5 */
TK0K0                             TK0CR1,0            /* bit 0 */
TK0K1                             TK0CR1,1            /* bit 1 */
TK0K2                             TK0CR1,2            /* bit 2 */
TK0RCE                            TK0CR0,4     	    /* bit 4 */
TK1C0                             TK1CNTL,0        	 /* bit 0 */
TK1C1                             TK1CNTL,1      	   /* bit 1 */
TK1C10                            TK1CNTH,2          /* bit 2 */
TK1C11                            TK1CNTH,3          /* bit 3 */
TK1C12                            TK1CNTH,4          /* bit 4 */
TK1C13                            TK1CNTH,5          /* bit 5 */
TK1C14                            TK1CNTH,6          /* bit 6 */
TK1C15                            TK1CNTH,7          /* bit 7 */
TK1C2                             TK1CNTL,2     	   /* bit 2 */
TK1C3                             TK1CNTL,3      	   /* bit 3 */
TK1C4                             TK1CNTL,4     	   /* bit 4 */
TK1C5                             TK1CNTL,5      	   /* bit 5 */
TK1C6                             TK1CNTL,6      	   /* bit 6 */
TK1C7                             TK1CNTL,7     	   /* bit 7 */
TK1C8                             TK1CNTH,0          /* bit 0 */
TK1C9                             TK1CNTH,1          /* bit 1 */
TK1CLR                            TK1CR0,3       	  /* bit 3 */
TK1FL0                            TK0CR1,4            /* bit 4 */
TK1FL1                            TK0CR1,5            /* bit 5 */
TK1FQ0                            TK1CR0,0       	  /* bit 0 */
TK1FQ1                            TK1CR0,1       	  /* bit 1 */
TK1FQ2                            TK1CR0,2       	  /* bit 2 */
TK1IE                             TK0CR1,6            /* bit 6 */
TK1IF                             TK0CR1,7            /* bit 7 */
TK1IO0                            TK1CR2,0          /* bit 0 */
TK1IO1                            TK1CR2,1          /* bit 1 */
TK1IO2                            TK1CR2,2          /* bit 2 */
TK1IO3                            TK1CR2,3          /* bit 3 */
TK1IO4                            TK1CR2,4          /* bit 4 */
TK1IO5                            TK1CR2,5          /* bit 5 */
TK1IO6                            TK1CR2,6          /* bit 6 */
TK1IO7                            TK1CR2,7          /* bit 7 */
TK1JE                             TK1CR0,5      	  /* bit 5 */
TK1K0                             TK0CR1,0            /* bit 0 */
TK1K1                             TK0CR1,1            /* bit 1 */
TK1K2                             TK0CR1,2            /* bit 2 */
TK1RCE                            TK1CR0,4     	    /* bit 4 */
TO                                MCR,5           /* bit 5 */
VREFP_PHEN                        ADCR1,0   	   /* bit 0 */
Z                                 STATUS,2         /* bit 2 */

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

