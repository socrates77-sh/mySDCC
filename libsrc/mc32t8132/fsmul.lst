gpasm-1.7.0_beta1 (Nov 23 2015)fsmul.asm          2015-11-30  22:56:08         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : ANSI-C Compiler
                      00003 ; Version 0.0.4 (Nov 23 2015) (Linux)
                      00004 ; This file was generated Mon Nov 30 22:56:08 2015
                      00005 ;--------------------------------------------------------
                      00006 ; MC3X port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc/fsmul.c"
                      00009         list    p=8132
                      00010         radix dec
                      00011         include "8132.inc"
                      00001 
                      00002   ;processor mc32t8132
                      00003 
  000001A0            00004 INDF       equ   0x1a0
  000001A0            00005 INDF0      equ   0x1a0
  000001A1            00006 INDF1      equ   0x1a1
  000001A2            00007 INDF2      equ   0x1a2
  000001A3            00008 HIBYTE     equ   0x1a3
  000001A4            00009 FSR        equ   0x1a4
  000001A4            00010 FSR0       equ   0x1a4
  000001A5            00011 FSR1       equ   0x1a5
  000001A6            00012 PCL        equ   0x1a6
  000001A7            00013 STATUS     equ   0x1a7
  000001A7            00014 PFLAG      equ   0x1a7
  000001A8            00015 MCR        equ   0x1a8
  000001A9            00016 INDF3      equ   0x1a9
  000001AA            00017 INTE         equ   0x1aa
  000001AB            00018 INTF         equ   0x1ab
  000001AC            00019 OSCM       equ   0x1ac
  000001AD            00020 CLKO       equ   0x1ad
                      00021 
  000001B0            00022 IOP0       equ   0x1b0
  000001B1            00023 OEP0       equ   0x1b1
  000001B2            00024 PUP0       equ   0x1b2
  000001B3            00025 PDP0       equ   0x1b3
  000001B4            00026 IOP1       equ   0x1b4
  000001B5            00027 OEP1       equ   0x1b5
  000001B6            00028 PUP1       equ   0x1b6
  000001B7            00029 PDP1       equ   0x1b7
  000001B8            00030 IOP2       equ   0x1b8
  000001B9            00031 OEP2       equ   0x1b9
  000001BA            00032 PUP2       equ   0x1ba
  000001BB            00033 PDP2       equ   0x1bb
  000001BC            00034 IOP3       equ   0x1bc
  000001BD            00035 OEP3       equ   0x1bd
  000001BE            00036 PUP3       equ   0x1be
  000001BF            00037 PDP3       equ   0x1bf
                      00038 
  000001C0            00039 T0CR       equ   0x1c0
  000001C1            00040 T0CNT      equ   0x1c1  
  000001C2            00041 T0LOAD     equ   0x1c2
  000001C3            00042 T0DATA     equ   0x1c3 
  000001C4            00043 T1CR       equ   0x1c4
  000001C5            00044 T1CNT      equ   0x1c5  
  000001C6            00045 T1LOAD     equ   0x1c6
  000001C7            00046 T1DATA     equ   0x1c7
  000001C8            00047 T2CR       equ   0x1c8
  000001C9            00048 T2CNTH     equ   0x1c9  
  000001CA            00049 T2CNTL     equ   0x1ca  
  000001CB            00050 T2LOADH    equ   0x1cb
  000001CC            00051 T2LOADL    equ   0x1cc
                      00052 
  000001D0            00053 TK0CR0     equ   0x1d0
  000001D1            00054 TK0CR1     equ   0x1d1
  000001D2            00055 TK0CR2     equ   0x1d2
  000001D3            00056 TK0CNTH    equ   0x1d3
  000001D4            00057 TK0CNTL    equ   0x1d4
  000001D8            00058 TK1CR0     equ   0x1d8
  000001D9            00059 TK1CR1     equ   0x1d9
  000001DA            00060 TK1CR2     equ   0x1da
  000001DB            00061 TK1CNTH    equ   0x1db
  000001DC            00062 TK1CNTL    equ   0x1dc
                      00063 
  000001E0            00064 ADCR0      equ   0x1e0
  000001E1            00065 ADCR1      equ   0x1e1
  000001E2            00066 ADCR2      equ   0x1e2
  000001E3            00067 ADIO0      equ   0x1e3
  000001E4            00068 ADIO1      equ   0x1e4
  000001E5            00069 ADRH       equ   0x1e5  
  000001E6            00070 ADRL       equ   0x1e6
                      00071 
  000001E8            00072 LEDDS1     equ   0x1e8
  000001E9            00073 LEDDS2     equ   0x1e9
  000001EA            00074 LEDDS3     equ   0x1ea
  000001EB            00075 LEDDS4     equ   0x1eb
  000001EC            00076 LEDDS5     equ   0x1ec
  000001ED            00077 LEDDS6     equ   0x1ed
  000001EE            00078 LEDDS7     equ   0x1ee
  000001EF            00079 LEDDS8     equ   0x1ef
  000001F0            00080 LEDCR0     equ   0x1f0
  000001F1            00081 LEDCR1     equ   0x1f1
  000001F2            00082 LEDIOS0    equ   0x1f2
  000001F3            00083 LEDIOS1    equ   0x1f3
  000001F4            00084 LEDDRV     equ   0x1f4 
                      00085 
                      00086 
                      00087 ; ----- INDF0 Bits --------------------------------------------
                      00088 #define INDF00           INDF0,0          /* bit 0 */
                      00089 #define INDF01           INDF0,1                 /* bit 1 */
                      00090 #define INDF02           INDF0,2          /* bit 2 */
                      00091 #define INDF03           INDF0,3                 /* bit 3 */
                      00092 #define INDF04           INDF0,4                 /* bit 4 */
                      00093 #define INDF05           INDF0,5                 /* bit 5 */
                      00094 #define INDF06           INDF0,6                 /* bit 6 */
                      00095 #define INDF07           INDF0,7                 /* bit 7 */
                      00096 
                      00097 ; ----- INDF1 Bits --------------------------------------------
                      00098 #define INDF10           INDF1,0          /* bit 0 */
                      00099 #define INDF11           INDF1,1          /* bit 1 */
                      00100 #define INDF12           INDF1,2          /* bit 2 */
                      00101 #define INDF13           INDF1,3          /* bit 3 */
                      00102 #define INDF14           INDF1,4          /* bit 4 */
                      00103 #define INDF15           INDF1,5          /* bit 5 */
                      00104 #define INDF16           INDF1,6          /* bit 6 */
                      00105 #define INDF17           INDF1,7          /* bit 7 */
                      00106 
                      00107 ; ----- INDF2 Bits --------------------------------------------
                      00108 #define INDF20           INDF2,0          /* bit 0 */
                      00109 #define INDF21           INDF2,1          /* bit 1 */
                      00110 #define INDF22           INDF2,2          /* bit 2 */
                      00111 #define INDF23           INDF2,3          /* bit 3 */
                      00112 #define INDF24           INDF2,4          /* bit 4 */
                      00113 #define INDF25           INDF2,5          /* bit 5 */
                      00114 #define INDF26           INDF2,6          /* bit 6 */
                      00115 #define INDF27           INDF2,7          /* bit 7 */
                      00116 
                      00117 ; ----- HIBYTE Bits --------------------------------------------
                      00118 #define HIBYTE0           HIBYTE,0          /* bit 0 */
                      00119 #define HIBYTE1           HIBYTE,1          /* bit 1 */
                      00120 #define HIBYTE2           HIBYTE,2          /* bit 2 */
                      00121 #define HIBYTE3           HIBYTE,3          /* bit 3 */
                      00122 #define HIBYTE4           HIBYTE,4          /* bit 4 */
                      00123 #define HIBYTE5           HIBYTE,5          /* bit 5 */
                      00124 #define HIBYTE6           HIBYTE,6          /* bit 6 */
                      00125 #define HIBYTE7           HIBYTE,7          /* bit 7 */
                      00126 
                      00127 ; ----- FSR0 Bits ---------------------------------------------
                      00128 #define FSR00           FSR0,0          /* bit 0 */
                      00129 #define FSR01           FSR0,1          /* bit 1 */
                      00130 #define FSR02           FSR0,2          /* bit 2 */
                      00131 #define FSR03           FSR0,3          /* bit 3 */
                      00132 #define FSR04           FSR0,4          /* bit 4 */
                      00133 #define FSR05           FSR0,5          /* bit 5 */
                      00134 #define FSR06           FSR0,6          /* bit 6 */
                      00135 #define FSR07           FSR0,7          /* bit 7 */
                      00136 
                      00137 ; ----- FSR1 Bits ---------------------------------------------
                      00138 #define FSR10           FSR1,0          /* bit 0 */
                      00139 #define FSR11           FSR1,1          /* bit 1 */
                      00140 #define FSR12           FSR1,2          /* bit 2 */
                      00141 #define FSR13           FSR1,3          /* bit 3 */
                      00142 #define FSR14           FSR1,4          /* bit 4 */
                      00143 #define FSR15           FSR1,5          /* bit 5 */
                      00144 #define FSR16           FSR1,6          /* bit 6 */
                      00145 #define FSR17           FSR1,7          /* bit 7 */
                      00146 
                      00147 ; ----- PCL Bits ---------------------------------------------
                      00148 #define PC0           PCL,0          /* bit 0 */
                      00149 #define PC1           PCL,1          /* bit 1 */
                      00150 #define PC2           PCL,2          /* bit 2 */
                      00151 #define PC3           PCL,3          /* bit 3 */
                      00152 #define PC4           PCL,4          /* bit 4 */
                      00153 #define PC5           PCL,5          /* bit 5 */
                      00154 #define PC6           PCL,6          /* bit 6 */
                      00155 #define PC7           PCL,7          /* bit 7 */
                      00156 
                      00157 ; ----- STATUS Bits --------------------------------------------
                      00158 #define C               STATUS,0         /* bit 0 */
                      00159 #define DC              STATUS,1         /* bit 1 */
                      00160 #define Z               STATUS,2         /* bit 2 */
                      00161 
                      00162 ; ----- MCR Bits --------------------------------------------
                      00163 #define MINT00          MCR,0           /* bit 0 */
                      00164 #define MINT01          MCR,1           /* bit 1 */
                      00165 #define MINT10          MCR,2           /* bit 2 */
                      00166 #define MINT11          MCR,3           /* bit 3 */
                      00167 #define PD              MCR,4           /* bit 4 */
                      00168 #define TO              MCR,5           /* bit 5 */
                      00169 #define GIE             MCR,7           /* bit 7 */
                      00170 
                      00171 ; ----- INDF3 Bits --------------------------------------------
                      00172 #define INDF30           INDF3,0          /* bit 0 */
                      00173 #define INDF31           INDF3,1          /* bit 1 */
                      00174 #define INDF32           INDF3,2          /* bit 2 */
                      00175 #define INDF33           INDF3,3          /* bit 3 */
                      00176 #define INDF34           INDF3,4          /* bit 4 */
                      00177 #define INDF35           INDF3,5          /* bit 5 */
                      00178 #define INDF36           INDF3,6          /* bit 6 */
                      00179 #define INDF37           INDF3,7          /* bit 7 */
                      00180 
                      00181 ; ----- INTE Bits --------------------------------------------
                      00182 #define T0IE                INTE,0            /* bit 0 */
                      00183 #define T1IE            INTE,1            /* bit 1 */
                      00184 #define INT0IE          INTE,2            /* bit 2 */
                      00185 #define INT1IE          INTE,3            /* bit 3 */
                      00186 #define KBIE            INTE,4            /* bit 4 */
                      00187 #define ADIE            INTE,6            /* bit 6 */
                      00188 
                      00189 ; ----- INTF Bits --------------------------------------------
                      00190 #define T0IF                INTF,0              /* bit 0 */
                      00191 #define T1IF            INTF,1          /* bit 1 */
                      00192 #define INT0IF              INTF,2                /* bit 2 */
                      00193 #define INT1IF          INTF,3          /* bit 3 */
                      00194 #define KBIF            INTF,4          /* bit 4 */
                      00195 #define ADIF            INTF,6          /* bit 6 */
                      00196 
                      00197 ; ----- OSCM Bits --------------------------------------------
                      00198 #define HFEN            OSCM,0           /* bit 0 */
                      00199 #define LFEN            OSCM,1           /* bit 1 */
                      00200 #define CLKS            OSCM,2           /* bit 2 */
                      00201 #define STBH            OSCM,4           /* bit 4 */
                      00202 #define STBL            OSCM,5           /* bit 5 */
                      00203 
                      00204 ; ----- CLKO Bits --------------------------------------------
                      00205 #define CLKOS0          CLKO,0          /* bit 0 */
                      00206 #define CLKOS1          CLKO,1          /* bit 1 */
                      00207 #define CLKOS2          CLKO,2          /* bit 2 */
                      00208 #define CLKOEN          CLKO,7          /* bit 7 */
                      00209 
                      00210 ; ----- IOP0 Bits --------------------------------------------
                      00211 #define P00D            IOP0,0           /* bit 0 */
                      00212 #define P01D            IOP0,1           /* bit 1 */
                      00213 #define P02D            IOP0,2           /* bit 2 */
                      00214 #define P03D            IOP0,3           /* bit 3 */
                      00215 #define P04D            IOP0,4           /* bit 4 */
                      00216 #define P05D            IOP0,5           /* bit 5 */
                      00217 #define P06D            IOP0,6           /* bit 6 */
                      00218 #define P07D            IOP0,7           /* bit 7 */
                      00219 
                      00220 ; ----- OEP0 Bits --------------------------------------------
                      00221 #define P00OE           OEP0,0          /* bit 0 */
                      00222 #define P01OE           OEP0,1          /* bit 1 */
                      00223 #define P02OE           OEP0,2          /* bit 2 */
                      00224 #define P03OE           OEP0,3          /* bit 3 */
                      00225 #define P04OE           OEP0,4          /* bit 4 */
                      00226 #define P05OE           OEP0,5          /* bit 5 */
                      00227 #define P06OE           OEP0,6          /* bit 6 */
                      00228 #define P07OE           OEP0,7          /* bit 7 */
                      00229 
                      00230 ; ----- PUP0 Bits --------------------------------------------
                      00231 #define P00PU           PUP0,0          /* bit 0 */
                      00232 #define P01PU           PUP0,1          /* bit 1 */
                      00233 #define P02PU           PUP0,2          /* bit 2 */
                      00234 #define P03PU           PUP0,3          /* bit 3 */
                      00235 #define P04PU           PUP0,4          /* bit 4 */
                      00236 #define P05PU           PUP0,5          /* bit 5 */
                      00237 #define P06PU           PUP0,6          /* bit 6 */
                      00238 #define P07PU           PUP0,7          /* bit 7 */
                      00239 
                      00240 ; ----- PDP0 Bits --------------------------------------------
                      00241 #define P00PD           PDP0,0            /* bit 0 */
                      00242 #define P01PD           PDP0,1            /* bit 1 */
                      00243 #define P02PD           PDP0,2            /* bit 2 */
                      00244 #define P03PD           PDP0,3            /* bit 3 */
                      00245 #define P04PD           PDP0,4            /* bit 4 */
                      00246 #define P05PD           PDP0,5            /* bit 5 */
                      00247 #define P06PD           PDP0,6            /* bit 6 */
                      00248 #define P07PD           PDP0,7            /* bit 7 */
                      00249 
                      00250 ; ----- IOP1 Bits --------------------------------------------
                      00251 #define P10D            IOP1,0           /* bit 0 */
                      00252 #define P11D            IOP1,1           /* bit 1 */
                      00253 #define P12D            IOP1,2           /* bit 2 */
                      00254 
                      00255 ; ----- OEP1 Bits --------------------------------------------
                      00256 #define P10OE           OEP1,0           /* bit 0 */
                      00257 #define P11OE           OEP1,1           /* bit 1 */
                      00258 #define P12OE           OEP1,2           /* bit 2 */
                      00259 
                      00260 ; ----- PUP1 Bits --------------------------------------------
                      00261 #define P10PU           PUP1,0           /* bit 0 */
                      00262 #define P11PU           PUP1,1           /* bit 1 */
                      00263 #define P12PU           PUP1,2           /* bit 2 */
                      00264 
                      00265 ; ----- PDP1 Bits --------------------------------------------
                      00266 #define P10PD               PDP1,0                 /* bit 0 */
                      00267 #define P11PD               PDP1,1                 /* bit 1 */
                      00268 #define P12PD               PDP1,2                 /* bit 2 */
                      00269 
                      00270 ; ----- IOP2 Bits --------------------------------------------
                      00271 #define P20D            IOP2,0           /* bit 0 */
                      00272 #define P21D            IOP2,1           /* bit 1 */
                      00273 #define P22D            IOP2,2           /* bit 2 */
                      00274 #define P23D            IOP2,3           /* bit 3 */
                      00275 #define P24D            IOP2,4           /* bit 4 */
                      00276 #define P25D            IOP2,5           /* bit 5 */
                      00277 #define P26D            IOP2,6           /* bit 6 */
                      00278 
                      00279 ; ----- OEP2 Bits --------------------------------------------
                      00280 #define P20OE           OEP2,0          /* bit 0 */
                      00281 #define P21OE           OEP2,1          /* bit 1 */
                      00282 #define P22OE           OEP2,2          /* bit 2 */
                      00283 #define P23OE           OEP2,3          /* bit 3 */
                      00284 #define P24OE           OEP2,4          /* bit 4 */
                      00285 #define P25OE           OEP2,5          /* bit 5 */
                      00286 #define P26OE           OEP2,6          /* bit 6 */
                      00287 
                      00288 ; ----- PUP2 Bits --------------------------------------------
                      00289 #define P20PU           PUP2,0          /* bit 0 */
                      00290 #define P21PU           PUP2,1          /* bit 1 */
                      00291 #define P22PU           PUP2,2          /* bit 2 */
                      00292 #define P23PU           PUP2,3          /* bit 3 */
                      00293 #define P24PU           PUP2,4          /* bit 4 */
                      00294 #define P25PU           PUP2,5          /* bit 5 */
                      00295 #define P26PU           PUP2,6          /* bit 6 */
                      00296 
                      00297 ; ----- PDP2 Bits --------------------------------------------
                      00298 #define P20PD           PDP2,0          /* bit 0 */
                      00299 #define P21PD               PDP2,1                /* bit 1 */
                      00300 #define P22PD           PDP2,2            /* bit 2 */
                      00301 #define P23PD           PDP2,3            /* bit 3 */
                      00302 #define P24PD           PDP2,4            /* bit 4 */
                      00303 #define P25PD               PDP2,5                /* bit 5 */
                      00304 #define P26PD               PDP2,6                /* bit 6 */
                      00305 
                      00306 ; ----- IOP3 Bits --------------------------------------------
                      00307 #define P30D            IOP3,0          /* bit 0 */
                      00308 #define P31D            IOP3,1          /* bit 1 */
                      00309 #define P32D            IOP3,2          /* bit 2 */
                      00310 #define P33D            IOP3,3          /* bit 3 */
                      00311 #define P34D            IOP3,4          /* bit 4 */
                      00312 #define P35D            IOP3,5          /* bit 5 */
                      00313 #define P36D            IOP3,6          /* bit 6 */
                      00314 #define P37D            IOP3,7          /* bit 7 */
                      00315 
                      00316 ; ----- OEP3 Bits --------------------------------------------
                      00317 #define P30OE           OEP3,0          /* bit 0 */
                      00318 #define P31OE           OEP3,1          /* bit 1 */
                      00319 #define P32OE           OEP3,2          /* bit 2 */
                      00320 #define P33OE           OEP3,3          /* bit 3 */
                      00321 #define P34OE           OEP3,4          /* bit 4 */
                      00322 #define P35OE           OEP3,5          /* bit 5 */
                      00323 #define P36OE           OEP3,6          /* bit 6 */
                      00324 #define P37OE           OEP3,7          /* bit 7 */
                      00325 
                      00326 ; ----- PUP3 Bits --------------------------------------------
                      00327 #define P30PU           PUP3,0          /* bit 0 */
                      00328 #define P31PU           PUP3,1          /* bit 1 */
                      00329 #define P32PU           PUP3,2          /* bit 2 */
                      00330 #define P33PU           PUP3,3          /* bit 3 */
                      00331 #define P34PU           PUP3,4          /* bit 4 */
                      00332 #define P35PU           PUP3,5          /* bit 5 */
                      00333 #define P36PU           PUP3,6          /* bit 6 */
                      00334 #define P37PU           PUP3,7          /* bit 7 */
                      00335 
                      00336 ; ----- PDP3 Bits --------------------------------------------
                      00337 #define P30PD               PDP3,0                /* bit 0 */
                      00338 #define P31PD               PDP3,1                /* bit 1 */
                      00339 #define P32PD               PDP3,2                /* bit 2 */
                      00340 #define P33PD               PDP3,3                /* bit 3 */
                      00341 #define P34PD               PDP3,4                /* bit 4 */
                      00342 #define P35PD               PDP3,5                /* bit 5 */
                      00343 #define P36PD               PDP3,6                /* bit 6 */
                      00344 #define P37PD               PDP3,7                /* bit 7 */
                      00345 
                      00346 ; ----- T0CR Bits --------------------------------------------
                      00347 #define T0PR0           T0CR,0           /* bit 0 */
                      00348 #define T0PR1           T0CR,1           /* bit 1 */
                      00349 #define T0PR2           T0CR,2           /* bit 2 */
                      00350 #define T0PTS0          T0CR,3           /* bit 3 */
                      00351 #define T0PTS1          T0CR,4           /* bit 4 */
                      00352 #define BUZ0OE          T0CR,5           /* bit 5 */
                      00353 #define PWM0OE          T0CR,6           /* bit 6 */
                      00354 #define TC0EN           T0CR,7           /* bit 7 */
                      00355 
                      00356 ; ----- T0CNT Bits --------------------------------------------
                      00357 #define T0C0            T0CNT,0          /* bit 0 */
                      00358 #define T0C1            T0CNT,1          /* bit 1 */
                      00359 #define T0C2            T0CNT,2          /* bit 2 */
                      00360 #define T0C3            T0CNT,3          /* bit 3 */
                      00361 #define T0C4            T0CNT,4          /* bit 4 */
                      00362 #define T0C5            T0CNT,5          /* bit 5 */
                      00363 #define T0C6            T0CNT,6          /* bit 6 */
                      00364 #define T0C7            T0CNT,7          /* bit 7 */
                      00365 
                      00366 ; ----- T0LOAD Bits --------------------------------------------
                      00367 #define T0LOAD0         T0LOAD,0      /* bit 0 */
                      00368 #define T0LOAD1         T0LOAD,1      /* bit 1 */
                      00369 #define T0LOAD2         T0LOAD,2      /* bit 2 */
                      00370 #define T0LOAD3         T0LOAD,3      /* bit 3 */
                      00371 #define T0LOAD4         T0LOAD,4      /* bit 4 */
                      00372 #define T0LOAD5         T0LOAD,5      /* bit 5 */
                      00373 #define T0LOAD6         T0LOAD,6      /* bit 6 */
                      00374 #define T0LOAD7         T0LOAD,7      /* bit 7 */
                      00375 
                      00376 ; ----- T0DATA Bits --------------------------------------------
                      00377 #define T0DATA0         T0DATA,0                /* bit 0 */
                      00378 #define T0DATA1         T0DATA,1          /* bit 1 */
                      00379 #define T0DATA2         T0DATA,2          /* bit 2 */
                      00380 #define T0DATA3         T0DATA,3          /* bit 3 */
                      00381 #define T0DATA4         T0DATA,4          /* bit 4 */
                      00382 #define T0DATA5         T0DATA,5          /* bit 5 */
                      00383 #define T0DATA6         T0DATA,6          /* bit 6 */
                      00384 #define T0DATA7         T0DATA,7          /* bit 7 */
                      00385 
                      00386 ; ----- T1CR Bits --------------------------------------------
                      00387 #define T1PR0               T1CR,0              /* bit 0 */
                      00388 #define T1PR1               T1CR,1              /* bit 1 */
                      00389 #define T1PR2               T1CR,2              /* bit 2 */
                      00390 #define T1PTS0              T1CR,3                  /* bit 3 */
                      00391 #define T1PTS1              T1CR,4                  /* bit 4 */
                      00392 #define BUZ1OE                T1CR,5                  /* bit 5 */
                      00393 #define PWM1OE                T1CR,6                  /* bit 6 */
                      00394 #define TC1EN                 T1CR,7              /* bit 7 */
                      00395 
                      00396 ; ----- T1CNT Bits --------------------------------------------
                      00397 #define T1C0            T1CNT,0          /* bit 0 */
                      00398 #define T1C1            T1CNT,1          /* bit 1 */
                      00399 #define T1C2            T1CNT,2          /* bit 2 */
                      00400 #define T1C3            T1CNT,3          /* bit 3 */
                      00401 #define T1C4            T1CNT,4          /* bit 4 */
                      00402 #define T1C5            T1CNT,5          /* bit 5 */
                      00403 #define T1C6            T1CNT,6          /* bit 6 */
                      00404 #define T1C7            T1CNT,7          /* bit 7 */
                      00405 
                      00406 ; ----- T1LOAD Bits --------------------------------------------
                      00407 #define T1LOAD0           T1LOAD,0              /* bit 0 */
                      00408 #define T1LOAD1           T1LOAD,1              /* bit 1 */
                      00409 #define T1LOAD2             T1LOAD,2              /* bit 2 */
                      00410 #define T1LOAD3             T1LOAD,3              /* bit 3 */
                      00411 #define T1LOAD4             T1LOAD,4              /* bit 4 */
                      00412 #define T1LOAD5             T1LOAD,5              /* bit 5 */
                      00413 #define T1LOAD6             T1LOAD,6              /* bit 6 */
                      00414 #define T1LOAD7             T1LOAD,7              /* bit 7 */
                      00415 
                      00416 ; ----- T1DATA Bits --------------------------------------------
                      00417 #define T1DATA0           T1DATA,0              /* bit 0 */
                      00418 #define T1DATA1           T1DATA,1              /* bit 1 */
                      00419 #define T1DATA2             T1DATA,2              /* bit 2 */
                      00420 #define T1DATA3             T1DATA,3              /* bit 3 */
                      00421 #define T1DATA4             T1DATA,4              /* bit 4 */
                      00422 #define T1DATA5             T1DATA,5              /* bit 5 */
                      00423 #define T1DATA6             T1DATA,6              /* bit 6 */
                      00424 #define T1DATA7             T1DATA,7              /* bit 7 */
                      00425 
                      00426 ; ----- T2CR Bits --------------------------------------------
                      00427 #define T2PR0               T2CR,0              /* bit 0 */
                      00428 #define T2PR1               T2CR,1              /* bit 1 */
                      00429 #define T2PR2               T2CR,2              /* bit 2 */
                      00430 #define T2PTS0              T2CR,3                  /* bit 3 */
                      00431 #define T2PTS1              T2CR,4                  /* bit 4 */
                      00432 #define T2MODE                T2CR,5                  /* bit 5 */
                      00433 #define TC2EN                 T2CR,7              /* bit 7 */
                      00434 
                      00435 ; ----- T2CNTH Bits --------------------------------------------
                      00436 #define T2C8            T2CNTH,0           /* bit 0 */
                      00437 #define T2C9            T2CNTH,1           /* bit 1 */
                      00438 #define T2C10           T2CNTH,2           /* bit 2 */
                      00439 #define T2C11           T2CNTH,3           /* bit 3 */
                      00440 #define T2C12           T2CNTH,4           /* bit 4 */
                      00441 #define T2C13           T2CNTH,5           /* bit 5 */
                      00442 #define T2C14           T2CNTH,6           /* bit 6 */
                      00443 #define T2C15           T2CNTH,7           /* bit 7 */
                      00444 
                      00445 ; ----- T2CNTL Bits --------------------------------------------
                      00446 #define T2C0            T2CNTL,0         /* bit 0 */
                      00447 #define T2C1            T2CNTL,1         /* bit 1 */
                      00448 #define T2C2            T2CNTL,2         /* bit 2 */
                      00449 #define T2C3            T2CNTL,3         /* bit 3 */
                      00450 #define T2C4            T2CNTL,4         /* bit 4 */
                      00451 #define T2C5            T2CNTL,5         /* bit 5 */
                      00452 #define T2C6            T2CNTL,6         /* bit 6 */
                      00453 #define T2C7            T2CNTL,7         /* bit 7 */
                      00454 
                      00455 ; ----- T2LOADH Bits --------------------------------------------
                      00456 #define T2LOAD8           T2LOADH,0             /* bit 0 */
                      00457 #define T2LOAD9           T2LOADH,1               /* bit 1 */
                      00458 #define T2LOAD10        T2LOADH,2         /* bit 2 */
                      00459 #define T2LOAD11          T2LOADH,3               /* bit 3 */
                      00460 #define T2LOAD12          T2LOADH,4               /* bit 4 */
                      00461 #define T2LOAD13          T2LOADH,5               /* bit 5 */
                      00462 #define T2LOAD14          T2LOADH,6               /* bit 6 */
                      00463 #define T2LOAD15          T2LOADH,7               /* bit 7 */
                      00464 
                      00465 ; ----- T2LOADL Bits --------------------------------------------
                      00466 #define T2LOAD0           T2LOADL,0             /* bit 0 */
                      00467 #define T2LOAD1           T2LOADL,1               /* bit 1 */
                      00468 #define T2LOAD2             T2LOADL,2             /* bit 2 */
                      00469 #define T2LOAD3             T2LOADL,3             /* bit 3 */
                      00470 #define T2LOAD4             T2LOADL,4             /* bit 4 */
                      00471 #define T2LOAD5             T2LOADL,5             /* bit 5 */
                      00472 #define T2LOAD6             T2LOADL,6             /* bit 6 */
                      00473 #define T2LOAD7             T2LOADL,7             /* bit 7 */
                      00474 
                      00475 ; ----- TK0CR0 Bits --------------------------------------------
                      00476 #define TK0FQ0              TK0CR0,0              /* bit 0 */
                      00477 #define TK0FQ1              TK0CR0,1              /* bit 1 */
                      00478 #define TK0FQ2              TK0CR0,2              /* bit 2 */
                      00479 #define TK0CLR            TK0CR0,3                /* bit 3 */
                      00480 #define TK0RCE              TK0CR0,4                /* bit 4 */
                      00481 #define TK0JE               TK0CR0,5              /* bit 5 */
                      00482 
                      00483 ; ---- TK0CR1 Bits ----------------------------------------------
                      00484 #define TK0K0           TK0CR1,0            /* bit 0 */
                      00485 #define TK0K1           TK0CR1,1            /* bit 1 */
                      00486 #define TK0K2           TK0CR1,2            /* bit 2 */
                      00487 #define TK0FL0          TK0CR1,4            /* bit 4 */
                      00488 #define TK0FL1          TK0CR1,5            /* bit 5 */
                      00489 #define TK0IE           TK0CR1,6           /* bit 6 */
                      00490 #define TK0IF           TK0CR1,7           /* bit 7 */
                      00491 
                      00492 ; ---- TK0CR2 Bits ----------------------------------------------
                      00493 #define TK0IO0          TK0CR2,0          /* bit 0 */
                      00494 #define TK0IO1          TK0CR2,1          /* bit 1 */
                      00495 #define TK0IO2          TK0CR2,2          /* bit 2 */
                      00496 #define TK0IO3          TK0CR2,3          /* bit 3 */
                      00497 #define TK0IO4          TK0CR2,4          /* bit 4 */
                      00498 #define TK0IO5          TK0CR2,5          /* bit 5 */
                      00499 #define TK0IO6          TK0CR2,6          /* bit 6 */
                      00500 #define TK0IO7          TK0CR2,7          /* bit 7 */
                      00501 
                      00502 ; ---- TK0CNTH Bits ----------------------------------------------
                      00503 #define TK0C8           TK0CNTH,0         /* bit 0 */
                      00504 #define TK0C9           TK0CNTH,1         /* bit 1 */
                      00505 #define TK0C10          TK0CNTH,2         /* bit 2 */
                      00506 #define TK0C11          TK0CNTH,3         /* bit 3 */
                      00507 #define TK0C12          TK0CNTH,4         /* bit 4 */
                      00508 #define TK0C13          TK0CNTH,5         /* bit 5 */
                      00509 #define TK0C14          TK0CNTH,6         /* bit 6 */
                      00510 #define TK0C15          TK0CNTH,7         /* bit 7 */
                      00511 
                      00512 ; ----- TK0CNTL Bits --------------------------------------------
                      00513 #define TK0C0               TK0CNTL,0            /* bit 0 */
                      00514 #define TK0C1               TK0CNTL,1              /* bit 1 */
                      00515 #define TK0C2               TK0CNTL,2              /* bit 2 */
                      00516 #define TK0C3                 TK0CNTL,3            /* bit 3 */
                      00517 #define TK0C4               TK0CNTL,4              /* bit 4 */
                      00518 #define TK0C5                 TK0CNTL,5            /* bit 5 */
                      00519 #define TK0C6                 TK0CNTL,6            /* bit 6 */
                      00520 #define TK0C7                 TK0CNTL,7            /* bit 7 */
                      00521 
                      00522 ; ----- TK1CR0 Bits --------------------------------------------
                      00523 #define TK1FQ0              TK1CR0,0              /* bit 0 */
                      00524 #define TK1FQ1              TK1CR0,1              /* bit 1 */
                      00525 #define TK1FQ2              TK1CR0,2              /* bit 2 */
                      00526 #define TK1CLR            TK1CR0,3                /* bit 3 */
                      00527 #define TK1RCE              TK1CR0,4                /* bit 4 */
                      00528 #define TK1JE               TK1CR0,5              /* bit 5 */
                      00529 
                      00530 ; ---- TK1CR1 Bits ----------------------------------------------
                      00531 #define TK1K0           TK0CR1,0            /* bit 0 */
                      00532 #define TK1K1           TK0CR1,1            /* bit 1 */
                      00533 #define TK1K2           TK0CR1,2            /* bit 2 */
                      00534 #define TK1FL0          TK0CR1,4            /* bit 4 */
                      00535 #define TK1FL1          TK0CR1,5            /* bit 5 */
                      00536 #define TK1IE           TK0CR1,6            /* bit 6 */
                      00537 #define TK1IF           TK0CR1,7            /* bit 7 */
                      00538 
                      00539 ; ---- TK1CR2 Bits ----------------------------------------------
                      00540 #define TK1IO0          TK1CR2,0          /* bit 0 */
                      00541 #define TK1IO1          TK1CR2,1          /* bit 1 */
                      00542 #define TK1IO2          TK1CR2,2          /* bit 2 */
                      00543 #define TK1IO3          TK1CR2,3          /* bit 3 */
                      00544 #define TK1IO4          TK1CR2,4          /* bit 4 */
                      00545 #define TK1IO5          TK1CR2,5          /* bit 5 */
                      00546 #define TK1IO6          TK1CR2,6          /* bit 6 */
                      00547 #define TK1IO7          TK1CR2,7          /* bit 7 */
                      00548 
                      00549 ; ---- TK1CNTH Bits ----------------------------------------------
                      00550 #define TK1C8           TK1CNTH,0          /* bit 0 */
                      00551 #define TK1C9           TK1CNTH,1          /* bit 1 */
                      00552 #define TK1C10          TK1CNTH,2          /* bit 2 */
                      00553 #define TK1C11          TK1CNTH,3          /* bit 3 */
                      00554 #define TK1C12          TK1CNTH,4          /* bit 4 */
                      00555 #define TK1C13          TK1CNTH,5          /* bit 5 */
                      00556 #define TK1C14          TK1CNTH,6          /* bit 6 */
                      00557 #define TK1C15          TK1CNTH,7          /* bit 7 */
                      00558 
                      00559 ; ----- TK1CNTL Bits --------------------------------------------
                      00560 #define TK1C0               TK1CNTL,0            /* bit 0 */
                      00561 #define TK1C1               TK1CNTL,1              /* bit 1 */
                      00562 #define TK1C2               TK1CNTL,2              /* bit 2 */
                      00563 #define TK1C3                 TK1CNTL,3            /* bit 3 */
                      00564 #define TK1C4               TK1CNTL,4              /* bit 4 */
                      00565 #define TK1C5                 TK1CNTL,5            /* bit 5 */
                      00566 #define TK1C6                 TK1CNTL,6            /* bit 6 */
                      00567 #define TK1C7                 TK1CNTL,7            /* bit 7 */
                      00568 
                      00569 ; ----- ADCR0 Bits --------------------------------------------
                      00570 #define ADON            ADCR0,0              /* bit 0 */
                      00571 #define ADEOC           ADCR0,1                /* bit 1 */
                      00572 #define ADCHS0          ADCR0,3                  /* bit 3 */
                      00573 #define ADCHS1          ADCR0,4                  /* bit 4 */
                      00574 #define ADCHS2          ADCR0,5                  /* bit 5 */
                      00575 #define ADCHS3          ADCR0,6                  /* bit 6 */
                      00576 #define ADCHS4          ADCR0,7                  /* bit 7 */
                      00577 
                      00578 ; ----- ADCR1 Bits --------------------------------------------
                      00579 #define VREFP_PHEN          ADCR1,0        /* bit 0 */
                      00580 #define ADCKS0              ADCR1,1                  /* bit 1 */
                      00581 #define ADCKS1              ADCR1,2                  /* bit 2 */
                      00582 #define ADREF0              ADCR1,3                  /* bit 3 */
                      00583 #define ADREF1              ADCR1,4                  /* bit 4 */
                      00584 #define ADREF2              ADCR1,5                  /* bit 5 */
                      00585 #define ADREF3              ADCR1,6                  /* bit 6 */
                      00586 #define ADTEN                 ADCR1,7                /* bit 7 */
                      00587 
                      00588 ; ----- ADCR2 Bits --------------------------------------------
                      00589 #define ADSMP0          ADCR2,0                /* bit 0 */
                      00590 #define ADSMP1          ADCR2,1                /* bit 1 */
                      00591 #define ADSMP2          ADCR2,2                /* bit 2 */
                      00592 #define ADSMP3          ADCR2,3                /* bit 3 */
                      00593 
                      00594 ; ---- ADIO0 Bits ----------------------------------------------
                      00595 #define ADIOS0          ADIO0,0          /* bit 0 */
                      00596 #define ADIOS1          ADIO0,1          /* bit 1 */
                      00597 #define ADIOS2          ADIO0,2          /* bit 2 */
                      00598 #define ADIOS3          ADIO0,3          /* bit 3 */
                      00599 #define ADIOS4          ADIO0,4          /* bit 4 */
                      00600 #define ADIOS5          ADIO0,5          /* bit 5 */
                      00601 #define ADIOS6          ADIO0,6          /* bit 6 */
                      00602 #define ADIOS7          ADIO0,7          /* bit 7 */
                      00603 
                      00604 ; ---- ADIO1 Bits ----------------------------------------------
                      00605 #define ADIOS8          ADIO1,0         /* bit 0 */
                      00606 #define ADIOS9          ADIO1,1         /* bit 1 */
                      00607 #define ADIOS10         ADIO1,2         /* bit 2 */
                      00608 #define ADIOS11         ADIO1,3         /* bit 3 */
                      00609 #define ADIOS12         ADIO1,4         /* bit 4 */
                      00610 #define ADIOS13         ADIO1,5         /* bit 5 */
                      00611 #define ADIOS14         ADIO1,6         /* bit 6 */
                      00612 #define ADIOS15         ADIO1,7         /* bit 7 */
                      00613 
                      00614 ; ---- ADRH Bits ----------------------------------------------
                      00615 #define ADR4            ADRH,0           /* bit 0 */
                      00616 #define ADR5            ADRH,1           /* bit 1 */
                      00617 #define ADR6            ADRH,2           /* bit 2 */
                      00618 #define ADR7            ADRH,3           /* bit 3 */
                      00619 #define ADR8            ADRH,4           /* bit 4 */
                      00620 #define ADR9            ADRH,5           /* bit 5 */
                      00621 #define ADR10           ADRH,6           /* bit 6 */
                      00622 #define ADR11           ADRH,7           /* bit 7 */
                      00623 
                      00624 ; ---- ADRL Bits ----------------------------------------------
                      00625 #define ADR0            ADRL,0           /* bit 0 */
                      00626 #define ADR1            ADRL,1           /* bit 1 */
                      00627 #define ADR2            ADRL,2           /* bit 2 */
                      00628 #define ADR3            ADRL,3           /* bit 3 */
                      00629 
                      00630 ; ---- LEDCR0 Bits ----------------------------------------------
                      00631 #define GYS0            LEDCR0,0         /* bit 0 */
                      00632 #define GYS1            LEDCR0,1         /* bit 1 */
                      00633 #define GYS2            LEDCR0,2         /* bit 2 */
                      00634 #define DUTY            LEDCR0,6         /* bit 6 */
                      00635 #define LEDEN           LEDCR0,7         /* bit 7 */
                      00636 
                      00637 ; ---- LEDCR1 Bits ----------------------------------------------
                      00638 #define FLED0           LEDCR1,0         /* bit 0 */
                      00639 #define FLED1           LEDCR1,1         /* bit 1 */
                      00640 #define IREFEN          LEDCR1,2         /* bit 2 */
                      00641 #define IBPS0           LEDCR1,3         /* bit 3 */
                      00642 #define IBPS1           LEDCR1,4         /* bit 4 */
                      00643 #define CLKS0           LEDCR1,5         /* bit 5 */
                      00644 #define CLKS1           LEDCR1,6         /* bit 6 */
                      00645 #define DRVPS           LEDCR1,7         /* bit 7 */
                      00646 
                      00647 ; ---- LEDIOS0 Bits ----------------------------------------------
                      00648 #define COMIOS1          LEDIOS0,0          /* bit 0 */
                      00649 #define COMIOS2          LEDIOS0,1          /* bit 1 */
                      00650 #define COMIOS3          LEDIOS0,2          /* bit 2 */
                      00651 #define COMIOS4          LEDIOS0,3          /* bit 3 */
                      00652 #define COMIOS5          LEDIOS0,4          /* bit 4 */
                      00653 #define COMIOS6          LEDIOS0,5          /* bit 5 */
                      00654 #define COMIOS7          LEDIOS0,6          /* bit 6 */
                      00655 #define COMIOS8          LEDIOS0,7          /* bit 7 */
                      00656 
                      00657 ; ---- LEDIOS1 Bits ----------------------------------------------
                      00658 #define SEGIOS1          LEDIOS1,0          /* bit 0 */
                      00659 #define SEGIOS2          LEDIOS1,1          /* bit 1 */
                      00660 #define SEGIOS3          LEDIOS1,2          /* bit 2 */
                      00661 #define SEGIOS4          LEDIOS1,3          /* bit 3 */
                      00662 #define SEGIOS5          LEDIOS1,4          /* bit 4 */
                      00663 #define SEGIOS6          LEDIOS1,5          /* bit 5 */
                      00664 #define SEGIOS7          LEDIOS1,6          /* bit 6 */
                      00665 #define SEGIOS8          LEDIOS1,7          /* bit 7 */
                      00666 
                      00667 ; ---- LEDDRV Bits ----------------------------------------------
                      00668 #define COMDV1          LEDDRV,0          /* bit 0 */
                      00669 #define COMDV2          LEDDRV,1          /* bit 1 */
                      00670 #define COMDV3          LEDDRV,2          /* bit 2 */
                      00671 #define COMDV4          LEDDRV,3          /* bit 3 */
                      00672 #define COMDV5          LEDDRV,4          /* bit 4 */
                      00673 #define COMDV6          LEDDRV,5          /* bit 5 */
                      00674 #define COMDV7          LEDDRV,6          /* bit 6 */
                      00675 #define COMDV8          LEDDRV,7          /* bit 7 */
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015         extern  ___uchar2fs
                      00016         extern  ___schar2fs
                      00017         extern  ___uint2fs
                      00018         extern  ___sint2fs
                      00019         extern  ___ulong2fs
                      00020         extern  ___slong2fs
                      00021         extern  ___fs2uchar
                      00022         extern  ___fs2schar
                      00023         extern  ___fs2uint
                      00024         extern  ___fs2sint
                      00025         extern  ___fs2ulong
                      00026         extern  ___fs2slong
                      00027         extern  ___fsadd
                      00028         extern  ___fssub
                      00029         extern  ___fsdiv
                      00030         extern  ___fslt
                      00031         extern  ___fseq
                      00032         extern  ___fsneq
                      00033         extern  ___fsgt
                      00034         extern  __mullong
                      00035 
                      00036         extern STK06
                      00037         extern STK05
                      00038         extern STK04
                      00039         extern STK03
                      00040         extern STK02
                      00041         extern STK01
                      00042         extern STK00
                      00043 ;--------------------------------------------------------
                      00044 ; global declarations
                      00045 ;--------------------------------------------------------
                      00046         global  ___fsmul
                      00047 
                      00048 ;--------------------------------------------------------
                      00049 ; global definitions
                      00050 ;--------------------------------------------------------
                      00051 ;--------------------------------------------------------
                      00052 ; absolute symbol definitions
                      00053 ;--------------------------------------------------------
                      00054 ;--------------------------------------------------------
                      00055 ; compiler-defined variables
                      00056 ;--------------------------------------------------------
                      00057 UDL_fsmul_0     udata
0000                  00058 r0x100B res     1
0000                  00059 r0x100A res     1
0001                  00060 r0x1009 res     1
0001                  00061 r0x1008 res     1
0002                  00062 r0x100F res     1
0002                  00063 r0x100E res     1
0003                  00064 r0x100D res     1
0003                  00065 r0x100C res     1
0004                  00066 r0x1010 res     1
0004                  00067 r0x1011 res     1
0005                  00068 r0x1012 res     1
0005                  00069 r0x1013 res     1
0006                  00070 r0x1014 res     1
0006                  00071 r0x1015 res     1
0007                  00072 r0x1016 res     1
0007                  00073 r0x1017 res     1
0008                  00074 r0x1018 res     1
0008                  00075 r0x1019 res     1
0009                  00076 r0x101A res     1
0009                  00077 ___fsmul_fl1_1_22       res     4
000B                  00078 ___fsmul_fl2_1_22       res     4
                      00079 ;--------------------------------------------------------
                      00080 ; initialized data
                      00081 ;--------------------------------------------------------
                      00082 ;--------------------------------------------------------
                      00083 ; overlayable items in internal ram 
                      00084 ;--------------------------------------------------------
                      00085 ;       udata_ovr
                      00086 ;--------------------------------------------------------
                      00087 ; code
                      00088 ;--------------------------------------------------------
                      00089 code_fsmul      code
                      00090 ;***
                      00091 ;  pBlock Stats: dbName = C
                      00092 ;***
                      00093 ;entry:  ___fsmul       ;Function start
                      00094 ; 2 exit points
                      00095 ;has an exit
                      00096 ;functions called:
                      00097 ;   __mullong
                      00098 ;   __mullong
                      00099 ;   __mullong
                      00100 ;   __mullong
                      00101 ;   __mullong
                      00102 ;   __mullong
                      00103 ;26 compiler assigned registers:
                      00104 ;   r0x1008
                      00105 ;   STK00
                      00106 ;   r0x1009
                      00107 ;   STK01
                      00108 ;   r0x100A
                      00109 ;   STK02
                      00110 ;   r0x100B
                      00111 ;   STK03
                      00112 ;   r0x100C
                      00113 ;   STK04
                      00114 ;   r0x100D
                      00115 ;   STK05
                      00116 ;   r0x100E
                      00117 ;   STK06
                      00118 ;   r0x100F
                      00119 ;   r0x1010
                      00120 ;   r0x1011
                      00121 ;   r0x1012
                      00122 ;   r0x1013
                      00123 ;   r0x1014
                      00124 ;   r0x1015
                      00125 ;   r0x1016
                      00126 ;   r0x1017
                      00127 ;   r0x1018
                      00128 ;   r0x1019
                      00129 ;   r0x101A
                      00130 ;; Starting pCode block
                      00131 ;;[ICODE] ../libsdcc/fsmul.c:55:  _entry($14) :
                      00132 ;;[ICODE] ../libsdcc/fsmul.c:55:        proc ___fsmul [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0000                  00133 ___fsmul        ;Function start
                      00134 ; 2 exit points
                      00135 ;;[ICODE] ../libsdcc/fsmul.c:55: iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsmul_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ] = recv ___fsmul [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
                      00136 ;       .line   55; "../libsdcc/fsmul.c"        float __fsmul (float a1, float a2) _FS_REENTRANT
0000   5600           00137         MOVRA   r0x1008
0001   5800           00138         MOVAR   STK00
0002   5600           00139         MOVRA   r0x1009
0003   5800           00140         MOVAR   STK01
0004   5600           00141         MOVRA   r0x100A
0005   5800           00142         MOVAR   STK02
0006   5600           00143         MOVRA   (___fsmul_fl1_1_22 + 0)
0007   5600           00144         MOVRA   r0x100B
                      00145 ;;[ICODE] ../libsdcc/fsmul.c:55: iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsmul_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ] = recv ___fsmul [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0008   5800           00146         MOVAR   STK03
0009   5600           00147         MOVRA   r0x100C
000A   5800           00148         MOVAR   STK04
000B   5600           00149         MOVRA   r0x100D
000C   5800           00150         MOVAR   STK05
000D   5600           00151         MOVRA   r0x100E
000E   5800           00152         MOVAR   STK06
000F   5600           00153         MOVRA   (___fsmul_fl2_1_22 + 0)
0010   5600           00154         MOVRA   r0x100F
                      00155 ;;[ICODE] ../libsdcc/fsmul.c:62:        iTemp2 [k7 lr5:6 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00156 ;;[ICODE] ../libsdcc/fsmul.c:62:        *(iTemp2 [k7 lr5:6 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsmul_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00157 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
                      00158 ;;99    MOVAR   r0x100B
                      00159 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
                      00160 ;       .line   62; "../libsdcc/fsmul.c"        fl1.f = a1;
0011   5800           00161         MOVAR   r0x100A
0012   5600           00162         MOVRA   (___fsmul_fl1_1_22 + 1)
                      00163 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
0013   5800           00164         MOVAR   r0x1009
0014   5600           00165         MOVRA   (___fsmul_fl1_1_22 + 2)
                      00166 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
0015   5800           00167         MOVAR   r0x1008
0016   5600           00168         MOVRA   (___fsmul_fl1_1_22 + 3)
                      00169 ;;[ICODE] ../libsdcc/fsmul.c:63:        iTemp4 [k11 lr7:8 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00170 ;;[ICODE] ../libsdcc/fsmul.c:63:        *(iTemp4 [k11 lr7:8 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsmul_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ]
                      00171 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
                      00172 ;;125   MOVAR   r0x100F
                      00173 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
                      00174 ;       .line   63; "../libsdcc/fsmul.c"        fl2.f = a2;
0017   5800           00175         MOVAR   r0x100E
0018   5600           00176         MOVRA   (___fsmul_fl2_1_22 + 1)
                      00177 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
0019   5800           00178         MOVAR   r0x100D
001A   5600           00179         MOVRA   (___fsmul_fl2_1_22 + 2)
                      00180 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
001B   5800           00181         MOVAR   r0x100C
001C   5600           00182         MOVRA   (___fsmul_fl2_1_22 + 3)
                      00183 ;;[ICODE] ../libsdcc/fsmul.c:65:        iTemp6 [k14 lr9:10 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00184 ;;[ICODE] ../libsdcc/fsmul.c:65:        iTemp8 [k17 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp6 [k14 lr9:10 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00185 ;       .line   65; "../libsdcc/fsmul.c"        if (!fl1.l || !fl2.l)
001D   5800           00186         MOVAR   (___fsmul_fl1_1_22 + 0)
001E   5600           00187         MOVRA   r0x100B
001F   5800           00188         MOVAR   (___fsmul_fl1_1_22 + 1)
0020   5600           00189         MOVRA   r0x100A
0021   5800           00190         MOVAR   (___fsmul_fl1_1_22 + 2)
0022   5600           00191         MOVRA   r0x1009
0023   5800           00192         MOVAR   (___fsmul_fl1_1_22 + 3)
0024   5600           00193         MOVRA   r0x1008
                      00194 ;;[ICODE] ../libsdcc/fsmul.c:65:        if iTemp8 [k17 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] == 0 goto _iftrue_0($1)
0025   5800           00195         MOVAR   r0x100B
0026   5C00           00196         ORAR    r0x100A
0027   5C00           00197         ORAR    r0x1009
0028   5C00           00198         ORAR    r0x1008
0029   F5A7           00199         JBCLR   STATUS,2
002A   A000           00200         GOTO    _00105_DS_
                      00201 ;;[ICODE] ../libsdcc/fsmul.c:65:        iTemp9 [k18 lr12:13 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00202 ;;[ICODE] ../libsdcc/fsmul.c:65:        iTemp11 [k21 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp9 [k18 lr12:13 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
002B   5800           00203         MOVAR   (___fsmul_fl2_1_22 + 0)
002C   5600           00204         MOVRA   r0x100B
002D   5800           00205         MOVAR   (___fsmul_fl2_1_22 + 1)
002E   5600           00206         MOVRA   r0x100A
002F   5800           00207         MOVAR   (___fsmul_fl2_1_22 + 2)
0030   5600           00208         MOVRA   r0x1009
0031   5800           00209         MOVAR   (___fsmul_fl2_1_22 + 3)
0032   5600           00210         MOVRA   r0x1008
                      00211 ;;[ICODE] ../libsdcc/fsmul.c:65:        if iTemp11 [k21 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] != 0 goto _iffalse_0($2)
0033   5800           00212         MOVAR   r0x100B
0034   5C00           00213         ORAR    r0x100A
0035   5C00           00214         ORAR    r0x1009
0036   5C00           00215         ORAR    r0x1008
0037   E5A7           00216         JBSET   STATUS,2
0038   A000           00217         GOTO    _00106_DS_
                      00218 ;;[ICODE] ../libsdcc/fsmul.c:65:  _iftrue_0($1) :
                      00219 ;;[ICODE] ../libsdcc/fsmul.c:66:        ret 0 {float literal}
0039                  00220 _00105_DS_
                      00221 ;       .line   66; "../libsdcc/fsmul.c"        return (0);
0039   3C00           00222         MOVAI   0x00
003A   5600           00223         MOVRA   STK02
003B   3C00           00224         MOVAI   0x00
003C   5600           00225         MOVRA   STK01
003D   3C00           00226         MOVAI   0x00
003E   5600           00227         MOVRA   STK00
003F   3C00           00228         MOVAI   0x00
0040   A000           00229         GOTO    _00117_DS_
                      00230 ;;[ICODE] ../libsdcc/fsmul.c:66:  _iffalse_0($2) :
                      00231 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp13 [k24 lr18:19 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00232 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp15 [k27 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp13 [k24 lr18:19 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0041                  00233 _00106_DS_
                      00234 ;       .line   69; "../libsdcc/fsmul.c"        sign = SIGN (fl1.l) ^ SIGN (fl2.l);
0041   5800           00235         MOVAR   (___fsmul_fl1_1_22 + 0)
0042   5600           00236         MOVRA   r0x100B
0043   5800           00237         MOVAR   (___fsmul_fl1_1_22 + 1)
0044   5600           00238         MOVRA   r0x100A
0045   5800           00239         MOVAR   (___fsmul_fl1_1_22 + 2)
0046   5600           00240         MOVRA   r0x1009
0047   5800           00241         MOVAR   (___fsmul_fl1_1_22 + 3)
0048   5600           00242         MOVRA   r0x1008
                      00243 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp16 [k28 lr20:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1004 ] = gabit iTemp15 [k27 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0049   5800           00244         MOVAR   r0x1008
004A   3E80           00245         ANDAI   0x80
004B   E5A7           00246         JBSET   STATUS,2
004C   3C01           00247         MOVAI   0x01
004D   5600           00248         MOVRA   r0x100F
                      00249 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp17 [k29 lr21:22 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00250 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp19 [k32 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp17 [k29 lr21:22 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
004E   5800           00251         MOVAR   (___fsmul_fl2_1_22 + 0)
004F   5600           00252         MOVRA   r0x100B
0050   5800           00253         MOVAR   (___fsmul_fl2_1_22 + 1)
0051   5600           00254         MOVRA   r0x100A
0052   5800           00255         MOVAR   (___fsmul_fl2_1_22 + 2)
0053   5600           00256         MOVRA   r0x1009
0054   5800           00257         MOVAR   (___fsmul_fl2_1_22 + 3)
0055   5600           00258         MOVRA   r0x1008
                      00259 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp20 [k33 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1005 ] = gabit iTemp19 [k32 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0056   5800           00260         MOVAR   r0x1008
0057   3E80           00261         ANDAI   0x80
0058   E5A7           00262         JBSET   STATUS,2
0059   3C01           00263         MOVAI   0x01
005A   5600           00264         MOVRA   r0x100E
                      00265 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp12 [k22 lr24:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ ___fsmul_sign_1_22}[r0x1000 ] = iTemp16 [k28 lr20:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1004 ] ^ iTemp20 [k33 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1005 ]
005B   5800           00266         MOVAR   r0x100E
005C   4000           00267         XORAR   r0x100F
005D   5600           00268         MOVRA   r0x100B
                      00269 ;;[ICODE] ../libsdcc/fsmul.c:70:        iTemp23 [k37 lr26:27 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00270 ;;[ICODE] ../libsdcc/fsmul.c:70:        iTemp25 [k40 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp23 [k37 lr26:27 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00271 ;       .line   70; "../libsdcc/fsmul.c"        exp = EXP (fl1.l) - EXCESS;
005E   5800           00272         MOVAR   (___fsmul_fl1_1_22 + 0)
005F   5600           00273         MOVRA   r0x100A
0060   5800           00274         MOVAR   (___fsmul_fl1_1_22 + 1)
0061   5600           00275         MOVRA   r0x1009
0062   5800           00276         MOVAR   (___fsmul_fl1_1_22 + 2)
0063   5600           00277         MOVRA   r0x1008
0064   5800           00278         MOVAR   (___fsmul_fl1_1_22 + 3)
0065   5600           00279         MOVRA   r0x100F
                      00280 ;;[ICODE] ../libsdcc/fsmul.c:70:        iTemp26 [k41 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1005 r0x1006 r0x1007 r0x1008 ] = iTemp25 [k40 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x17 {const-unsigned-char literal}
0066   5000           00281         RLAR    r0x1008
0067   5000           00282         RLAR    r0x100F
0068   5600           00283         MOVRA   r0x100A
0069   5600           00284         MOVRA   r0x100E
006A   7600           00285         CLRR    r0x100D
006B   5200           00286         RLR     r0x100D
006C   7600           00287         CLRR    r0x100C
006D   7600           00288         CLRR    r0x1010
                      00289 ;;[ICODE] ../libsdcc/fsmul.c:70:        iTemp27 [k42 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp26 [k41 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1005 r0x1006 r0x1007 r0x1008 ] & 0xff {unsigned-long-int literal}
                      00290 ;;103   MOVAR   r0x100E
006E   7600           00291         CLRR    r0x1009
006F   7600           00292         CLRR    r0x1008
0070   7600           00293         CLRR    r0x100F
                      00294 ;;[ICODE] ../libsdcc/fsmul.c:70:        iTemp28 [k43 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp27 [k42 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] - 0x7e {unsigned-long-int literal}
0071   3C82           00295         MOVAI   0x82
0072   7E00           00296         ADDRA   r0x100A
0073   3CFF           00297         MOVAI   0xff
0074   E1A7           00298         JBSET   STATUS,0
0075   7E00           00299         ADDRA   r0x1009
0076   3CFF           00300         MOVAI   0xff
0077   E1A7           00301         JBSET   STATUS,0
0078   7E00           00302         ADDRA   r0x1008
0079   3CFF           00303         MOVAI   0xff
007A   E1A7           00304         JBSET   STATUS,0
007B   7E00           00305         ADDRA   r0x100F
                      00306 ;;[ICODE] ../libsdcc/fsmul.c:70:        iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] = (int fixed)iTemp28 [k43 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ]
007C   5800           00307         MOVAR   r0x100A
007D   5600           00308         MOVRA   r0x100E
007E   5800           00309         MOVAR   r0x1009
007F   5600           00310         MOVRA   r0x100D
                      00311 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp30 [k45 lr33:34 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00312 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp32 [k48 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp30 [k45 lr33:34 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00313 ;       .line   71; "../libsdcc/fsmul.c"        exp += EXP (fl2.l);
0080   5800           00314         MOVAR   (___fsmul_fl2_1_22 + 0)
0081   5600           00315         MOVRA   r0x100A
0082   5800           00316         MOVAR   (___fsmul_fl2_1_22 + 1)
0083   5600           00317         MOVRA   r0x1009
0084   5800           00318         MOVAR   (___fsmul_fl2_1_22 + 2)
0085   5600           00319         MOVRA   r0x1008
0086   5800           00320         MOVAR   (___fsmul_fl2_1_22 + 3)
0087   5600           00321         MOVRA   r0x100F
                      00322 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp33 [k49 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp32 [k48 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x17 {const-unsigned-char literal}
0088   5000           00323         RLAR    r0x1008
0089   5000           00324         RLAR    r0x100F
008A   5600           00325         MOVRA   r0x100A
008B   5600           00326         MOVRA   r0x100C
008C   7600           00327         CLRR    r0x1010
008D   5200           00328         RLR     r0x1010
008E   7600           00329         CLRR    r0x1011
008F   7600           00330         CLRR    r0x1012
                      00331 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp34 [k50 lr36:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp33 [k49 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] & 0xff {unsigned-long-int literal}
                      00332 ;;104   MOVAR   r0x100C
0090   7600           00333         CLRR    r0x1009
0091   7600           00334         CLRR    r0x1008
0092   7600           00335         CLRR    r0x100F
                      00336 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp35 [k51 lr37:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = (unsigned-long-int fixed)iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ]
0093   5800           00337         MOVAR   r0x100E
0094   5600           00338         MOVRA   r0x100C
0095   5800           00339         MOVAR   r0x100D
0096   5600           00340         MOVRA   r0x1010
0097   3C00           00341         MOVAI   0x00
0098   FE00           00342         JBCLR   r0x1010,7
0099   3CFF           00343         MOVAI   0xff
009A   5600           00344         MOVRA   r0x1012
009B   5600           00345         MOVRA   r0x1011
                      00346 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp36 [k52 lr38:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp35 [k51 lr37:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] + iTemp34 [k50 lr36:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ]
009C   5800           00347         MOVAR   r0x100A
009D   7C00           00348         ADDAR   r0x100C
009E   5600           00349         MOVRA   r0x100A
009F   5800           00350         MOVAR   r0x1010
00A0   F1A7           00351         JBCLR   STATUS,0
00A1   6000           00352         JZAR    r0x1010
00A2   7E00           00353         ADDRA   r0x1009
00A3   5800           00354         MOVAR   r0x1011
00A4   F1A7           00355         JBCLR   STATUS,0
00A5   6000           00356         JZAR    r0x1011
00A6   7E00           00357         ADDRA   r0x1008
00A7   5800           00358         MOVAR   r0x1012
00A8   F1A7           00359         JBCLR   STATUS,0
00A9   6000           00360         JZAR    r0x1012
00AA   7E00           00361         ADDRA   r0x100F
                      00362 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] = (int fixed)iTemp36 [k52 lr38:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ]
00AB   5800           00363         MOVAR   r0x100A
00AC   5600           00364         MOVRA   r0x100E
00AD   5800           00365         MOVAR   r0x1009
00AE   5600           00366         MOVRA   r0x100D
                      00367 ;;[ICODE] ../libsdcc/fsmul.c:73:        iTemp38 [k54 lr41:46 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00368 ;;[ICODE] ../libsdcc/fsmul.c:73:        iTemp40 [k57 lr42:43 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00369 ;;[ICODE] ../libsdcc/fsmul.c:73:        iTemp42 [k60 lr43:44 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp40 [k57 lr42:43 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00370 ;       .line   73; "../libsdcc/fsmul.c"        fl1.l = MANT (fl1.l);
00AF   5800           00371         MOVAR   (___fsmul_fl1_1_22 + 0)
00B0   5600           00372         MOVRA   r0x100A
00B1   5800           00373         MOVAR   (___fsmul_fl1_1_22 + 1)
00B2   5600           00374         MOVRA   r0x1009
00B3   5800           00375         MOVAR   (___fsmul_fl1_1_22 + 2)
00B4   5600           00376         MOVRA   r0x1008
00B5   5800           00377         MOVAR   (___fsmul_fl1_1_22 + 3)
00B6   5600           00378         MOVRA   r0x100F
                      00379 ;;[ICODE] ../libsdcc/fsmul.c:73:        iTemp43 [k61 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp42 [k60 lr43:44 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] & 0x7fffff {unsigned-long-int literal}
00B7   DE00           00380         BCLR    r0x1008,7
00B8   7600           00381         CLRR    r0x100F
                      00382 ;;[ICODE] ../libsdcc/fsmul.c:73:        iTemp44 [k62 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp43 [k61 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] | 0x800000 {unsigned-long-int literal}
00B9   CE00           00383         BSET    r0x1008,7
                      00384 ;;[ICODE] ../libsdcc/fsmul.c:73:        *(iTemp38 [k54 lr41:46 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := iTemp44 [k62 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ]
                      00385 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
00BA   5800           00386         MOVAR   r0x100A
00BB   5600           00387         MOVRA   (___fsmul_fl1_1_22 + 0)
                      00388 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
00BC   5800           00389         MOVAR   r0x1009
00BD   5600           00390         MOVRA   (___fsmul_fl1_1_22 + 1)
                      00391 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
00BE   5800           00392         MOVAR   r0x1008
00BF   5600           00393         MOVRA   (___fsmul_fl1_1_22 + 2)
                      00394 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
00C0   3C00           00395         MOVAI   0x00
00C1   5600           00396         MOVRA   (___fsmul_fl1_1_22 + 3)
                      00397 ;;[ICODE] ../libsdcc/fsmul.c:74:        iTemp45 [k63 lr47:52 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00398 ;;[ICODE] ../libsdcc/fsmul.c:74:        iTemp47 [k66 lr48:49 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00399 ;;[ICODE] ../libsdcc/fsmul.c:74:        iTemp49 [k69 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp47 [k66 lr48:49 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00400 ;       .line   74; "../libsdcc/fsmul.c"        fl2.l = MANT (fl2.l);
00C2   5800           00401         MOVAR   (___fsmul_fl2_1_22 + 0)
00C3   5600           00402         MOVRA   r0x100A
00C4   5800           00403         MOVAR   (___fsmul_fl2_1_22 + 1)
00C5   5600           00404         MOVRA   r0x1009
00C6   5800           00405         MOVAR   (___fsmul_fl2_1_22 + 2)
00C7   5600           00406         MOVRA   r0x1008
00C8   5800           00407         MOVAR   (___fsmul_fl2_1_22 + 3)
00C9   5600           00408         MOVRA   r0x100F
                      00409 ;;[ICODE] ../libsdcc/fsmul.c:74:        iTemp50 [k70 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp49 [k69 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] & 0x7fffff {unsigned-long-int literal}
00CA   DE00           00410         BCLR    r0x1008,7
00CB   7600           00411         CLRR    r0x100F
                      00412 ;;[ICODE] ../libsdcc/fsmul.c:74:        iTemp51 [k71 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp50 [k70 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] | 0x800000 {unsigned-long-int literal}
00CC   CE00           00413         BSET    r0x1008,7
                      00414 ;;[ICODE] ../libsdcc/fsmul.c:74:        *(iTemp45 [k63 lr47:52 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := iTemp51 [k71 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ]
                      00415 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
00CD   5800           00416         MOVAR   r0x100A
00CE   5600           00417         MOVRA   (___fsmul_fl2_1_22 + 0)
                      00418 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
00CF   5800           00419         MOVAR   r0x1009
00D0   5600           00420         MOVRA   (___fsmul_fl2_1_22 + 1)
                      00421 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
00D1   5800           00422         MOVAR   r0x1008
00D2   5600           00423         MOVRA   (___fsmul_fl2_1_22 + 2)
                      00424 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
00D3   3C00           00425         MOVAI   0x00
00D4   5600           00426         MOVRA   (___fsmul_fl2_1_22 + 3)
                      00427 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp53 [k74 lr53:54 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00428 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp55 [k77 lr54:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp53 [k74 lr53:54 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00429 ;       .line   77; "../libsdcc/fsmul.c"        result = (fl1.l >> 8) * (fl2.l >> 8);
00D5   5800           00430         MOVAR   (___fsmul_fl1_1_22 + 0)
00D6   5600           00431         MOVRA   r0x100A
00D7   5800           00432         MOVAR   (___fsmul_fl1_1_22 + 1)
00D8   5600           00433         MOVRA   r0x100C
00D9   5600           00434         MOVRA   r0x1009
00DA   5800           00435         MOVAR   (___fsmul_fl1_1_22 + 2)
00DB   5600           00436         MOVRA   r0x1010
00DC   5600           00437         MOVRA   r0x1008
00DD   5800           00438         MOVAR   (___fsmul_fl1_1_22 + 3)
00DE   5600           00439         MOVRA   r0x1011
00DF   5600           00440         MOVRA   r0x100F
                      00441 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp56 [k78 lr55:60 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp55 [k77 lr54:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x8 {const-unsigned-char literal}
                      00442 ;;119   MOVAR   r0x1009
                      00443 ;;101   MOVAR   r0x1008
                      00444 ;;120   MOVAR   r0x100F
00E0   7600           00445         CLRR    r0x1012
                      00446 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp57 [k79 lr56:57 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00447 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp59 [k82 lr57:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp57 [k79 lr56:57 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
00E1   5800           00448         MOVAR   (___fsmul_fl2_1_22 + 0)
00E2   5600           00449         MOVRA   r0x100A
00E3   5800           00450         MOVAR   (___fsmul_fl2_1_22 + 1)
00E4   5600           00451         MOVRA   r0x1013
00E5   5600           00452         MOVRA   r0x1009
00E6   5800           00453         MOVAR   (___fsmul_fl2_1_22 + 2)
00E7   5600           00454         MOVRA   r0x1008
00E8   5800           00455         MOVAR   (___fsmul_fl2_1_22 + 3)
00E9   5600           00456         MOVRA   r0x1015
00EA   5600           00457         MOVRA   r0x100F
                      00458 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp60 [k83 lr58:60 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = iTemp59 [k82 lr57:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x8 {const-unsigned-char literal}
                      00459 ;;100   MOVAR   r0x1009
                      00460 ;;124   MOVAR   r0x1008
                      00461 ;;102   MOVAR   r0x100F
00EB   7600           00462         CLRR    r0x1016
                      00463 ;;[ICODE] ../libsdcc/fsmul.c:77:        send iTemp56 [k78 lr55:60 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ]{argreg = 1}
                      00464 ;;[ICODE] ../libsdcc/fsmul.c:77:        send iTemp60 [k83 lr58:60 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ]{argreg = 1}
                      00465 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = call __mullong [k141 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( long-int fixed, long-int fixed) fixed}
00EC   5800           00466         MOVAR   r0x1013
00ED   5600           00467         MOVRA   STK06
                      00468 ;;123   MOVAR   r0x1014
00EE   5800           00469         MOVAR   r0x1008
00EF   5600           00470         MOVRA   r0x1014
00F0   5600           00471         MOVRA   STK05
00F1   5800           00472         MOVAR   r0x1015
00F2   5600           00473         MOVRA   STK04
00F3   3C00           00474         MOVAI   0x00
00F4   5600           00475         MOVRA   STK03
00F5   5800           00476         MOVAR   r0x100C
00F6   5600           00477         MOVRA   STK02
00F7   5800           00478         MOVAR   r0x1010
00F8   5600           00479         MOVRA   STK01
00F9   5800           00480         MOVAR   r0x1011
00FA   5600           00481         MOVRA   STK00
00FB   3C00           00482         MOVAI   0x00
00FC   8000           00483         CALL    __mullong
00FD   5600           00484         MOVRA   r0x100F
00FE   5800           00485         MOVAR   STK00
00FF   5600           00486         MOVRA   r0x1008
0100   5800           00487         MOVAR   STK01
0101   5600           00488         MOVRA   r0x1009
0102   5800           00489         MOVAR   STK02
0103   5600           00490         MOVRA   r0x100A
                      00491 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp62 [k85 lr63:64 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00492 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp64 [k88 lr64:65 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = @[iTemp62 [k85 lr63:64 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00493 ;       .line   78; "../libsdcc/fsmul.c"        result += ((fl1.l & (unsigned long) 0xFF) * (fl2.l >> 8)) >> 8;
0104   5800           00494         MOVAR   (___fsmul_fl1_1_22 + 0)
0105   5600           00495         MOVRA   r0x100C
0106   5800           00496         MOVAR   (___fsmul_fl1_1_22 + 1)
0107   5600           00497         MOVRA   r0x1010
0108   5800           00498         MOVAR   (___fsmul_fl1_1_22 + 2)
0109   5600           00499         MOVRA   r0x1011
010A   5800           00500         MOVAR   (___fsmul_fl1_1_22 + 3)
010B   5600           00501         MOVRA   r0x1012
                      00502 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp65 [k89 lr65:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp64 [k88 lr64:65 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] & 0xff {unsigned-long-int literal}
010C   7600           00503         CLRR    r0x1010
010D   7600           00504         CLRR    r0x1011
010E   7600           00505         CLRR    r0x1012
                      00506 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp66 [k90 lr66:67 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00507 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp68 [k93 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = @[iTemp66 [k90 lr66:67 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
010F   5800           00508         MOVAR   (___fsmul_fl2_1_22 + 0)
0110   5600           00509         MOVRA   r0x1013
0111   5800           00510         MOVAR   (___fsmul_fl2_1_22 + 1)
0112   5600           00511         MOVRA   r0x1014
0113   5800           00512         MOVAR   (___fsmul_fl2_1_22 + 2)
0114   5600           00513         MOVRA   r0x1015
0115   5800           00514         MOVAR   (___fsmul_fl2_1_22 + 3)
0116   5600           00515         MOVRA   r0x1016
                      00516 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp69 [k94 lr68:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100F r0x1010 r0x1011 r0x1012 ] = iTemp68 [k93 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] >> 0x8 {const-unsigned-char literal}
                      00517 ;;114   MOVAR   r0x1014
                      00518 ;;116   MOVAR   r0x1015
                      00519 ;;118   MOVAR   r0x1016
0117   7600           00520         CLRR    r0x101A
                      00521 ;;[ICODE] ../libsdcc/fsmul.c:78:        send iTemp65 [k89 lr65:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ]{argreg = 1}
                      00522 ;;[ICODE] ../libsdcc/fsmul.c:78:        send iTemp69 [k94 lr68:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100F r0x1010 r0x1011 r0x1012 ]{argreg = 1}
                      00523 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp70 [k95 lr71:72 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = call __mullong [k141 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( long-int fixed, long-int fixed) fixed}
                      00524 ;;113   MOVAR   r0x1017
0118   5800           00525         MOVAR   r0x1014
0119   5600           00526         MOVRA   r0x1017
011A   5600           00527         MOVRA   STK06
                      00528 ;;115   MOVAR   r0x1018
011B   5800           00529         MOVAR   r0x1015
011C   5600           00530         MOVRA   r0x1018
011D   5600           00531         MOVRA   STK05
                      00532 ;;117   MOVAR   r0x1019
011E   5800           00533         MOVAR   r0x1016
011F   5600           00534         MOVRA   r0x1019
0120   5600           00535         MOVRA   STK04
0121   3C00           00536         MOVAI   0x00
0122   5600           00537         MOVRA   STK03
0123   5800           00538         MOVAR   r0x100C
0124   5600           00539         MOVRA   STK02
0125   3C00           00540         MOVAI   0x00
0126   5600           00541         MOVRA   STK01
0127   3C00           00542         MOVAI   0x00
0128   5600           00543         MOVRA   STK00
0129   3C00           00544         MOVAI   0x00
012A   8000           00545         CALL    __mullong
012B   5600           00546         MOVRA   r0x1015
012C   5600           00547         MOVRA   r0x1012
012D   5800           00548         MOVAR   STK00
012E   5600           00549         MOVRA   r0x1014
012F   5600           00550         MOVRA   r0x1011
0130   5800           00551         MOVAR   STK01
0131   5600           00552         MOVRA   r0x1010
0132   5800           00553         MOVAR   STK02
0133   5600           00554         MOVRA   r0x100C
                      00555 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp71 [k96 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = iTemp70 [k95 lr71:72 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] >> 0x8 {const-unsigned-char literal}
                      00556 ;;109   MOVAR   r0x1010
                      00557 ;;121   MOVAR   r0x1011
                      00558 ;;122   MOVAR   r0x1012
0134   7600           00559         CLRR    r0x1016
                      00560 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] + iTemp71 [k96 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ]
                      00561 ;;108   MOVAR   r0x1013
0135   5800           00562         MOVAR   r0x1010
0136   5600           00563         MOVRA   r0x1013
0137   7E00           00564         ADDRA   r0x100A
0138   5800           00565         MOVAR   r0x1014
0139   F1A7           00566         JBCLR   STATUS,0
013A   6000           00567         JZAR    r0x1014
013B   7E00           00568         ADDRA   r0x1009
013C   5800           00569         MOVAR   r0x1015
013D   F1A7           00570         JBCLR   STATUS,0
013E   6000           00571         JZAR    r0x1015
013F   7E00           00572         ADDRA   r0x1008
0140   5800           00573         MOVAR   r0x1016
0141   F1A7           00574         JBCLR   STATUS,0
0142   6000           00575         JZAR    r0x1016
0143   7E00           00576         ADDRA   r0x100F
                      00577 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp73 [k98 lr75:76 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00578 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp75 [k101 lr76:77 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = @[iTemp73 [k98 lr75:76 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00579 ;       .line   79; "../libsdcc/fsmul.c"        result += ((fl2.l & (unsigned long) 0xFF) * (fl1.l >> 8)) >> 8;
0144   5800           00580         MOVAR   (___fsmul_fl2_1_22 + 0)
0145   5600           00581         MOVRA   r0x100C
0146   5800           00582         MOVAR   (___fsmul_fl2_1_22 + 1)
0147   5600           00583         MOVRA   r0x1010
0148   5800           00584         MOVAR   (___fsmul_fl2_1_22 + 2)
0149   5600           00585         MOVRA   r0x1011
014A   5800           00586         MOVAR   (___fsmul_fl2_1_22 + 3)
014B   5600           00587         MOVRA   r0x1012
                      00588 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp76 [k102 lr77:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp75 [k101 lr76:77 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] & 0xff {unsigned-long-int literal}
014C   7600           00589         CLRR    r0x1010
014D   7600           00590         CLRR    r0x1011
014E   7600           00591         CLRR    r0x1012
                      00592 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp77 [k103 lr78:79 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00593 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp79 [k106 lr79:80 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = @[iTemp77 [k103 lr78:79 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
014F   5800           00594         MOVAR   (___fsmul_fl1_1_22 + 0)
0150   5600           00595         MOVRA   r0x1013
0151   5800           00596         MOVAR   (___fsmul_fl1_1_22 + 1)
0152   5600           00597         MOVRA   r0x1017
0153   5600           00598         MOVRA   r0x1014
0154   5800           00599         MOVAR   (___fsmul_fl1_1_22 + 2)
0155   5600           00600         MOVRA   r0x1018
0156   5600           00601         MOVRA   r0x1015
0157   5800           00602         MOVAR   (___fsmul_fl1_1_22 + 3)
0158   5600           00603         MOVRA   r0x1019
0159   5600           00604         MOVRA   r0x1016
                      00605 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp80 [k107 lr80:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100F r0x1010 r0x1011 r0x1012 ] = iTemp79 [k106 lr79:80 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] >> 0x8 {const-unsigned-char literal}
                      00606 ;;110   MOVAR   r0x1014
                      00607 ;;111   MOVAR   r0x1015
                      00608 ;;112   MOVAR   r0x1016
015A   7600           00609         CLRR    r0x101A
                      00610 ;;[ICODE] ../libsdcc/fsmul.c:79:        send iTemp76 [k102 lr77:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ]{argreg = 1}
                      00611 ;;[ICODE] ../libsdcc/fsmul.c:79:        send iTemp80 [k107 lr80:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100F r0x1010 r0x1011 r0x1012 ]{argreg = 1}
                      00612 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp81 [k108 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = call __mullong [k141 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( long-int fixed, long-int fixed) fixed}
015B   5800           00613         MOVAR   r0x1017
015C   5600           00614         MOVRA   STK06
015D   5800           00615         MOVAR   r0x1018
015E   5600           00616         MOVRA   STK05
015F   5800           00617         MOVAR   r0x1019
0160   5600           00618         MOVRA   STK04
0161   3C00           00619         MOVAI   0x00
0162   5600           00620         MOVRA   STK03
0163   5800           00621         MOVAR   r0x100C
0164   5600           00622         MOVRA   STK02
0165   3C00           00623         MOVAI   0x00
0166   5600           00624         MOVRA   STK01
0167   3C00           00625         MOVAI   0x00
0168   5600           00626         MOVRA   STK00
0169   3C00           00627         MOVAI   0x00
016A   8000           00628         CALL    __mullong
016B   5600           00629         MOVRA   r0x1015
016C   5600           00630         MOVRA   r0x1012
016D   5800           00631         MOVAR   STK00
016E   5600           00632         MOVRA   r0x1014
016F   5600           00633         MOVRA   r0x1011
0170   5800           00634         MOVAR   STK01
0171   5600           00635         MOVRA   r0x1013
0172   5600           00636         MOVRA   r0x1010
0173   5800           00637         MOVAR   STK02
0174   5600           00638         MOVRA   r0x100C
                      00639 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp82 [k109 lr84:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = iTemp81 [k108 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] >> 0x8 {const-unsigned-char literal}
                      00640 ;;105   MOVAR   r0x1010
                      00641 ;;106   MOVAR   r0x1011
                      00642 ;;107   MOVAR   r0x1012
0175   7600           00643         CLRR    r0x1016
                      00644 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] + iTemp82 [k109 lr84:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ]
0176   5800           00645         MOVAR   r0x1013
0177   7E00           00646         ADDRA   r0x100A
0178   5800           00647         MOVAR   r0x1014
0179   F1A7           00648         JBCLR   STATUS,0
017A   6000           00649         JZAR    r0x1014
017B   7E00           00650         ADDRA   r0x1009
017C   5800           00651         MOVAR   r0x1015
017D   F1A7           00652         JBCLR   STATUS,0
017E   6000           00653         JZAR    r0x1015
017F   7E00           00654         ADDRA   r0x1008
0180   5800           00655         MOVAR   r0x1016
0181   F1A7           00656         JBCLR   STATUS,0
0182   6000           00657         JZAR    r0x1016
0183   7E00           00658         ADDRA   r0x100F
                      00659 ;;[ICODE] ../libsdcc/fsmul.c:82:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] + 0x40 {unsigned-long-int literal}
                      00660 ;       .line   82; "../libsdcc/fsmul.c"        result += 0x40;
0184   3C40           00661         MOVAI   0x40
0185   7E00           00662         ADDRA   r0x100A
0186   F1A7           00663         JBCLR   STATUS,0
0187   6600           00664         INCR    r0x1009
0188   F5A7           00665         JBCLR   STATUS,2
0189   6600           00666         INCR    r0x1008
018A   F5A7           00667         JBCLR   STATUS,2
018B   6600           00668         INCR    r0x100F
                      00669 ;;[ICODE] ../libsdcc/fsmul.c:84:        iTemp85 [k112 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] & 0x80000000 {unsigned-long-int literal}
                      00670 ;       .line   84; "../libsdcc/fsmul.c"        if (result & SIGNBIT)
018C   EE00           00671         JBSET   r0x100F,7
018D   A000           00672         GOTO    _00109_DS_
                      00673 ;;[ICODE] ../libsdcc/fsmul.c:84:        if iTemp85 [k112 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} == 0 goto _iffalse_1($5)
                      00674 ;;[ICODE] ../libsdcc/fsmul.c:87:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] + 0x40 {unsigned-long-int literal}
                      00675 ;       .line   87; "../libsdcc/fsmul.c"        result += 0x40;
018E   3C40           00676         MOVAI   0x40
018F   7E00           00677         ADDRA   r0x100A
0190   F1A7           00678         JBCLR   STATUS,0
0191   6600           00679         INCR    r0x1009
0192   F5A7           00680         JBCLR   STATUS,2
0193   6600           00681         INCR    r0x1008
0194   F5A7           00682         JBCLR   STATUS,2
0195   6600           00683         INCR    r0x100F
                      00684 ;;[ICODE] ../libsdcc/fsmul.c:88:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x8 {const-unsigned-char literal}
                      00685 ;       .line   88; "../libsdcc/fsmul.c"        result >>= 8;
0196   5800           00686         MOVAR   r0x1009
0197   5600           00687         MOVRA   r0x100A
0198   5800           00688         MOVAR   r0x1008
0199   5600           00689         MOVRA   r0x1009
019A   5800           00690         MOVAR   r0x100F
019B   5600           00691         MOVRA   r0x1008
019C   7600           00692         CLRR    r0x100F
                      00693 ;;[ICODE] ../libsdcc/fsmul.c:88:         goto _ifend_1($6)
019D   A000           00694         GOTO    _00110_DS_
                      00695 ;;[ICODE] ../libsdcc/fsmul.c:88:  _iffalse_1($5) :
                      00696 ;;[ICODE] ../libsdcc/fsmul.c:92:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x7 {const-unsigned-char literal}
019E                  00697 _00109_DS_
                      00698 ;       .line   92; "../libsdcc/fsmul.c"        result >>= 7;
019E   5000           00699         RLAR    r0x100A
019F   5000           00700         RLAR    r0x1009
01A0   5600           00701         MOVRA   r0x100A
01A1   5000           00702         RLAR    r0x1008
01A2   5600           00703         MOVRA   r0x1009
01A3   5000           00704         RLAR    r0x100F
01A4   5600           00705         MOVRA   r0x1008
01A5   7600           00706         CLRR    r0x100F
01A6   5200           00707         RLR     r0x100F
                      00708 ;;[ICODE] ../libsdcc/fsmul.c:93:        iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] = iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] - 0x1 {const-unsigned-char literal}
                      00709 ;       .line   93; "../libsdcc/fsmul.c"        exp--;
01A7   3CFF           00710         MOVAI   0xff
01A8   7E00           00711         ADDRA   r0x100E
01A9   E1A7           00712         JBSET   STATUS,0
01AA   6E00           00713         DECR    r0x100D
                      00714 ;;[ICODE] ../libsdcc/fsmul.c:93:  _ifend_1($6) :
                      00715 ;;[ICODE] ../libsdcc/fsmul.c:96:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] & 0xff7fffff {unsigned-long-int literal}
01AB                  00716 _00110_DS_
                      00717 ;       .line   96; "../libsdcc/fsmul.c"        result &= ~HIDDEN;
01AB   DE00           00718         BCLR    r0x1008,7
                      00719 ;;[ICODE] ../libsdcc/fsmul.c:99:        iTemp92 [k119 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] < 0x100 {const-int literal}
                      00720 ;;signed compare: left < lit(0x100=256), size=2, mask=ffff
                      00721 ;       .line   99; "../libsdcc/fsmul.c"        if (exp >= 0x100)
01AC   5800           00722         MOVAR   r0x100D
01AD   3F80           00723         ADDAI   0x80
01AE   3F7F           00724         ADDAI   0x7f
01AF   E5A7           00725         JBSET   STATUS,2
01B0   A000           00726         GOTO    _00135_DS_
01B1   3C00           00727         MOVAI   0x00
01B2   4800           00728         RSUBAR  r0x100E
01B3                  00729 _00135_DS_
01B3   E1A7           00730         JBSET   STATUS,0
01B4   A000           00731         GOTO    _00115_DS_
                      00732 ;;genSkipc:3246: created from rifx:0xbfe65670
                      00733 ;;[ICODE] ../libsdcc/fsmul.c:99:        if iTemp92 [k119 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_3($11)
                      00734 ;;[ICODE] ../libsdcc/fsmul.c:100:       iTemp93 [k120 lr106:114 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00735 ;;[ICODE] ../libsdcc/fsmul.c:100:       if iTemp12 [k22 lr24:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ ___fsmul_sign_1_22}[r0x1000 ] == 0 goto iTempLbl0($15)
                      00736 ;       .line   100; "../libsdcc/fsmul.c"       fl1.l = (sign ? SIGNBIT : 0) | 0x7F800000;
01B5   3C00           00737         MOVAI   0x00
01B6   5C00           00738         ORAR    r0x100B
01B7   F5A7           00739         JBCLR   STATUS,2
01B8   A000           00740         GOTO    _00119_DS_
                      00741 ;;[ICODE] ../libsdcc/fsmul.c:100:       iTemp95 [k123 lr108:113 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] := 0x80000000 {unsigned-long-int literal}
01B9   7600           00742         CLRR    r0x100C
01BA   7600           00743         CLRR    r0x1010
01BB   7600           00744         CLRR    r0x1011
01BC   3C80           00745         MOVAI   0x80
01BD   5600           00746         MOVRA   r0x1012
                      00747 ;;[ICODE] ../libsdcc/fsmul.c:100:        goto iTempLbl1($16)
01BE   A000           00748         GOTO    _00120_DS_
                      00749 ;;[ICODE] ../libsdcc/fsmul.c:100:  iTempLbl0($15) :
                      00750 ;;[ICODE] ../libsdcc/fsmul.c:100:       iTemp95 [k123 lr108:113 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] := 0x0 {unsigned-long-int literal}
01BF                  00751 _00119_DS_
01BF   7600           00752         CLRR    r0x100C
01C0   7600           00753         CLRR    r0x1010
01C1   7600           00754         CLRR    r0x1011
01C2   7600           00755         CLRR    r0x1012
                      00756 ;;[ICODE] ../libsdcc/fsmul.c:100:  iTempLbl1($16) :
                      00757 ;;[ICODE] ../libsdcc/fsmul.c:100:       iTemp96 [k124 lr113:114 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp95 [k123 lr108:113 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] | 0x7f800000 {unsigned-long-int literal}
01C3                  00758 _00120_DS_
01C3   CE00           00759         BSET    r0x1011,7
01C4   3C7F           00760         MOVAI   0x7f
01C5   5E00           00761         ORRA    r0x1012
                      00762 ;;[ICODE] ../libsdcc/fsmul.c:100:       *(iTemp93 [k120 lr106:114 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := iTemp96 [k124 lr113:114 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ]
                      00763 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
01C6   5800           00764         MOVAR   r0x100C
01C7   5600           00765         MOVRA   (___fsmul_fl1_1_22 + 0)
                      00766 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
01C8   5800           00767         MOVAR   r0x1010
01C9   5600           00768         MOVRA   (___fsmul_fl1_1_22 + 1)
                      00769 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
01CA   5800           00770         MOVAR   r0x1011
01CB   5600           00771         MOVRA   (___fsmul_fl1_1_22 + 2)
                      00772 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
01CC   5800           00773         MOVAR   r0x1012
01CD   5600           00774         MOVRA   (___fsmul_fl1_1_22 + 3)
                      00775 ;;[ICODE] ../libsdcc/fsmul.c:100:        goto _ifend_3($12)
01CE   A000           00776         GOTO    _00116_DS_
                      00777 ;;[ICODE] ../libsdcc/fsmul.c:100:  _iffalse_3($11) :
                      00778 ;;[ICODE] ../libsdcc/fsmul.c:101:       iTemp97 [k125 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] < 0x0 {int literal}
                      00779 ;;signed compare: left < lit(0x0=0), size=2, mask=ffff
01CF                  00780 _00115_DS_
                      00781 ;       .line   101; "../libsdcc/fsmul.c"       else if (exp < 0)
01CF   C1A7           00782         BSET    STATUS,0
01D0   EE00           00783         JBSET   r0x100D,7
01D1   D1A7           00784         BCLR    STATUS,0
01D2   E1A7           00785         JBSET   STATUS,0
01D3   A000           00786         GOTO    _00112_DS_
                      00787 ;;genSkipc:3246: created from rifx:0xbfe65670
                      00788 ;;[ICODE] ../libsdcc/fsmul.c:101:       if iTemp97 [k125 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($8)
                      00789 ;;[ICODE] ../libsdcc/fsmul.c:102:       iTemp98 [k126 lr119:120 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00790 ;;[ICODE] ../libsdcc/fsmul.c:102:       *(iTemp98 [k126 lr119:120 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := 0x0 {volatile-unsigned-long-int literal}
                      00791 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
                      00792 ;       .line   102; "../libsdcc/fsmul.c"       fl1.l = 0;
01D4   7600           00793         CLRR    (___fsmul_fl1_1_22 + 0)
                      00794 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
01D5   7600           00795         CLRR    (___fsmul_fl1_1_22 + 1)
                      00796 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
01D6   7600           00797         CLRR    (___fsmul_fl1_1_22 + 2)
                      00798 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
01D7   7600           00799         CLRR    (___fsmul_fl1_1_22 + 3)
                      00800 ;;[ICODE] ../libsdcc/fsmul.c:102:        goto _ifend_3($12)
01D8   A000           00801         GOTO    _00116_DS_
                      00802 ;;[ICODE] ../libsdcc/fsmul.c:102:  _iffalse_2($8) :
                      00803 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp100 [k129 lr123:134 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00804 ;;[ICODE] ../libsdcc/fsmul.c:104:       if iTemp12 [k22 lr24:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ ___fsmul_sign_1_22}[r0x1000 ] == 0 goto iTempLbl2($17)
01D9                  00805 _00112_DS_
                      00806 ;       .line   104; "../libsdcc/fsmul.c"       fl1.l = PACK (sign ? SIGNBIT : 0 , exp, result);
01D9   3C00           00807         MOVAI   0x00
01DA   5C00           00808         ORAR    r0x100B
01DB   F5A7           00809         JBCLR   STATUS,2
01DC   A000           00810         GOTO    _00121_DS_
                      00811 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp102 [k132 lr125:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1007 r0x1008 r0x1009 ] := 0x80000000 {unsigned-long-int literal}
01DD   7600           00812         CLRR    r0x100B
01DE   7600           00813         CLRR    r0x100C
01DF   7600           00814         CLRR    r0x1010
01E0   3C80           00815         MOVAI   0x80
01E1   5600           00816         MOVRA   r0x1011
                      00817 ;;[ICODE] ../libsdcc/fsmul.c:104:        goto iTempLbl3($18)
01E2   A000           00818         GOTO    _00122_DS_
                      00819 ;;[ICODE] ../libsdcc/fsmul.c:104:  iTempLbl2($17) :
                      00820 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp102 [k132 lr125:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1007 r0x1008 r0x1009 ] := 0x0 {unsigned-long-int literal}
01E3                  00821 _00121_DS_
01E3   7600           00822         CLRR    r0x100B
01E4   7600           00823         CLRR    r0x100C
01E5   7600           00824         CLRR    r0x1010
01E6   7600           00825         CLRR    r0x1011
                      00826 ;;[ICODE] ../libsdcc/fsmul.c:104:  iTempLbl3($18) :
                      00827 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp103 [k133 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x100A r0x100B r0x100C r0x100D ] = (unsigned-long-int fixed)iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ]
01E7                  00828 _00122_DS_
01E7   5800           00829         MOVAR   r0x100E
01E8   5600           00830         MOVRA   r0x1012
01E9   5800           00831         MOVAR   r0x100D
01EA   5600           00832         MOVRA   r0x1013
01EB   3C00           00833         MOVAI   0x00
01EC   FE00           00834         JBCLR   r0x1013,7
01ED   3CFF           00835         MOVAI   0xff
01EE   5600           00836         MOVRA   r0x1015
01EF   5600           00837         MOVRA   r0x1014
                      00838 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp104 [k134 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1005 r0x1006 r0x100E r0x100F ] = iTemp103 [k133 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x100A r0x100B r0x100C r0x100D ] << 0x17 {const-unsigned-char literal}
01F0   4C00           00839         RRAR    r0x1013
01F1   4C00           00840         RRAR    r0x1012
01F2   5600           00841         MOVRA   r0x1017
01F3   7600           00842         CLRR    r0x1016
01F4   4E00           00843         RRR     r0x1016
01F5   7600           00844         CLRR    r0x100D
01F6   7600           00845         CLRR    r0x100E
                      00846 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp105 [k135 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1007 r0x1008 r0x1009 ] = iTemp102 [k132 lr125:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1007 r0x1008 r0x1009 ] | iTemp104 [k134 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1005 r0x1006 r0x100E r0x100F ]
01F7   3C00           00847         MOVAI   0x00
01F8   5E00           00848         ORRA    r0x100B
01F9   3C00           00849         MOVAI   0x00
01FA   5E00           00850         ORRA    r0x100C
01FB   5800           00851         MOVAR   r0x1016
01FC   5E00           00852         ORRA    r0x1010
01FD   5800           00853         MOVAR   r0x1017
01FE   5E00           00854         ORRA    r0x1011
                      00855 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp106 [k136 lr133:134 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp105 [k135 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1007 r0x1008 r0x1009 ] | iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ]
01FF   5800           00856         MOVAR   r0x100B
0200   5E00           00857         ORRA    r0x100A
0201   5800           00858         MOVAR   r0x100C
0202   5E00           00859         ORRA    r0x1009
0203   5800           00860         MOVAR   r0x1010
0204   5E00           00861         ORRA    r0x1008
0205   5800           00862         MOVAR   r0x1011
0206   5E00           00863         ORRA    r0x100F
                      00864 ;;[ICODE] ../libsdcc/fsmul.c:104:       *(iTemp100 [k129 lr123:134 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := iTemp106 [k136 lr133:134 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ]
                      00865 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
0207   5800           00866         MOVAR   r0x100A
0208   5600           00867         MOVRA   (___fsmul_fl1_1_22 + 0)
                      00868 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
0209   5800           00869         MOVAR   r0x1009
020A   5600           00870         MOVRA   (___fsmul_fl1_1_22 + 1)
                      00871 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
020B   5800           00872         MOVAR   r0x1008
020C   5600           00873         MOVRA   (___fsmul_fl1_1_22 + 2)
                      00874 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
020D   5800           00875         MOVAR   r0x100F
020E   5600           00876         MOVRA   (___fsmul_fl1_1_22 + 3)
                      00877 ;;[ICODE] ../libsdcc/fsmul.c:104:  _ifend_3($12) :
                      00878 ;;[ICODE] ../libsdcc/fsmul.c:105:       iTemp107 [k137 lr136:137 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00879 ;;[ICODE] ../libsdcc/fsmul.c:105:       iTemp109 [k140 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp107 [k137 lr136:137 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
020F                  00880 _00116_DS_
                      00881 ;       .line   105; "../libsdcc/fsmul.c"       return (fl1.f);
020F   5800           00882         MOVAR   (___fsmul_fl1_1_22 + 0)
0210   5600           00883         MOVRA   r0x100B
0211   5800           00884         MOVAR   (___fsmul_fl1_1_22 + 1)
0212   5600           00885         MOVRA   r0x100A
0213   5800           00886         MOVAR   (___fsmul_fl1_1_22 + 2)
0214   5600           00887         MOVRA   r0x1009
0215   5800           00888         MOVAR   (___fsmul_fl1_1_22 + 3)
0216   5600           00889         MOVRA   r0x1008
                      00890 ;;[ICODE] ../libsdcc/fsmul.c:105:       ret iTemp109 [k140 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0217   5800           00891         MOVAR   r0x100B
0218   5600           00892         MOVRA   STK02
0219   5800           00893         MOVAR   r0x100A
021A   5600           00894         MOVRA   STK01
021B   5800           00895         MOVAR   r0x1009
021C   5600           00896         MOVRA   STK00
021D   5800           00897         MOVAR   r0x1008
                      00898 ;;[ICODE] ../libsdcc/fsmul.c:105:  _return($13) :
                      00899 ;;[ICODE] ../libsdcc/fsmul.c:105:       eproc ___fsmul [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
021E                  00900 _00117_DS_
021E   000C           00901         RETURN  
                      00902 ; exit point of ___fsmul
                      00903 
                      00904 
                      00905 ;       code size estimation:
                      00906 ;         543+    0 =   543 instructions ( 1086 byte)
                      00907 
                      00908         end
gpasm-1.7.0_beta1 (Nov 23 2015)fsmul.asm          2015-11-30  22:56:08         PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

ADCR0                             000001E0
ADCR1                             000001E1
ADCR2                             000001E2
ADIO0                             000001E3
ADIO1                             000001E4
ADRH                              000001E5
ADRL                              000001E6
CLKO                              000001AD
FSR                               000001A4
FSR0                              000001A4
FSR1                              000001A5
HIBYTE                            000001A3
INDF                              000001A0
INDF0                             000001A0
INDF1                             000001A1
INDF2                             000001A2
INDF3                             000001A9
INTE                              000001AA
INTF                              000001AB
IOP0                              000001B0
IOP1                              000001B4
IOP2                              000001B8
IOP3                              000001BC
LEDCR0                            000001F0
LEDCR1                            000001F1
LEDDRV                            000001F4
LEDDS1                            000001E8
LEDDS2                            000001E9
LEDDS3                            000001EA
LEDDS4                            000001EB
LEDDS5                            000001EC
LEDDS6                            000001ED
LEDDS7                            000001EE
LEDDS8                            000001EF
LEDIOS0                           000001F2
LEDIOS1                           000001F3
MCR                               000001A8
OEP0                              000001B1
OEP1                              000001B5
OEP2                              000001B9
OEP3                              000001BD
OSCM                              000001AC
PCL                               000001A6
PDP0                              000001B3
PDP1                              000001B7
PDP2                              000001BB
PDP3                              000001BF
PFLAG                             000001A7
PUP0                              000001B2
PUP1                              000001B6
PUP2                              000001BA
PUP3                              000001BE
STATUS                            000001A7
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
T0CNT                             000001C1
T0CR                              000001C0
T0DATA                            000001C3
T0LOAD                            000001C2
T1CNT                             000001C5
T1CR                              000001C4
T1DATA                            000001C7
T1LOAD                            000001C6
T2CNTH                            000001C9
T2CNTL                            000001CA
T2CR                              000001C8
T2LOADH                           000001CB
T2LOADL                           000001CC
TK0CNTH                           000001D3
TK0CNTL                           000001D4
TK0CR0                            000001D0
TK0CR1                            000001D1
TK0CR2                            000001D2
TK1CNTH                           000001DB
TK1CNTL                           000001DC
TK1CR0                            000001D8
TK1CR1                            000001D9
TK1CR2                            000001DA
_00105_DS_                        00000039
_00106_DS_                        00000041
_00109_DS_                        0000019E
_00110_DS_                        000001AB
_00112_DS_                        000001D9
_00115_DS_                        000001CF
_00116_DS_                        0000020F
_00117_DS_                        0000021E
_00119_DS_                        000001BF
_00120_DS_                        000001C3
_00121_DS_                        000001E3
_00122_DS_                        000001E7
_00135_DS_                        000001B3
__32T8132                         00000001
___fs2schar                       00000000
___fs2sint                        00000000
___fs2slong                       00000000
___fs2uchar                       00000000
___fs2uint                        00000000
___fs2ulong                       00000000
___fsadd                          00000000
___fsdiv                          00000000
___fseq                           00000000
___fsgt                           00000000
___fslt                           00000000
___fsmul                          00000000
___fsmul_fl1_1_22                 00000013
___fsmul_fl2_1_22                 00000017
___fsneq                          00000000
___fssub                          00000000
___schar2fs                       00000000
___sint2fs                        00000000
___slong2fs                       00000000
___uchar2fs                       00000000
___uint2fs                        00000000
___ulong2fs                       00000000
__mullong                         00000000
r0x1008                           00000003
r0x1009                           00000002
r0x100A                           00000001
r0x100B                           00000000
r0x100C                           00000007
r0x100D                           00000006
r0x100E                           00000005
r0x100F                           00000004
r0x1010                           00000008
r0x1011                           00000009
r0x1012                           0000000A
r0x1013                           0000000B
r0x1014                           0000000C
r0x1015                           0000000D
r0x1016                           0000000E
r0x1017                           0000000F
r0x1018                           00000010
r0x1019                           00000011
r0x101A                           00000012
ADCHS0                            ADCR0,3 	         /* bit 3 */
ADCHS1                            ADCR0,4 	         /* bit 4 */
ADCHS2                            ADCR0,5 	         /* bit 5 */
ADCHS3                            ADCR0,6 	         /* bit 6 */
ADCHS4                            ADCR0,7 	         /* bit 7 */
ADCKS0                            ADCR1,1      	     /* bit 1 */
ADCKS1                            ADCR1,2      	     /* bit 2 */
ADEOC                             ADCR0,1   	       /* bit 1 */
ADIE                              INTE,6            /* bit 6 */
ADIF                              INTF,6          /* bit 6 */
ADIOS0                            ADIO0,0          /* bit 0 */
ADIOS1                            ADIO0,1          /* bit 1 */
ADIOS10                           ADIO1,2         /* bit 2 */
ADIOS11                           ADIO1,3         /* bit 3 */
ADIOS12                           ADIO1,4         /* bit 4 */
ADIOS13                           ADIO1,5         /* bit 5 */
ADIOS14                           ADIO1,6         /* bit 6 */
ADIOS15                           ADIO1,7         /* bit 7 */
ADIOS2                            ADIO0,2          /* bit 2 */
ADIOS3                            ADIO0,3          /* bit 3 */
ADIOS4                            ADIO0,4          /* bit 4 */
ADIOS5                            ADIO0,5          /* bit 5 */
ADIOS6                            ADIO0,6          /* bit 6 */
ADIOS7                            ADIO0,7          /* bit 7 */
ADIOS8                            ADIO1,0         /* bit 0 */
ADIOS9                            ADIO1,1         /* bit 1 */
ADON                              ADCR0,0     	     /* bit 0 */
ADR0                              ADRL,0           /* bit 0 */
ADR1                              ADRL,1           /* bit 1 */
ADR10                             ADRH,6           /* bit 6 */
ADR11                             ADRH,7           /* bit 7 */
ADR2                              ADRL,2           /* bit 2 */
ADR3                              ADRL,3           /* bit 3 */
ADR4                              ADRH,0           /* bit 0 */
ADR5                              ADRH,1           /* bit 1 */
ADR6                              ADRH,2           /* bit 2 */
ADR7                              ADRH,3           /* bit 3 */
ADR8                              ADRH,4           /* bit 4 */
ADR9                              ADRH,5           /* bit 5 */
ADREF0                            ADCR1,3     	     /* bit 3 */
ADREF1                            ADCR1,4     	     /* bit 4 */
ADREF2                            ADCR1,5     	     /* bit 5 */
ADREF3                            ADCR1,6     	     /* bit 6 */
ADSMP0                            ADCR2,0   	       /* bit 0 */
ADSMP1                            ADCR2,1   	       /* bit 1 */
ADSMP2                            ADCR2,2   	       /* bit 2 */
ADSMP3                            ADCR2,3   	       /* bit 3 */
ADTEN                             ADCR1,7     	     /* bit 7 */
BUZ0OE                            T0CR,5           /* bit 5 */
BUZ1OE                            T1CR,5    	      /* bit 5 */
C                                 STATUS,0         /* bit 0 */
CLKOEN                            CLKO,7          /* bit 7 */
CLKOS0                            CLKO,0          /* bit 0 */
CLKOS1                            CLKO,1          /* bit 1 */
CLKOS2                            CLKO,2          /* bit 2 */
CLKS                              OSCM,2           /* bit 2 */
CLKS0                             LEDCR1,5         /* bit 5 */
CLKS1                             LEDCR1,6         /* bit 6 */
COMDV1                            LEDDRV,0          /* bit 0 */
COMDV2                            LEDDRV,1          /* bit 1 */
COMDV3                            LEDDRV,2          /* bit 2 */
COMDV4                            LEDDRV,3          /* bit 3 */
COMDV5                            LEDDRV,4          /* bit 4 */
COMDV6                            LEDDRV,5          /* bit 5 */
COMDV7                            LEDDRV,6          /* bit 6 */
COMDV8                            LEDDRV,7          /* bit 7 */
COMIOS1                           LEDIOS0,0          /* bit 0 */
COMIOS2                           LEDIOS0,1          /* bit 1 */
COMIOS3                           LEDIOS0,2          /* bit 2 */
COMIOS4                           LEDIOS0,3          /* bit 3 */
COMIOS5                           LEDIOS0,4          /* bit 4 */
COMIOS6                           LEDIOS0,5          /* bit 5 */
COMIOS7                           LEDIOS0,6          /* bit 6 */
COMIOS8                           LEDIOS0,7          /* bit 7 */
DC                                STATUS,1       	 /* bit 1 */
DRVPS                             LEDCR1,7         /* bit 7 */
DUTY                              LEDCR0,6         /* bit 6 */
FLED0                             LEDCR1,0         /* bit 0 */
FLED1                             LEDCR1,1         /* bit 1 */
FSR00                             FSR0,0          /* bit 0 */
FSR01                             FSR0,1          /* bit 1 */
FSR02                             FSR0,2          /* bit 2 */
FSR03                             FSR0,3          /* bit 3 */
FSR04                             FSR0,4          /* bit 4 */
FSR05                             FSR0,5          /* bit 5 */
FSR06                             FSR0,6          /* bit 6 */
FSR07                             FSR0,7          /* bit 7 */
FSR10                             FSR1,0          /* bit 0 */
FSR11                             FSR1,1          /* bit 1 */
FSR12                             FSR1,2          /* bit 2 */
FSR13                             FSR1,3          /* bit 3 */
FSR14                             FSR1,4          /* bit 4 */
FSR15                             FSR1,5          /* bit 5 */
FSR16                             FSR1,6          /* bit 6 */
FSR17                             FSR1,7          /* bit 7 */
GIE                               MCR,7           /* bit 7 */
GYS0                              LEDCR0,0         /* bit 0 */
GYS1                              LEDCR0,1         /* bit 1 */
GYS2                              LEDCR0,2         /* bit 2 */
HFEN                              OSCM,0           /* bit 0 */
HIBYTE0                           HIBYTE,0          /* bit 0 */
HIBYTE1                           HIBYTE,1          /* bit 1 */
HIBYTE2                           HIBYTE,2          /* bit 2 */
HIBYTE3                           HIBYTE,3          /* bit 3 */
HIBYTE4                           HIBYTE,4          /* bit 4 */
HIBYTE5                           HIBYTE,5          /* bit 5 */
HIBYTE6                           HIBYTE,6          /* bit 6 */
HIBYTE7                           HIBYTE,7          /* bit 7 */
IBPS0                             LEDCR1,3         /* bit 3 */
IBPS1                             LEDCR1,4         /* bit 4 */
INDF00                            INDF0,0          /* bit 0 */
INDF01                            INDF0,1        	 /* bit 1 */
INDF02                            INDF0,2          /* bit 2 */
INDF03                            INDF0,3        	 /* bit 3 */
INDF04                            INDF0,4        	 /* bit 4 */
INDF05                            INDF0,5        	 /* bit 5 */
INDF06                            INDF0,6        	 /* bit 6 */
INDF07                            INDF0,7        	 /* bit 7 */
INDF10                            INDF1,0          /* bit 0 */
INDF11                            INDF1,1          /* bit 1 */
INDF12                            INDF1,2          /* bit 2 */
INDF13                            INDF1,3          /* bit 3 */
INDF14                            INDF1,4          /* bit 4 */
INDF15                            INDF1,5          /* bit 5 */
INDF16                            INDF1,6          /* bit 6 */
INDF17                            INDF1,7          /* bit 7 */
INDF20                            INDF2,0          /* bit 0 */
INDF21                            INDF2,1          /* bit 1 */
INDF22                            INDF2,2          /* bit 2 */
INDF23                            INDF2,3          /* bit 3 */
INDF24                            INDF2,4          /* bit 4 */
INDF25                            INDF2,5          /* bit 5 */
INDF26                            INDF2,6          /* bit 6 */
INDF27                            INDF2,7          /* bit 7 */
INDF30                            INDF3,0          /* bit 0 */
INDF31                            INDF3,1          /* bit 1 */
INDF32                            INDF3,2          /* bit 2 */
INDF33                            INDF3,3          /* bit 3 */
INDF34                            INDF3,4          /* bit 4 */
INDF35                            INDF3,5          /* bit 5 */
INDF36                            INDF3,6          /* bit 6 */
INDF37                            INDF3,7          /* bit 7 */
INT0IE                            INTE,2            /* bit 2 */
INT0IF                            INTF,2       	  /* bit 2 */
INT1IE                            INTE,3            /* bit 3 */
INT1IF                            INTF,3          /* bit 3 */
IREFEN                            LEDCR1,2         /* bit 2 */
KBIE                              INTE,4            /* bit 4 */
KBIF                              INTF,4          /* bit 4 */
LEDEN                             LEDCR0,7         /* bit 7 */
LFEN                              OSCM,1           /* bit 1 */
MINT00                            MCR,0           /* bit 0 */
MINT01                            MCR,1           /* bit 1 */
MINT10                            MCR,2           /* bit 2 */
MINT11                            MCR,3           /* bit 3 */
P00D                              IOP0,0           /* bit 0 */
P00OE                             OEP0,0          /* bit 0 */
P00PD                             PDP0,0            /* bit 0 */
P00PU                             PUP0,0          /* bit 0 */
P01D                              IOP0,1           /* bit 1 */
P01OE                             OEP0,1          /* bit 1 */
P01PD                             PDP0,1            /* bit 1 */
P01PU                             PUP0,1          /* bit 1 */
P02D                              IOP0,2           /* bit 2 */
P02OE                             OEP0,2          /* bit 2 */
P02PD                             PDP0,2            /* bit 2 */
P02PU                             PUP0,2          /* bit 2 */
P03D                              IOP0,3           /* bit 3 */
P03OE                             OEP0,3          /* bit 3 */
P03PD                             PDP0,3            /* bit 3 */
P03PU                             PUP0,3          /* bit 3 */
P04D                              IOP0,4           /* bit 4 */
P04OE                             OEP0,4          /* bit 4 */
P04PD                             PDP0,4            /* bit 4 */
P04PU                             PUP0,4          /* bit 4 */
P05D                              IOP0,5           /* bit 5 */
P05OE                             OEP0,5          /* bit 5 */
P05PD                             PDP0,5            /* bit 5 */
P05PU                             PUP0,5          /* bit 5 */
P06D                              IOP0,6           /* bit 6 */
P06OE                             OEP0,6          /* bit 6 */
P06PD                             PDP0,6            /* bit 6 */
P06PU                             PUP0,6          /* bit 6 */
P07D                              IOP0,7           /* bit 7 */
P07OE                             OEP0,7          /* bit 7 */
P07PD                             PDP0,7            /* bit 7 */
P07PU                             PUP0,7          /* bit 7 */
P10D                              IOP1,0           /* bit 0 */
P10OE                             OEP1,0           /* bit 0 */
P10PD                             PDP1,0      	   /* bit 0 */
P10PU                             PUP1,0           /* bit 0 */
P11D                              IOP1,1           /* bit 1 */
P11OE                             OEP1,1           /* bit 1 */
P11PD                             PDP1,1      	   /* bit 1 */
P11PU                             PUP1,1           /* bit 1 */
P12D                              IOP1,2           /* bit 2 */
P12OE                             OEP1,2           /* bit 2 */
P12PD                             PDP1,2      	   /* bit 2 */
P12PU                             PUP1,2           /* bit 2 */
P20D                              IOP2,0           /* bit 0 */
P20OE                             OEP2,0          /* bit 0 */
P20PD                             PDP2,0          /* bit 0 */
P20PU                             PUP2,0          /* bit 0 */
P21D                              IOP2,1           /* bit 1 */
P21OE                             OEP2,1          /* bit 1 */
P21PD                             PDP2,1      	  /* bit 1 */
P21PU                             PUP2,1          /* bit 1 */
P22D                              IOP2,2           /* bit 2 */
P22OE                             OEP2,2          /* bit 2 */
P22PD                             PDP2,2      	  /* bit 2 */
P22PU                             PUP2,2          /* bit 2 */
P23D                              IOP2,3           /* bit 3 */
P23OE                             OEP2,3          /* bit 3 */
P23PD                             PDP2,3      	  /* bit 3 */
P23PU                             PUP2,3          /* bit 3 */
P24D                              IOP2,4           /* bit 4 */
P24OE                             OEP2,4          /* bit 4 */
P24PD                             PDP2,4      	  /* bit 4 */
P24PU                             PUP2,4          /* bit 4 */
P25D                              IOP2,5           /* bit 5 */
P25OE                             OEP2,5          /* bit 5 */
P25PD                             PDP2,5      	  /* bit 5 */
P25PU                             PUP2,5          /* bit 5 */
P26D                              IOP2,6           /* bit 6 */
P26OE                             OEP2,6          /* bit 6 */
P26PD                             PDP2,6      	  /* bit 6 */
P26PU                             PUP2,6          /* bit 6 */
P30D                              IOP3,0          /* bit 0 */
P30OE                             OEP3,0          /* bit 0 */
P30PD                             PDP3,0      	  /* bit 0 */
P30PU                             PUP3,0          /* bit 0 */
P31D                              IOP3,1          /* bit 1 */
P31OE                             OEP3,1          /* bit 1 */
P31PD                             PDP3,1      	  /* bit 1 */
P31PU                             PUP3,1          /* bit 1 */
P32D                              IOP3,2          /* bit 2 */
P32OE                             OEP3,2          /* bit 2 */
P32PD                             PDP3,2      	  /* bit 2 */
P32PU                             PUP3,2          /* bit 2 */
P33D                              IOP3,3          /* bit 3 */
P33OE                             OEP3,3          /* bit 3 */
P33PD                             PDP3,3      	  /* bit 3 */
P33PU                             PUP3,3          /* bit 3 */
P34D                              IOP3,4          /* bit 4 */
P34OE                             OEP3,4          /* bit 4 */
P34PD                             PDP3,4      	  /* bit 4 */
P34PU                             PUP3,4          /* bit 4 */
P35D                              IOP3,5          /* bit 5 */
P35OE                             OEP3,5          /* bit 5 */
P35PD                             PDP3,5      	  /* bit 5 */
P35PU                             PUP3,5          /* bit 5 */
P36D                              IOP3,6          /* bit 6 */
P36OE                             OEP3,6          /* bit 6 */
P36PD                             PDP3,6      	  /* bit 6 */
P36PU                             PUP3,6          /* bit 6 */
P37D                              IOP3,7          /* bit 7 */
P37OE                             OEP3,7          /* bit 7 */
P37PD                             PDP3,7      	  /* bit 7 */
P37PU                             PUP3,7          /* bit 7 */
PC0                               PCL,0          /* bit 0 */
PC1                               PCL,1          /* bit 1 */
PC2                               PCL,2          /* bit 2 */
PC3                               PCL,3          /* bit 3 */
PC4                               PCL,4          /* bit 4 */
PC5                               PCL,5          /* bit 5 */
PC6                               PCL,6          /* bit 6 */
PC7                               PCL,7          /* bit 7 */
PD                                MCR,4           /* bit 4 */
PWM0OE                            T0CR,6           /* bit 6 */
PWM1OE                            T1CR,6    	      /* bit 6 */
SEGIOS1                           LEDIOS1,0          /* bit 0 */
SEGIOS2                           LEDIOS1,1          /* bit 1 */
SEGIOS3                           LEDIOS1,2          /* bit 2 */
SEGIOS4                           LEDIOS1,3          /* bit 3 */
SEGIOS5                           LEDIOS1,4          /* bit 4 */
SEGIOS6                           LEDIOS1,5          /* bit 5 */
SEGIOS7                           LEDIOS1,6          /* bit 6 */
SEGIOS8                           LEDIOS1,7          /* bit 7 */
STBH                              OSCM,4           /* bit 4 */
STBL                              OSCM,5           /* bit 5 */
T0C0                              T0CNT,0          /* bit 0 */
T0C1                              T0CNT,1          /* bit 1 */
T0C2                              T0CNT,2          /* bit 2 */
T0C3                              T0CNT,3          /* bit 3 */
T0C4                              T0CNT,4          /* bit 4 */
T0C5                              T0CNT,5          /* bit 5 */
T0C6                              T0CNT,6          /* bit 6 */
T0C7                              T0CNT,7          /* bit 7 */
T0DATA0                           T0DATA,0        	/* bit 0 */
T0DATA1                           T0DATA,1       	  /* bit 1 */
T0DATA2                           T0DATA,2      	  /* bit 2 */
T0DATA3                           T0DATA,3      	  /* bit 3 */
T0DATA4                           T0DATA,4      	  /* bit 4 */
T0DATA5                           T0DATA,5      	  /* bit 5 */
T0DATA6                           T0DATA,6      	  /* bit 6 */
T0DATA7                           T0DATA,7      	  /* bit 7 */
T0IE                              INTE,0    	      /* bit 0 */
T0IF                              INTF,0         	/* bit 0 */
T0LOAD0                           T0LOAD,0      /* bit 0 */
T0LOAD1                           T0LOAD,1      /* bit 1 */
T0LOAD2                           T0LOAD,2      /* bit 2 */
T0LOAD3                           T0LOAD,3      /* bit 3 */
T0LOAD4                           T0LOAD,4      /* bit 4 */
T0LOAD5                           T0LOAD,5      /* bit 5 */
T0LOAD6                           T0LOAD,6      /* bit 6 */
T0LOAD7                           T0LOAD,7      /* bit 7 */
T0PR0                             T0CR,0           /* bit 0 */
T0PR1                             T0CR,1           /* bit 1 */
T0PR2                             T0CR,2           /* bit 2 */
T0PTS0                            T0CR,3           /* bit 3 */
T0PTS1                            T0CR,4           /* bit 4 */
T1C0                              T1CNT,0          /* bit 0 */
T1C1                              T1CNT,1          /* bit 1 */
T1C2                              T1CNT,2          /* bit 2 */
T1C3                              T1CNT,3          /* bit 3 */
T1C4                              T1CNT,4          /* bit 4 */
T1C5                              T1CNT,5          /* bit 5 */
T1C6                              T1CNT,6          /* bit 6 */
T1C7                              T1CNT,7          /* bit 7 */
T1DATA0                           T1DATA,0       	/* bit 0 */
T1DATA1                           T1DATA,1      	/* bit 1 */
T1DATA2                           T1DATA,2     	  /* bit 2 */
T1DATA3                           T1DATA,3     	  /* bit 3 */
T1DATA4                           T1DATA,4     	  /* bit 4 */
T1DATA5                           T1DATA,5     	  /* bit 5 */
T1DATA6                           T1DATA,6     	  /* bit 6 */
T1DATA7                           T1DATA,7     	  /* bit 7 */
T1IE                              INTE,1            /* bit 1 */
T1IF                              INTF,1          /* bit 1 */
T1LOAD0                           T1LOAD,0       	/* bit 0 */
T1LOAD1                           T1LOAD,1      	/* bit 1 */
T1LOAD2                           T1LOAD,2     	  /* bit 2 */
T1LOAD3                           T1LOAD,3     	  /* bit 3 */
T1LOAD4                           T1LOAD,4     	  /* bit 4 */
T1LOAD5                           T1LOAD,5     	  /* bit 5 */
T1LOAD6                           T1LOAD,6     	  /* bit 6 */
T1LOAD7                           T1LOAD,7     	  /* bit 7 */
T1PR0                             T1CR,0           	/* bit 0 */
T1PR1                             T1CR,1           	/* bit 1 */
T1PR2                             T1CR,2           	/* bit 2 */
T1PTS0                            T1CR,3      	    /* bit 3 */
T1PTS1                            T1CR,4      	    /* bit 4 */
T2C0                              T2CNTL,0         /* bit 0 */
T2C1                              T2CNTL,1         /* bit 1 */
T2C10                             T2CNTH,2           /* bit 2 */
T2C11                             T2CNTH,3           /* bit 3 */
T2C12                             T2CNTH,4           /* bit 4 */
T2C13                             T2CNTH,5           /* bit 5 */
T2C14                             T2CNTH,6           /* bit 6 */
T2C15                             T2CNTH,7           /* bit 7 */
T2C2                              T2CNTL,2         /* bit 2 */
T2C3                              T2CNTL,3         /* bit 3 */
T2C4                              T2CNTL,4         /* bit 4 */
T2C5                              T2CNTL,5         /* bit 5 */
T2C6                              T2CNTL,6         /* bit 6 */
T2C7                              T2CNTL,7         /* bit 7 */
T2C8                              T2CNTH,0           /* bit 0 */
T2C9                              T2CNTH,1           /* bit 1 */
T2LOAD0                           T2LOADL,0       	/* bit 0 */
T2LOAD1                           T2LOADL,1      	  /* bit 1 */
T2LOAD10                          T2LOADH,2     	  /* bit 2 */
T2LOAD11                          T2LOADH,3     	  /* bit 3 */
T2LOAD12                          T2LOADH,4     	  /* bit 4 */
T2LOAD13                          T2LOADH,5     	  /* bit 5 */
T2LOAD14                          T2LOADH,6     	  /* bit 6 */
T2LOAD15                          T2LOADH,7     	  /* bit 7 */
T2LOAD2                           T2LOADL,2     	  /* bit 2 */
T2LOAD3                           T2LOADL,3     	  /* bit 3 */
T2LOAD4                           T2LOADL,4     	  /* bit 4 */
T2LOAD5                           T2LOADL,5     	  /* bit 5 */
T2LOAD6                           T2LOADL,6     	  /* bit 6 */
T2LOAD7                           T2LOADL,7     	  /* bit 7 */
T2LOAD8                           T2LOADH,0       	/* bit 0 */
T2LOAD9                           T2LOADH,1      	  /* bit 1 */
T2MODE                            T2CR,5    	      /* bit 5 */
T2PR0                             T2CR,0           	/* bit 0 */
T2PR1                             T2CR,1           	/* bit 1 */
T2PR2                             T2CR,2           	/* bit 2 */
T2PTS0                            T2CR,3      	    /* bit 3 */
T2PTS1                            T2CR,4      	    /* bit 4 */
TC0EN                             T0CR,7           /* bit 7 */
TC1EN                             T1CR,7        	  /* bit 7 */
TC2EN                             T2CR,7        	  /* bit 7 */
TK0C0                             TK0CNTL,0        	 /* bit 0 */
TK0C1                             TK0CNTL,1      	   /* bit 1 */
TK0C10                            TK0CNTH,2         /* bit 2 */
TK0C11                            TK0CNTH,3         /* bit 3 */
TK0C12                            TK0CNTH,4         /* bit 4 */
TK0C13                            TK0CNTH,5         /* bit 5 */
TK0C14                            TK0CNTH,6         /* bit 6 */
TK0C15                            TK0CNTH,7         /* bit 7 */
TK0C2                             TK0CNTL,2     	   /* bit 2 */
TK0C3                             TK0CNTL,3      	   /* bit 3 */
TK0C4                             TK0CNTL,4     	   /* bit 4 */
TK0C5                             TK0CNTL,5      	   /* bit 5 */
TK0C6                             TK0CNTL,6      	   /* bit 6 */
TK0C7                             TK0CNTL,7     	   /* bit 7 */
TK0C8                             TK0CNTH,0         /* bit 0 */
TK0C9                             TK0CNTH,1         /* bit 1 */
TK0CLR                            TK0CR0,3       	  /* bit 3 */
TK0FL0                            TK0CR1,4            /* bit 4 */
TK0FL1                            TK0CR1,5            /* bit 5 */
TK0FQ0                            TK0CR0,0       	  /* bit 0 */
TK0FQ1                            TK0CR0,1       	  /* bit 1 */
TK0FQ2                            TK0CR0,2       	  /* bit 2 */
TK0IE                             TK0CR1,6           /* bit 6 */
TK0IF                             TK0CR1,7           /* bit 7 */
TK0IO0                            TK0CR2,0          /* bit 0 */
TK0IO1                            TK0CR2,1          /* bit 1 */
TK0IO2                            TK0CR2,2          /* bit 2 */
TK0IO3                            TK0CR2,3          /* bit 3 */
TK0IO4                            TK0CR2,4          /* bit 4 */
TK0IO5                            TK0CR2,5          /* bit 5 */
TK0IO6                            TK0CR2,6          /* bit 6 */
TK0IO7                            TK0CR2,7          /* bit 7 */
TK0JE                             TK0CR0,5      	  /* bit 5 */
TK0K0                             TK0CR1,0            /* bit 0 */
TK0K1                             TK0CR1,1            /* bit 1 */
TK0K2                             TK0CR1,2            /* bit 2 */
TK0RCE                            TK0CR0,4     	    /* bit 4 */
TK1C0                             TK1CNTL,0        	 /* bit 0 */
TK1C1                             TK1CNTL,1      	   /* bit 1 */
TK1C10                            TK1CNTH,2          /* bit 2 */
TK1C11                            TK1CNTH,3          /* bit 3 */
TK1C12                            TK1CNTH,4          /* bit 4 */
TK1C13                            TK1CNTH,5          /* bit 5 */
TK1C14                            TK1CNTH,6          /* bit 6 */
TK1C15                            TK1CNTH,7          /* bit 7 */
TK1C2                             TK1CNTL,2     	   /* bit 2 */
TK1C3                             TK1CNTL,3      	   /* bit 3 */
TK1C4                             TK1CNTL,4     	   /* bit 4 */
TK1C5                             TK1CNTL,5      	   /* bit 5 */
TK1C6                             TK1CNTL,6      	   /* bit 6 */
TK1C7                             TK1CNTL,7     	   /* bit 7 */
TK1C8                             TK1CNTH,0          /* bit 0 */
TK1C9                             TK1CNTH,1          /* bit 1 */
TK1CLR                            TK1CR0,3       	  /* bit 3 */
TK1FL0                            TK0CR1,4            /* bit 4 */
TK1FL1                            TK0CR1,5            /* bit 5 */
TK1FQ0                            TK1CR0,0       	  /* bit 0 */
TK1FQ1                            TK1CR0,1       	  /* bit 1 */
TK1FQ2                            TK1CR0,2       	  /* bit 2 */
TK1IE                             TK0CR1,6            /* bit 6 */
TK1IF                             TK0CR1,7            /* bit 7 */
TK1IO0                            TK1CR2,0          /* bit 0 */
TK1IO1                            TK1CR2,1          /* bit 1 */
TK1IO2                            TK1CR2,2          /* bit 2 */
TK1IO3                            TK1CR2,3          /* bit 3 */
TK1IO4                            TK1CR2,4          /* bit 4 */
TK1IO5                            TK1CR2,5          /* bit 5 */
TK1IO6                            TK1CR2,6          /* bit 6 */
TK1IO7                            TK1CR2,7          /* bit 7 */
TK1JE                             TK1CR0,5      	  /* bit 5 */
TK1K0                             TK0CR1,0            /* bit 0 */
TK1K1                             TK0CR1,1            /* bit 1 */
TK1K2                             TK0CR1,2            /* bit 2 */
TK1RCE                            TK1CR0,4     	    /* bit 4 */
TO                                MCR,5           /* bit 5 */
VREFP_PHEN                        ADCR1,0   	   /* bit 0 */
Z                                 STATUS,2         /* bit 2 */

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

