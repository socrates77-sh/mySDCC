gpasm-2.0.0_beta2 (Nov  6 2017)_mulint.asm        2017-11-14  18:38:43         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : SinoMCU ANSI-C Compiler
                      00003 ; Version 1.0.0 (Sep 28 2017) (MINGW32)
                      00004 ; This file was generated Tue Nov 14 18:38:43 2017
                      00005 ;--------------------------------------------------------
                      00006 ; MC35 port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc_mc35/_mulint.c"
                      00009         list    p=2K7041
                      00010         radix dec
                      00011         include "2K7041.inc"
                      00001                 LIST
                      00002 ;mc35p7041.inc    Standard Header File, Version 1.00 by Sinomcu
                      00076                 LIST
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015 
                      00016         extern STK06
                      00017         extern STK05
                      00018         extern STK04
                      00019         extern STK03
                      00020         extern STK02
                      00021         extern STK01
                      00022         extern STK00
                      00023 ;--------------------------------------------------------
                      00024 ; global declarations
                      00025 ;--------------------------------------------------------
                      00026         global  __mulint
                      00027 
                      00028 ;--------------------------------------------------------
                      00029 ; global definitions
                      00030 ;--------------------------------------------------------
                      00031 ;--------------------------------------------------------
                      00032 ; absolute symbol definitions
                      00033 ;--------------------------------------------------------
                      00034 ;--------------------------------------------------------
                      00035 ; compiler-defined variables
                      00036 ;--------------------------------------------------------
                      00037 UDL__mulint_0   udata
0000                  00038 r0x1001 res     1
0000                  00039 r0x1000 res     1
0001                  00040 r0x1003 res     1
0001                  00041 r0x1002 res     1
0002                  00042 r0x1004 res     1
0002                  00043 r0x1005 res     1
0003                  00044 r0x1006 res     1
0003                  00045 r0x1007 res     1
0004                  00046 r0x1008 res     1
0004                  00047 r0x100A res     1
0005                  00048 r0x1009 res     1
                      00049 ;--------------------------------------------------------
                      00050 ; initialized data
                      00051 ;--------------------------------------------------------
                      00052 
                      00053 ;@Allocation info for local variables in function '_mulint'
                      00054 ;@_mulint b                         Allocated to registers r0x1003 r0x1002 ;size:2
                      00055 ;@_mulint a                         Allocated to registers r0x1001 r0x1000 ;size:2
                      00056 ;@_mulint result                    Allocated to registers r0x1004 r0x1005 ;size:2
                      00057 ;@_mulint i                         Allocated to registers r0x1006 ;size:1
                      00058 ;@end Allocation info for local variables in function '_mulint';
                      00059 
                      00060 ;--------------------------------------------------------
                      00061 ; overlayable items in internal ram 
                      00062 ;--------------------------------------------------------
                      00063 ;       udata_ovr
                      00064 ;--------------------------------------------------------
                      00065 ; code
                      00066 ;--------------------------------------------------------
                      00067 code__mulint    code
                      00068 ;***
                      00069 ;  pBlock Stats: dbName = C
                      00070 ;***
                      00071 ;entry:  __mulint       ;Function start
                      00072 ; 2 exit points
                      00073 ;has an exit
                      00074 ;14 compiler assigned registers:
                      00075 ;   r0x1000
                      00076 ;   STK00
                      00077 ;   r0x1001
                      00078 ;   STK01
                      00079 ;   r0x1002
                      00080 ;   STK02
                      00081 ;   r0x1003
                      00082 ;   r0x1004
                      00083 ;   r0x1005
                      00084 ;   r0x1006
                      00085 ;   r0x1007
                      00086 ;   r0x1008
                      00087 ;   r0x1009
                      00088 ;   r0x100A
                      00089 ;; Starting pCode block
                      00090 ;;[ICODE] ../libsdcc_mc35/_mulint.c:33:  _entry($16) :
                      00091 ;;[ICODE] ../libsdcc_mc35/_mulint.c:33:         proc __mulint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
0000                  00092 __mulint        ;Function start
                      00093 ; 2 exit points
                      00094 ;;[ICODE] ../libsdcc_mc35/_mulint.c:33: iTemp0 [k2 lr3:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_a_1_1}[r0x1000 r0x1001 ] = recv __mulint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
                      00095 ;       .line   33; "../libsdcc_mc35/_mulint.c" _mulint (int a, int b)
0000   1F00           00096         MOVRA   r0x1000
0001   1E00           00097         MOVAR   STK00
0002   1F00           00098         MOVRA   r0x1001
                      00099 ;;[ICODE] ../libsdcc_mc35/_mulint.c:33: iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_b_1_1}[r0x1002 r0x1003 ] = recv __mulint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
0003   1E00           00100         MOVAR   STK01
0004   1F00           00101         MOVRA   r0x1002
0005   1E00           00102         MOVAR   STK02
0006   1F00           00103         MOVRA   r0x1003
                      00104 ;;[ICODE] ../libsdcc_mc35/_mulint.c:35:         iTemp2 [k6 lr5:32 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_result_1_2}[r0x1004 r0x1005 ] := 0x0 {int literal}
                      00105 ;       .line   35; "../libsdcc_mc35/_mulint.c" int result = 0;
0007   2B00           00106         CLRR    r0x1004
0008   2B00           00107         CLRR    r0x1005
                      00108 ;;[ICODE] ../libsdcc_mc35/_mulint.c:39:         iTemp3 [k8 lr6:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __mulint_i_1_2}[r0x1006 ] := 0x8 {unsigned-char literal}
                      00109 ;       .line   39; "../libsdcc_mc35/_mulint.c" for (i = 0; i < 8u; i++) {
0009   2D08           00110         MOVAI   0x08
000A   1F00           00111         MOVRA   r0x1006
                      00112 ;;[ICODE] ../libsdcc_mc35/_mulint.c:39:  _forcontinue_0($14) :
                      00113 ;;[ICODE] ../libsdcc_mc35/_mulint.c:41:         iTemp4 [k10 lr9:10 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x1007 r0x1008 ] = (unsigned-int register)iTemp0 [k2 lr3:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_a_1_1}[r0x1000 r0x1001 ]
000B                  00114 _00118_DS_
                      00115 ;       .line   41; "../libsdcc_mc35/_mulint.c" if (a & 0x0001u) result += b;
000B   1E00           00116         MOVAR   r0x1001
000C   1F00           00117         MOVRA   r0x1007
000D   1E00           00118         MOVAR   r0x1000
000E   1F00           00119         MOVRA   r0x1008
                      00120 ;;[ICODE] ../libsdcc_mc35/_mulint.c:41:         iTemp5 [k11 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} = iTemp4 [k10 lr9:10 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x1007 r0x1008 ] & 0x1 {const-unsigned-int literal}
000F   5800           00121         JBSET   r0x1007,0
0010   8000           00122         GOTO    _00109_DS_
                      00123 ;;[ICODE] ../libsdcc_mc35/_mulint.c:41:         if iTemp5 [k11 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} == 0 goto _andif_0($5)
                      00124 ;;[ICODE] ../libsdcc_mc35/_mulint.c:41:         iTemp2 [k6 lr5:32 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_result_1_2}[r0x1004 r0x1005 ] = iTemp2 [k6 lr5:32 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_result_1_2}[r0x1004 r0x1005 ] + iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_b_1_1}[r0x1002 r0x1003 ]
0011   1E00           00125         MOVAR   r0x1003
0012   1300           00126         ADDRA   r0x1004
0013   1E00           00127         MOVAR   r0x1002
0014   5086           00128         JBCLR   STATUS,0
0015   1500           00129         JZAR    r0x1002
0016   1300           00130         ADDRA   r0x1005
                      00131 ;;[ICODE] ../libsdcc_mc35/_mulint.c:42:  _andif_0($5) :
                      00132 ;;[ICODE] ../libsdcc_mc35/_mulint.c:42:         iTemp7 [k13 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] = (unsigned-long-int register)iTemp0 [k2 lr3:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_a_1_1}[r0x1000 r0x1001 ]
0017                  00133 _00109_DS_
                      00134 ;       .line   42; "../libsdcc_mc35/_mulint.c" if (sizeof (a) > 1 && (a & 0x00000100ul)) result += (b << 8u);
0017   1E00           00135         MOVAR   r0x1001
0018   1F00           00136         MOVRA   r0x1007
0019   1E00           00137         MOVAR   r0x1000
001A   1F00           00138         MOVRA   r0x1008
001B   2D00           00139         MOVAI   0x00
001C   5700           00140         JBCLR   r0x1008,7
001D   2DFF           00141         MOVAI   0xff
001E   1F00           00142         MOVRA   r0x1009
001F   1F00           00143         MOVRA   r0x100A
                      00144 ;;[ICODE] ../libsdcc_mc35/_mulint.c:42:         iTemp8 [k14 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} = iTemp7 [k13 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] & 0x100 {const-unsigned-long-int literal}
0020   5800           00145         JBSET   r0x1008,0
0021   8000           00146         GOTO    _00114_DS_
                      00147 ;;[ICODE] ../libsdcc_mc35/_mulint.c:42:         if iTemp8 [k14 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} == 0 goto _iffalse_3($10)
                      00148 ;;[ICODE] ../libsdcc_mc35/_mulint.c:42:         iTemp10 [k16 lr18:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x1007 r0x1008 ] = iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_b_1_1}[r0x1002 r0x1003 ] << 0x8 {const-unsigned-int literal}
                      00149 ;;100   MOVAR   r0x1003
0022   2B00           00150         CLRR    r0x1007
                      00151 ;;[ICODE] ../libsdcc_mc35/_mulint.c:42:         iTemp11 [k17 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x1009 r0x100A ] = (unsigned-int register)iTemp2 [k6 lr5:32 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_result_1_2}[r0x1004 r0x1005 ]
0023   1E00           00152         MOVAR   r0x1004
0024   1F00           00153         MOVRA   r0x100A
0025   1E00           00154         MOVAR   r0x1005
0026   1F00           00155         MOVRA   r0x1005
0027   1F00           00156         MOVRA   r0x1009
                      00157 ;;[ICODE] ../libsdcc_mc35/_mulint.c:42:         iTemp2 [k6 lr5:32 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_result_1_2}[r0x1004 r0x1005 ] = iTemp11 [k17 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x1009 r0x100A ] + iTemp10 [k16 lr18:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x1007 r0x1008 ]
0028   2D00           00158         MOVAI   0x00
0029   1200           00159         ADDAR   r0x100A
002A   1F00           00160         MOVRA   r0x1004
                      00161 ;;101   MOVAR   r0x1009
                      00162 ;;99    MOVAR   r0x1008
002B   1E00           00163         MOVAR   r0x1003
002C   1F00           00164         MOVRA   r0x1008
002D   5086           00165         JBCLR   STATUS,0
002E   1500           00166         JZAR    r0x1008
002F   1300           00167         ADDRA   r0x1005
                      00168 ;;[ICODE] ../libsdcc_mc35/_mulint.c:44:  _iffalse_3($10) :
                      00169 ;;[ICODE] ../libsdcc_mc35/_mulint.c:45:         iTemp19 [k25 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x1007 r0x1008 ] = (unsigned-int fixed)iTemp0 [k2 lr3:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_a_1_1}[r0x1000 r0x1001 ]
0030                  00170 _00114_DS_
                      00171 ;       .line   45; "../libsdcc_mc35/_mulint.c" a = ((unsigned int)a) >> 1u;
0030   1E00           00172         MOVAR   r0x1001
0031   1F00           00173         MOVRA   r0x1007
0032   1E00           00174         MOVAR   r0x1000
0033   1F00           00175         MOVRA   r0x1008
                      00176 ;;[ICODE] ../libsdcc_mc35/_mulint.c:45:         iTemp0 [k2 lr3:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_a_1_1}[r0x1000 r0x1001 ] = iTemp19 [k25 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x1007 r0x1008 ] >> 0x1 {const-unsigned-int literal}
                      00177 ;;shiftRight_Left2ResultLit:5270: shCount=1, size=2, sign=0, same=0, offr=0
0034   4086           00178         BCLR    STATUS,0
0035   0800           00179         RRAR    r0x1008
0036   1F00           00180         MOVRA   r0x1000
0037   0800           00181         RRAR    r0x1007
0038   1F00           00182         MOVRA   r0x1001
                      00183 ;;[ICODE] ../libsdcc_mc35/_mulint.c:46:         iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_b_1_1}[r0x1002 r0x1003 ] = iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_b_1_1}[r0x1002 r0x1003 ] << 0x1 {const-unsigned-int literal}
                      00184 ;       .line   46; "../libsdcc_mc35/_mulint.c" b <<= 1u;
0039   4086           00185         BCLR    STATUS,0
003A   0B00           00186         RLR     r0x1003
003B   0B00           00187         RLR     r0x1002
                      00188 ;;[ICODE] ../libsdcc_mc35/_mulint.c:46:         iTemp23 [k29 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x1007 ] = (char register)iTemp3 [k8 lr6:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __mulint_i_1_2}[r0x1006 ]
003C   1E00           00189         MOVAR   r0x1006
003D   1F00           00190         MOVRA   r0x1007
                      00191 ;;[ICODE] ../libsdcc_mc35/_mulint.c:46:         iTemp3 [k8 lr6:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __mulint_i_1_2}[r0x1006 ] = iTemp23 [k29 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x1007 ] - 0x1 {const-char literal}
003E   2500           00192         DJZAR   r0x1007
003F   0000           00193         NOP     
0040   1F00           00194         MOVRA   r0x1006
                      00195 ;;[ICODE] ../libsdcc_mc35/_mulint.c:39:         if iTemp3 [k8 lr6:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __mulint_i_1_2}[r0x1006 ] != 0 goto _forcontinue_0($14)
                      00196 ;       .line   39; "../libsdcc_mc35/_mulint.c" for (i = 0; i < 8u; i++) {
0041   2D00           00197         MOVAI   0x00
0042   1800           00198         ORAR    r0x1006
0043   5A86           00199         JBSET   STATUS,2
0044   8000           00200         GOTO    _00118_DS_
                      00201 ;;[ICODE] ../libsdcc_mc35/_mulint.c:49:         ret iTemp2 [k6 lr5:32 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_result_1_2}[r0x1004 r0x1005 ]
                      00202 ;       .line   49; "../libsdcc_mc35/_mulint.c" return result;
0045   1E00           00203         MOVAR   r0x1004
0046   1F00           00204         MOVRA   STK00
0047   1E00           00205         MOVAR   r0x1005
                      00206 ;;[ICODE] ../libsdcc_mc35/_mulint.c:49:  _return($15) :
                      00207 ;;[ICODE] ../libsdcc_mc35/_mulint.c:49:         eproc __mulint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
0048   0E00           00208         RETURN  
                      00209 ; exit point of __mulint
                      00210 
                      00211 
                      00212 ;       code size estimation:
                      00213 ;          73+    0 =    73 instructions (  146 byte)
                      00214 
                      00215         end
gpasm-2.0.0_beta2 (Nov  6 2017)_mulint.asm        2017-11-14  18:38:43         PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

C                                 00000002
DC                                00000001
FSR                               00000083
FSR0                              00000083
FSR1                              00000084
HIBYTE                            00000082
INDF                              000000E7
PCH                               000000CF
PCL                               000000CE
STATUS                            00000086
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
Z                                 00000000
_00109_DS_                        00000017
_00114_DS_                        00000030
_00118_DS_                        0000000B
_CONFIG0                          00008000
_CONFIG1                          00008001
__2K7041                          00000001
__mulint                          00000000
r0x1000                           00000001
r0x1001                           00000000
r0x1002                           00000003
r0x1003                           00000002
r0x1004                           00000004
r0x1005                           00000005
r0x1006                           00000006
r0x1007                           00000007
r0x1008                           00000008
r0x1009                           0000000A
r0x100A                           00000009

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

