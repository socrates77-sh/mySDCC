gpasm-2.0.0_beta2 (Nov  6 2017)fsneq.asm          2017-11-14  18:38:40         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : SinoMCU ANSI-C Compiler
                      00003 ; Version 1.0.0 (Sep 28 2017) (MINGW32)
                      00004 ; This file was generated Tue Nov 14 18:38:40 2017
                      00005 ;--------------------------------------------------------
                      00006 ; MC35 port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc_mc35/fsneq.c"
                      00009         list    p=2K7041
                      00010         radix dec
                      00011         include "2K7041.inc"
                      00001                 LIST
                      00002 ;mc35p7041.inc    Standard Header File, Version 1.00 by Sinomcu
                      00076                 LIST
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015         extern  ___uchar2fs
                      00016         extern  ___schar2fs
                      00017         extern  ___uint2fs
                      00018         extern  ___sint2fs
                      00019         extern  ___ulong2fs
                      00020         extern  ___slong2fs
                      00021         extern  ___fs2uchar
                      00022         extern  ___fs2schar
                      00023         extern  ___fs2uint
                      00024         extern  ___fs2sint
                      00025         extern  ___fs2ulong
                      00026         extern  ___fs2slong
                      00027         extern  ___fsadd
                      00028         extern  ___fssub
                      00029         extern  ___fsmul
                      00030         extern  ___fsdiv
                      00031         extern  ___fslt
                      00032         extern  ___fseq
                      00033         extern  ___fsgt
                      00034 
                      00035         extern STK06
                      00036         extern STK05
                      00037         extern STK04
                      00038         extern STK03
                      00039         extern STK02
                      00040         extern STK01
                      00041         extern STK00
                      00042 ;--------------------------------------------------------
                      00043 ; global declarations
                      00044 ;--------------------------------------------------------
                      00045         global  ___fsneq
                      00046 
                      00047 ;--------------------------------------------------------
                      00048 ; global definitions
                      00049 ;--------------------------------------------------------
                      00050 ;--------------------------------------------------------
                      00051 ; absolute symbol definitions
                      00052 ;--------------------------------------------------------
                      00053 ;--------------------------------------------------------
                      00054 ; compiler-defined variables
                      00055 ;--------------------------------------------------------
                      00056 UDL_fsneq_0     udata
0000                  00057 r0x100B res     1
0000                  00058 r0x100A res     1
0001                  00059 r0x1009 res     1
0001                  00060 r0x1008 res     1
0002                  00061 r0x100F res     1
0002                  00062 r0x100E res     1
0003                  00063 r0x100D res     1
0003                  00064 r0x100C res     1
0004                  00065 ___fsneq_fl1_1_22       res     4
0006                  00066 ___fsneq_fl2_1_22       res     4
                      00067 ;--------------------------------------------------------
                      00068 ; initialized data
                      00069 ;--------------------------------------------------------
                      00070 
                      00071 ;@Allocation info for local variables in function '__fsneq'
                      00072 ;@__fsneq __uchar2fs                Allocated to registers ;size:2
                      00073 ;@__fsneq __schar2fs                Allocated to registers ;size:2
                      00074 ;@__fsneq __uint2fs                 Allocated to registers ;size:2
                      00075 ;@__fsneq __sint2fs                 Allocated to registers ;size:2
                      00076 ;@__fsneq __ulong2fs                Allocated to registers ;size:2
                      00077 ;@__fsneq __slong2fs                Allocated to registers ;size:2
                      00078 ;@__fsneq __fs2uchar                Allocated to registers ;size:2
                      00079 ;@__fsneq __fs2schar                Allocated to registers ;size:2
                      00080 ;@__fsneq __fs2uint                 Allocated to registers ;size:2
                      00081 ;@__fsneq __fs2sint                 Allocated to registers ;size:2
                      00082 ;@__fsneq __fs2ulong                Allocated to registers ;size:2
                      00083 ;@__fsneq __fs2slong                Allocated to registers ;size:2
                      00084 ;@__fsneq __fsadd                   Allocated to registers ;size:2
                      00085 ;@__fsneq __fssub                   Allocated to registers ;size:2
                      00086 ;@__fsneq __fsmul                   Allocated to registers ;size:2
                      00087 ;@__fsneq __fsdiv                   Allocated to registers ;size:2
                      00088 ;@__fsneq __fslt                    Allocated to registers ;size:2
                      00089 ;@__fsneq __fseq                    Allocated to registers ;size:2
                      00090 ;@__fsneq __fsgt                    Allocated to registers ;size:2
                      00091 ;@__fsneq a2                        Allocated to registers r0x100F r0x100E r0x100D r0x100C ;size:4
                      00092 ;@__fsneq a1                        Allocated to registers r0x100B r0x100A r0x1009 r0x1008 ;size:4
                      00093 ;@__fsneq fl1                       Allocated to registers ;size:4
                      00094 ;@__fsneq fl2                       Allocated to registers ;size:4
                      00095 ;@end Allocation info for local variables in function '__fsneq';
                      00096 
                      00097 ;--------------------------------------------------------
                      00098 ; overlayable items in internal ram 
                      00099 ;--------------------------------------------------------
                      00100 ;       udata_ovr
                      00101 ;--------------------------------------------------------
                      00102 ; code
                      00103 ;--------------------------------------------------------
                      00104 code_fsneq      code
                      00105 ;***
                      00106 ;  pBlock Stats: dbName = C
                      00107 ;***
                      00108 ;entry:  ___fsneq       ;Function start
                      00109 ; 2 exit points
                      00110 ;has an exit
                      00111 ;15 compiler assigned registers:
                      00112 ;   r0x1008
                      00113 ;   STK00
                      00114 ;   r0x1009
                      00115 ;   STK01
                      00116 ;   r0x100A
                      00117 ;   STK02
                      00118 ;   r0x100B
                      00119 ;   STK03
                      00120 ;   r0x100C
                      00121 ;   STK04
                      00122 ;   r0x100D
                      00123 ;   STK05
                      00124 ;   r0x100E
                      00125 ;   STK06
                      00126 ;   r0x100F
                      00127 ;; Starting pCode block
                      00128 ;;[ICODE] ../libsdcc_mc35/fsneq.c:55:  _entry($4) :
                      00129 ;;[ICODE] ../libsdcc_mc35/fsneq.c:55:   proc ___fsneq [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
0000                  00130 ___fsneq        ;Function start
                      00131 ; 2 exit points
                      00132 ;;[ICODE] ../libsdcc_mc35/fsneq.c:55: iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsneq_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ] = recv ___fsneq [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
                      00133 ;       .line   55; "../libsdcc_mc35/fsneq.c"   char __fsneq (float a1, float a2) _FS_REENTRANT
0000   1F00           00134         MOVRA   r0x1008
0001   1E00           00135         MOVAR   STK00
0002   1F00           00136         MOVRA   r0x1009
0003   1E00           00137         MOVAR   STK01
0004   1F00           00138         MOVRA   r0x100A
0005   1E00           00139         MOVAR   STK02
0006   1F00           00140         MOVRA   (___fsneq_fl1_1_22 + 0)
0007   1F00           00141         MOVRA   r0x100B
                      00142 ;;[ICODE] ../libsdcc_mc35/fsneq.c:55: iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsneq_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ] = recv ___fsneq [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
0008   1E00           00143         MOVAR   STK03
0009   1F00           00144         MOVRA   r0x100C
000A   1E00           00145         MOVAR   STK04
000B   1F00           00146         MOVRA   r0x100D
000C   1E00           00147         MOVAR   STK05
000D   1F00           00148         MOVRA   r0x100E
000E   1E00           00149         MOVAR   STK06
000F   1F00           00150         MOVRA   r0x100F
                      00151 ;;[ICODE] ../libsdcc_mc35/fsneq.c:59:   iTemp2 [k7 lr5:6 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsneq_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00152 ;;[ICODE] ../libsdcc_mc35/fsneq.c:59:   *(iTemp2 [k7 lr5:6 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsneq_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00153 ;;gen.c:6454: size=3/4, offset=0, AOP_TYPE(res)=8
                      00154 ;;99    MOVAR   r0x100B
                      00155 ;;gen.c:6454: size=2/4, offset=1, AOP_TYPE(res)=8
                      00156 ;       .line   59; "../libsdcc_mc35/fsneq.c"   fl1.f = a1;
0010   1E00           00157         MOVAR   r0x100A
0011   1F00           00158         MOVRA   (___fsneq_fl1_1_22 + 1)
                      00159 ;;gen.c:6454: size=1/4, offset=2, AOP_TYPE(res)=8
0012   1E00           00160         MOVAR   r0x1009
0013   1F00           00161         MOVRA   (___fsneq_fl1_1_22 + 2)
                      00162 ;;gen.c:6454: size=0/4, offset=3, AOP_TYPE(res)=8
0014   1E00           00163         MOVAR   r0x1008
0015   1F00           00164         MOVRA   (___fsneq_fl1_1_22 + 3)
                      00165 ;;[ICODE] ../libsdcc_mc35/fsneq.c:60:   iTemp4 [k11 lr7:8 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsneq_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00166 ;;[ICODE] ../libsdcc_mc35/fsneq.c:60:   *(iTemp4 [k11 lr7:8 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsneq_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ]
                      00167 ;;gen.c:6454: size=3/4, offset=0, AOP_TYPE(res)=8
                      00168 ;       .line   60; "../libsdcc_mc35/fsneq.c"   fl2.f = a2;
0016   1E00           00169         MOVAR   r0x100F
0017   1F00           00170         MOVRA   (___fsneq_fl2_1_22 + 0)
                      00171 ;;gen.c:6454: size=2/4, offset=1, AOP_TYPE(res)=8
0018   1E00           00172         MOVAR   r0x100E
0019   1F00           00173         MOVRA   (___fsneq_fl2_1_22 + 1)
                      00174 ;;gen.c:6454: size=1/4, offset=2, AOP_TYPE(res)=8
001A   1E00           00175         MOVAR   r0x100D
001B   1F00           00176         MOVRA   (___fsneq_fl2_1_22 + 2)
                      00177 ;;gen.c:6454: size=0/4, offset=3, AOP_TYPE(res)=8
001C   1E00           00178         MOVAR   r0x100C
001D   1F00           00179         MOVRA   (___fsneq_fl2_1_22 + 3)
                      00180 ;;[ICODE] ../libsdcc_mc35/fsneq.c:70:   iTemp6 [k14 lr9:10 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsneq_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00181 ;;[ICODE] ../libsdcc_mc35/fsneq.c:70:   iTemp8 [k17 lr10:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp6 [k14 lr9:10 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00182 ;       .line   70; "../libsdcc_mc35/fsneq.c"   if (fl1.l == fl2.l)
001E   1E00           00183         MOVAR   (___fsneq_fl1_1_22 + 0)
001F   1F00           00184         MOVRA   r0x100B
0020   1E00           00185         MOVAR   (___fsneq_fl1_1_22 + 1)
0021   1F00           00186         MOVRA   r0x100A
0022   1E00           00187         MOVAR   (___fsneq_fl1_1_22 + 2)
0023   1F00           00188         MOVRA   r0x1009
0024   1E00           00189         MOVAR   (___fsneq_fl1_1_22 + 3)
0025   1F00           00190         MOVRA   r0x1008
                      00191 ;;[ICODE] ../libsdcc_mc35/fsneq.c:70:   iTemp9 [k18 lr11:12 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsneq_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00192 ;;[ICODE] ../libsdcc_mc35/fsneq.c:70:   iTemp11 [k21 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] = @[iTemp9 [k18 lr11:12 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0026   1E00           00193         MOVAR   (___fsneq_fl2_1_22 + 0)
0027   1F00           00194         MOVRA   r0x100F
0028   1E00           00195         MOVAR   (___fsneq_fl2_1_22 + 1)
0029   1F00           00196         MOVRA   r0x100E
002A   1E00           00197         MOVAR   (___fsneq_fl2_1_22 + 2)
002B   1F00           00198         MOVRA   r0x100D
002C   1E00           00199         MOVAR   (___fsneq_fl2_1_22 + 3)
002D   1F00           00200         MOVRA   r0x100C
                      00201 ;;[ICODE] ../libsdcc_mc35/fsneq.c:70:   iTemp12 [k22 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp8 [k17 lr10:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] == iTemp11 [k21 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ]
002E   1E00           00202         MOVAR   r0x100F
002F   1B00           00203         XORAR   r0x100B
0030   5A86           00204         JBSET   STATUS,2
0031   8000           00205         GOTO    _00106_DS_
0032   1E00           00206         MOVAR   r0x100E
0033   1B00           00207         XORAR   r0x100A
0034   5A86           00208         JBSET   STATUS,2
0035   8000           00209         GOTO    _00106_DS_
0036   1E00           00210         MOVAR   r0x100D
0037   1B00           00211         XORAR   r0x1009
0038   5A86           00212         JBSET   STATUS,2
0039   8000           00213         GOTO    _00106_DS_
003A   1E00           00214         MOVAR   r0x100C
003B   1B00           00215         XORAR   r0x1008
003C   5A86           00216         JBSET   STATUS,2
003D   8000           00217         GOTO    _00106_DS_
                      00218 ;;[ICODE] ../libsdcc_mc35/fsneq.c:70:   if iTemp12 [k22 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_0($2)
                      00219 ;;[ICODE] ../libsdcc_mc35/fsneq.c:71:   ret 0x0 {const-unsigned-char literal}
                      00220 ;       .line   71; "../libsdcc_mc35/fsneq.c"   return (0);
003E   2D00           00221         MOVAI   0x00
003F   8000           00222         GOTO    _00107_DS_
                      00223 ;;[ICODE] ../libsdcc_mc35/fsneq.c:71:  _iffalse_0($2) :
                      00224 ;;[ICODE] ../libsdcc_mc35/fsneq.c:72:   ret 0x1 {const-unsigned-char literal}
0040                  00225 _00106_DS_
                      00226 ;       .line   72; "../libsdcc_mc35/fsneq.c"   return (1);
0040   2D01           00227         MOVAI   0x01
                      00228 ;;[ICODE] ../libsdcc_mc35/fsneq.c:72:  _return($3) :
                      00229 ;;[ICODE] ../libsdcc_mc35/fsneq.c:72:   eproc ___fsneq [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
0041                  00230 _00107_DS_
0041   0E00           00231         RETURN  
                      00232 ; exit point of ___fsneq
                      00233 
                      00234 
                      00235 ;       code size estimation:
                      00236 ;          66+    0 =    66 instructions (  132 byte)
                      00237 
                      00238         end
gpasm-2.0.0_beta2 (Nov  6 2017)fsneq.asm          2017-11-14  18:38:40         PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

C                                 00000002
DC                                00000001
FSR                               00000083
FSR0                              00000083
FSR1                              00000084
HIBYTE                            00000082
INDF                              000000E7
PCH                               000000CF
PCL                               000000CE
STATUS                            00000086
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
Z                                 00000000
_00106_DS_                        00000040
_00107_DS_                        00000041
_CONFIG0                          00008000
_CONFIG1                          00008001
__2K7041                          00000001
___fs2schar                       00000000
___fs2sint                        00000000
___fs2slong                       00000000
___fs2uchar                       00000000
___fs2uint                        00000000
___fs2ulong                       00000000
___fsadd                          00000000
___fsdiv                          00000000
___fseq                           00000000
___fsgt                           00000000
___fslt                           00000000
___fsmul                          00000000
___fsneq                          00000000
___fsneq_fl1_1_22                 00000008
___fsneq_fl2_1_22                 0000000C
___fssub                          00000000
___schar2fs                       00000000
___sint2fs                        00000000
___slong2fs                       00000000
___uchar2fs                       00000000
___uint2fs                        00000000
___ulong2fs                       00000000
r0x1008                           00000003
r0x1009                           00000002
r0x100A                           00000001
r0x100B                           00000000
r0x100C                           00000007
r0x100D                           00000006
r0x100E                           00000005
r0x100F                           00000004

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

