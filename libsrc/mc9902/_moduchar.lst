gpasm-1.9.8 (May 25 2017)    _moduchar.asm      2017-5-31  15:52:41          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : ANSI-C Compiler
                      00003 ; Version 0.0.4 (Nov 23 2015) (Linux)
                      00004 ; This file was generated Wed May 31 15:52:41 2017
                      00005 ;--------------------------------------------------------
                      00006 ; MC3X port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc/_moduchar.c"
                      00009         list    p=9902
                      00010         radix dec
                      00011         include "9902.inc"
                      00001                 LIST
                      00002 ;mc9902.inc    Standard Header File, Version 1.00 by Sinomcu
Message[301]: Processor-header file mismatch.  Verify selected processor.
                      00261                 LIST
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015 
                      00016         extern STK06
                      00017         extern STK05
                      00018         extern STK04
                      00019         extern STK03
                      00020         extern STK02
                      00021         extern STK01
                      00022         extern STK00
                      00023 ;--------------------------------------------------------
                      00024 ; global declarations
                      00025 ;--------------------------------------------------------
                      00026         global  __moduchar
                      00027 
                      00028 ;--------------------------------------------------------
                      00029 ; global definitions
                      00030 ;--------------------------------------------------------
                      00031 ;--------------------------------------------------------
                      00032 ; absolute symbol definitions
                      00033 ;--------------------------------------------------------
                      00034 ;--------------------------------------------------------
                      00035 ; compiler-defined variables
                      00036 ;--------------------------------------------------------
                      00037 UDL__moduchar_0 udata
0000                  00038 r0x1000 res     1
0000                  00039 r0x1001 res     1
0001                  00040 r0x1002 res     1
0001                  00041 r0x1003 res     1
                      00042 ;--------------------------------------------------------
                      00043 ; initialized data
                      00044 ;--------------------------------------------------------
                      00045 ;--------------------------------------------------------
                      00046 ; overlayable items in internal ram 
                      00047 ;--------------------------------------------------------
                      00048 ;       udata_ovr
                      00049 ;--------------------------------------------------------
                      00050 ; code
                      00051 ;--------------------------------------------------------
                      00052 code__moduchar  code
                      00053 ;***
                      00054 ;  pBlock Stats: dbName = C
                      00055 ;***
                      00056 ;entry:  __moduchar     ;Function start
                      00057 ; 2 exit points
                      00058 ;has an exit
                      00059 ;8 compiler assigned registers:
                      00060 ;   r0x1000
                      00061 ;   STK00
                      00062 ;   r0x1001
                      00063 ;   r0x1002
                      00064 ;   r0x1003
                      00065 ;   r0x1004
                      00066 ;   r0x1005
                      00067 ;   r0x1006
                      00068 ;; Starting pCode block
                      00069 ;;[ICODE] ../libsdcc/_moduchar.c:30:  _entry($12) :
                      00070 ;;[ICODE] ../libsdcc/_moduchar.c:30:    proc __moduchar [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( unsigned-char fixed, unsigned-char fixed) fixed}
0000                  00071 __moduchar      ;Function start
                      00072 ; 2 exit points
                      00073 ;;[ICODE] ../libsdcc/_moduchar.c:30: iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_a_1_1}[r0x1000 ] = recv __moduchar [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( unsigned-char fixed, unsigned-char fixed) fixed}
                      00074 ;       .line   30; "../libsdcc/_moduchar.c"    _moduchar (unsigned char a, unsigned char b)
0000   5600           00075         MOVRA   r0x1000
                      00076 ;;[ICODE] ../libsdcc/_moduchar.c:30: iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_b_1_1}[r0x1001 ] = recv __moduchar [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( unsigned-char fixed, unsigned-char fixed) fixed}
0001   5800           00077         MOVAR   STK00
0002   5600           00078         MOVRA   r0x1001
                      00079 ;;[ICODE] ../libsdcc/_moduchar.c:35:    if iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_b_1_1}[r0x1001 ] != 0 goto preHeaderLbl0($15)
                      00080 ;       .line   35; "../libsdcc/_moduchar.c"    if (!b) return (unsigned char)-1;
0003   3C00           00081         MOVAI   0x00
0004   5C00           00082         ORAR    r0x1001
0005   E587           00083         JBSET   STATUS,2
0006   A000           00084         GOTO    _00119_DS_
                      00085 ;;[ICODE] ../libsdcc/_moduchar.c:35:    ret 0xff {unsigned-char literal}
0007   3CFF           00086         MOVAI   0xff
0008   A000           00087         GOTO    _00115_DS_
                      00088 ;;[ICODE] ../libsdcc/_moduchar.c:39:  preHeaderLbl0($15) :
                      00089 ;;[ICODE] ../libsdcc/_moduchar.c:39:    iTemp6 [k11 lr8:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_count_1_2}[r0x1002 ] := 0x1 {const-unsigned-char literal}
0009                  00090 _00119_DS_
                      00091 ;       .line   39; "../libsdcc/_moduchar.c"    while (!(b & (1UL << (8*sizeof(unsigned char)-1)))) {
0009   3C01           00092         MOVAI   0x01
000A   5600           00093         MOVRA   r0x1002
                      00094 ;;[ICODE] ../libsdcc/_moduchar.c:39:  _whilecontinue_0($3) :
                      00095 ;;[ICODE] ../libsdcc/_moduchar.c:39:    iTemp3 [k8 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1003 r0x1004 r0x1005 r0x1006 ] = (unsigned-long-int register)iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_b_1_1}[r0x1001 ]
000B                  00096 _00107_DS_
000B   5800           00097         MOVAR   r0x1001
000C   5600           00098         MOVRA   r0x1003
                      00099 ;;1     CLRR    r0x1004
                      00100 ;;1     CLRR    r0x1005
                      00101 ;;1     CLRR    r0x1006
                      00102 ;;[ICODE] ../libsdcc/_moduchar.c:39:    iTemp4 [k9 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} = iTemp3 [k8 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1003 r0x1004 r0x1005 r0x1006 ] & 0x80 {unsigned-long-int literal}
000D   FE00           00103         JBCLR   r0x1003,7
000E   A000           00104         GOTO    _00112_DS_
                      00105 ;;[ICODE] ../libsdcc/_moduchar.c:39:    if iTemp4 [k9 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} != 0 goto preHeaderLbl1($18)
                      00106 ;;[ICODE] ../libsdcc/_moduchar.c:40:    iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_b_1_1}[r0x1001 ] = iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_b_1_1}[r0x1001 ] << 0x1 {const-unsigned-char literal}
                      00107 ;       .line   40; "../libsdcc/_moduchar.c"    b <<= 1;
000F   D187           00108         BCLR    STATUS,0
0010   5200           00109         RLR     r0x1001
                      00110 ;;[ICODE] ../libsdcc/_moduchar.c:41:    iTemp6 [k11 lr8:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_count_1_2}[r0x1002 ] = iTemp6 [k11 lr8:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_count_1_2}[r0x1002 ] + 0x1 {const-unsigned-char literal}
                      00111 ;       .line   41; "../libsdcc/_moduchar.c"    ++count;
0011   6600           00112         INCR    r0x1002
                      00113 ;;[ICODE] ../libsdcc/_moduchar.c:41:     goto _whilecontinue_0($3)
0012   A000           00114         GOTO    _00107_DS_
                      00115 ;;[ICODE] ../libsdcc/_moduchar.c:45:  preHeaderLbl1($18) :
                      00116 ;;[ICODE] ../libsdcc/_moduchar.c:45:    iTemp10 [k15 lr19:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_count_1_2}[r0x1002 ] := iTemp6 [k11 lr8:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_count_1_2}[r0x1002 ]
                      00117 ;;[ICODE] ../libsdcc/_moduchar.c:45:  _whilecontinue_1($8) :
                      00118 ;;[ICODE] ../libsdcc/_moduchar.c:45:    if iTemp10 [k15 lr19:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_count_1_2}[r0x1002 ] == 0 goto _whilebreak_1($10)
0013                  00119 _00112_DS_
                      00120 ;       .line   45; "../libsdcc/_moduchar.c"    while (count) {
0013   3C00           00121         MOVAI   0x00
0014   5C00           00122         ORAR    r0x1002
0015   F587           00123         JBCLR   STATUS,2
0016   A000           00124         GOTO    _00114_DS_
                      00125 ;;[ICODE] ../libsdcc/_moduchar.c:46:    iTemp7 [k12 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_a_1_1}[r0x1000 ] < iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_b_1_1}[r0x1001 ]
                      00126 ;       .line   46; "../libsdcc/_moduchar.c"    if (a >= b) {
0017   5800           00127         MOVAR   r0x1001
0018   4800           00128         RSUBAR  r0x1000
0019   E187           00129         JBSET   STATUS,0
001A   A000           00130         GOTO    _00111_DS_
                      00131 ;;genSkipc:3246: created from rifx:0xbfef2a50
                      00132 ;;[ICODE] ../libsdcc/_moduchar.c:46:    if iTemp7 [k12 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_1($7)
                      00133 ;;[ICODE] ../libsdcc/_moduchar.c:47:    iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_a_1_1}[r0x1000 ] = iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_a_1_1}[r0x1000 ] - iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_b_1_1}[r0x1001 ]
                      00134 ;       .line   47; "../libsdcc/_moduchar.c"    a -= b;
001B   5800           00135         MOVAR   r0x1001
001C   4A00           00136         RSUBRA  r0x1000
                      00137 ;;[ICODE] ../libsdcc/_moduchar.c:47:  _iffalse_1($7) :
                      00138 ;;[ICODE] ../libsdcc/_moduchar.c:49:    iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_b_1_1}[r0x1001 ] = iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_b_1_1}[r0x1001 ] >> 0x1 {const-unsigned-char literal}
                      00139 ;;shiftRight_Left2ResultLit:5278: shCount=1, size=1, sign=0, same=1, offr=0
001D                  00140 _00111_DS_
                      00141 ;       .line   49; "../libsdcc/_moduchar.c"    b >>= 1;
001D   D187           00142         BCLR    STATUS,0
001E   4E00           00143         RRR     r0x1001
                      00144 ;;[ICODE] ../libsdcc/_moduchar.c:50:    iTemp10 [k15 lr19:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_count_1_2}[r0x1002 ] = iTemp10 [k15 lr19:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_count_1_2}[r0x1002 ] - 0x1 {const-unsigned-char literal}
                      00145 ;       .line   50; "../libsdcc/_moduchar.c"    --count;
001F   6E00           00146         DECR    r0x1002
                      00147 ;;[ICODE] ../libsdcc/_moduchar.c:50:     goto _whilecontinue_1($8)
0020   A000           00148         GOTO    _00112_DS_
                      00149 ;;[ICODE] ../libsdcc/_moduchar.c:50:  _whilebreak_1($10) :
                      00150 ;;[ICODE] ../libsdcc/_moduchar.c:53:    ret iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduchar_a_1_1}[r0x1000 ]
0021                  00151 _00114_DS_
                      00152 ;       .line   53; "../libsdcc/_moduchar.c"    return a;
0021   5800           00153         MOVAR   r0x1000
                      00154 ;;[ICODE] ../libsdcc/_moduchar.c:53:  _return($11) :
                      00155 ;;[ICODE] ../libsdcc/_moduchar.c:53:    eproc __moduchar [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( unsigned-char fixed, unsigned-char fixed) fixed}
0022                  00156 _00115_DS_
0022   000C           00157         RETURN  
                      00158 ; exit point of __moduchar
                      00159 
                      00160 
                      00161 ;       code size estimation:
                      00162 ;          35+    0 =    35 instructions (   70 byte)
                      00163 
                      00164         end
gpasm-1.9.8 (May 25 2017)    _moduchar.asm      2017-5-31  15:52:41          PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

AD0EN                             00000006
AD1EN                             00000005
AD2EN                             00000004
ADCR0                             000001B0
ADCR1                             000001B1
ADCR2                             000001B2
ADEN                              00000007
ADIE                              00000006
ADIF                              00000006
ADR10                             00000002
ADR11                             00000003
ADR12                             00000004
ADR13                             00000005
ADR14                             00000006
ADR15                             00000007
ADR16                             00000000
ADR17                             00000001
ADR18                             00000002
ADR19                             00000003
ADR20                             00000004
ADR21                             00000005
ADR22                             00000006
ADR23                             00000007
ADR8                              00000000
ADR9                              00000001
ADRH                              000001B4
ADRL                              000001B6
ADRM                              000001B5
ADVRS                             00000000
BUZ0OE                            00000005
BUZ1OE                            00000005
C                                 00000000
CHOPEN                            00000006
CLKS                              00000002
DC                                00000001
FSR                               00000184
FSR0                              00000184
FSR1                              00000185
GIE                               00000007
HFEN                              00000000
HIBYTE                            00000183
I2CIE                             00000005
I2CIF                             00000005
I2CRS                             00000007
IICAAS                            00000006
IICAR                             000001B9
IICBUSY                           00000005
IICCR                             000001B8
IICDR                             000001BA
IICE0F                            00000007
IICEN                             00000001
IICM0D                            00000004
INDF                              00000180
INDF0                             00000180
INDF1                             00000181
INDF2                             00000182
INDF3                             00000189
INT0IE                            00000002
INT0IF                            00000002
INT1IE                            00000003
INT1IF                            00000003
INTE                              0000018A
INTF                              0000018B
IOP0                              00000190
IOP1                              00000194
LDOEN                             00000001
LFEN                              00000001
LVDCR                             0000018D
LVDEN                             00000007
LVDF                              00000000
MCR                               00000188
MSTCMD                            00000002
OEP0                              00000191
OEP1                              00000195
OSCM                              0000018C
P00D                              00000000
P00OE                             00000000
P00PU                             00000000
P01D                              00000001
P01OE                             00000001
P01PU                             00000001
P02D                              00000002
P02OE                             00000002
P02PU                             00000002
P03D                              00000003
P03OE                             00000003
P03PU                             00000003
P04D                              00000004
P04OE                             00000004
P04PU                             00000004
P05D                              00000005
P05OE                             00000005
P05PU                             00000005
P06D                              00000006
P06OE                             00000006
P06PU                             00000006
P07D                              00000007
P07OE                             00000007
P07PU                             00000007
P10D                              00000000
P10OE                             00000000
P10PU                             00000000
P11D                              00000001
P11OE                             00000001
P11PU                             00000001
PCL                               00000186
PD                                00000004
PFLAG                             00000187
PUP0                              00000192
PUP1                              00000196
PWM0OE                            00000006
PWM1OE                            00000006
RACK                              00000000
RUPSEL                            00000193
SACK                              00000003
STATUS                            00000187
STBH                              00000004
STBL                              00000005
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
T0CNT                             000001A1
T0CR                              000001A0
T0DATA                            000001A3
T0EN                              00000007
T0IE                              00000000
T0IF                              00000000
T0LOAD                            000001A2
T1CNT                             000001A5
T1CR                              000001A4
T1DATA                            000001A7
T1EN                              00000007
T1IE                              00000001
T1IF                              00000001
T1LOAD                            000001A6
TO                                00000005
VLDOS0                            00000003
VLDOS1                            00000002
Z                                 00000002
_00107_DS_                        0000000B
_00111_DS_                        0000001D
_00112_DS_                        00000013
_00114_DS_                        00000021
_00115_DS_                        00000022
_00119_DS_                        00000009
_CONFIG0                          00000FEC
_CONFIG1                          00000FED
__9902                            00000001
__moduchar                        00000000
r0x1000                           00000000
r0x1001                           00000001
r0x1002                           00000002
r0x1003                           00000003

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     1 reported,     0 suppressed

