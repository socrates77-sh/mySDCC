gpasm-1.7.0_beta1 (Jan 22 2015)_mullong.asm       2015-1-22  23:36:18          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : ANSI-C Compiler
                      00003 ; Version 0.0.4 (Jan 22 2015) (Linux)
                      00004 ; This file was generated Thu Jan 22 23:36:18 2015
                      00005 ;--------------------------------------------------------
                      00006 ; MC3X port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc/_mullong.c"
                      00009         list    p=32p7022
                      00010         radix dec
                      00011         include "mc32p7022.inc"
                      00001 
                      00002 
                      00003 ;mc32p7022 header file
                      00004 ;
                      00005 ; 
                      00006 
                      00007 ;define must write at first row
                      00008 
  00000180            00009 INDF    EQU     0X180  
  00000180            00010 INDF0   EQU     0X180
  00000181            00011 INDF1   EQU     0X181
  00000182            00012 INDF2   EQU     0X182
  00000183            00013 HIBYTE  EQU     0X183
  00000184            00014 FSR     EQU     0X184
  00000184            00015 FSR0    EQU     0X184
  00000185            00016 FSR1    EQU     0X185
  00000186            00017 PCL     EQU     0X186
  00000187            00018 STATUS  EQU     0X187
  00000188            00019 MCR     EQU     0X188
  00000189            00020 INDF3   EQU     0X189   
  0000018A            00021 INTE    EQU     0X18A
  0000018B            00022 INTF    EQU     0X18B
  00000190            00023 IOP0    EQU     0X190
  00000191            00024 OEP0    EQU     0X191
  00000192            00025 PUP0    EQU     0X192
  00000193            00026 PDP0    EQU     0X193
  00000197            00027 KBCR    EQU     0X197
  000001A0            00028 T0CR0   EQU     0X1A0
  000001A1            00029 T0CNT   EQU     0X1A1
  000001A2            00030 T0LOAD  EQU     0X1A2
  000001A3            00031 T00DATA EQU     0X1A3
  000001A4            00032 T1CR    EQU     0X1A4
  000001A5            00033 T1CNT   EQU     0X1A5
  000001A6            00034 T1LOAD  EQU     0X1A6
  000001A7            00035 T1DATA  EQU     0X1A7
  000001A8            00036 T0CR1   EQU     0X1A8
  000001A9            00037 T01DATA EQU     0X1A9
  000001AC            00038 LXTCR   EQU     0X1AC
  000001AD            00039 LVDCR   EQU     0X1AD
  000001AE            00040 OSCM    EQU     0X1AE
  000001B0            00041 ADCR0   EQU     0X1B0
  000001B1            00042 ADCR1   EQU     0X1B1
  000001B2            00043 ADCR2   EQU     0X1B2
  000001B3            00044 ADIOS   EQU     0X1B3
  000001B4            00045 ADVR0   EQU     0X1B4
  000001B5            00046 ADVR1   EQU     0X1B5
  000001B6            00047 ADVR2   EQU     0X1B6
  000001B8            00048 ADRH    EQU     0X1B8
  000001B9            00049 ADRL    EQU     0X1B9
  000001BC            00050 KEYCR0  EQU     0X1BC
  000001BD            00051 KEYCR1  EQU     0X1BD
  000001FB            00052 OSCCAL  EQU     0X1FB
                      00053 
                      00054 
                      00055 
                      00056 ;MCR 
                      00057 #define         GIE             MCR,7
                      00058 #define         T0              MCR,5
                      00059 #define         PD              MCR,4
                      00060 ;#define         MINT1
                      00061   
                      00062 
                      00063 ;STATUS bit 
                      00064 #define         Z       STATUS,2
                      00065 #define         DC      STATUS,1
                      00066 #define         C       STATUS,0 
                      00067 
                      00068 
                      00069 ;INTE0
                      00070 ; 1=enable, 0=disable
                      00071 #define         ADIE    INTE,6
                      00072 #define         I2CIE   INTE,5
                      00073 #define         T2IE    INTE,4
                      00074 #define         INT1IE  INTE,3
                      00075 #define         INT0IE  INTE,2
                      00076 #define         T1IE    INTE,1
                      00077 #define         T0IE    INTE,0
                      00078 
                      00079 ;TIME0
                      00080 #define         TC0EN           T0CR,7
                      00081 #define         PWM0OUT         T0CR,6
                      00082 #define         BUZZ0OUT        T0CR,5
                      00083 #define         T0PS1           T0CR,4
                      00084 #define         T0PTS0          T0CR,3
                      00085 ;#define         T0PR2
                      00086 
                      00087 ;OSCM
                      00088 #define         STBL    OSCM,5
                      00089 #define         STBH    OSCM,4
                      00090 #define         CLKS    OSCM,2
                      00091 #define         LFEN    OSCM,1
                      00092 #define         HFEN    OSCM,0          
                      00093 
                      00094 ;TIME0
                      00095 #define         TC1EN           T1CR,7
                      00096 #define         PWM1OUT         T1CR,6
                      00097 #define         BUZZ1OUT        T1CR,5
                      00098 #define         T1PS1           T1CR,4
                      00099 #define         T1PTS0          T1CR,3
                      00100 
                      00101 ;INTFLAG
                      00102 ;1=active ,
                      00103 #define         ADIF    INTFLAG,6 
                      00104 #define         I2CIF   INTFLAG,5
                      00105 #define         T2IF    INTFLAG,4
                      00106 #define         INT1IF  INTFLAG,3
                      00107 #define         INT0IF  INTFLAG,2
                      00108 #define         T1IF    INTFLAG,1
                      00109 #define         T0IF    INTFLAG,0
                      00110 
                      00111 
                      00112 ;-------------------------------------------------------
                      00113 ;timer2
                      00114 ;----------------------------
                      00115 ;T2CR
                      00116 #define                 TC2EN                           T2CR,7
                      00117 #define                 T2MODE                  T2CR,6
                      00118 
                      00119 
                      00120 ;TK0CRH
                      00121 #define                                 TK0JE           TK0CRH,5
                      00122 #define                                 TK0RCE  TK0CRH,4
                      00123 #define                                 TK0CLR  TK0CRH,3
                      00124 ;TK1CRH
                      00125 #define                                 TK1JE           TK1CRH,5
                      00126 #define                                 TK1RCE  TK1CRH,4
                      00127 #define                                 TK1CLR  TK1CRH,3
                      00128 ;TK2CRH
                      00129 #define                                 TK2JE           TK2CRH,5
                      00130 #define                                 TK2RCE  TK2CRH,4
                      00131 #define                                 TK2CLR  TK2CRH,3
                      00132 
                      00133 
                      00134 ;TKnCRL
                      00135 #define                                 TK0IF           TK0CRL,7
                      00136 #define                                 TK0IE           TK0CRL,6
                      00137                                         
                      00138 ;TKnCRL
                      00139 #define                                 TK1IF           TK1CRL,7
                      00140 #define                                 TK1IE           TK1CRL,6
                      00141 
                      00142 ;TKnCRL
                      00143 #define                                 TK2IF           TK2CRL,7
                      00144 #define                                 TK2IE           TK2CRL,6
                      00145 
                      00146 ;ADCR0
                      00147 #define         ADEOC   ADCR0,1
                      00148 #define         ADON    ADCR0,0      
                      00149 
                      00150 ;I2CCR
                      00151 #define                 HCF                     I2CCR,7 ;data send end flag
                      00152 #define                 HAAS            I2CCR,6      ;addr matching flag 
                      00153 #define                 HBB                     I2CCR,5                         ;
                      00154 #define                 HTX                     I2CCR,4
                      00155 #define                 TXAK            I2CCR,3
                      00156 #define                 SRW                     I2CCR,2
                      00157 #define                 HEN                     I2CCR,1
                      00158 #define                 RXAK            I2CCR,0
                      00159 
                      00160 ;-------adc chanal----------------------------------------
                      00161 #define         AD0     0X00
                      00162 #define         AD1     0X10
                      00163 #define         AD2     0X20
                      00164 #define         AD3     0X30
                      00165 #define         AD4     0X40
                      00166 #define         AD5     0X50
                      00167 #define         AD6     0X60
                      00168 #define         AD7     0X70
                      00169 #define         LDO     0X80
                      00170 #define         AD_VDD          0XD0
                      00171 #define         AD_VDD_4DIV     0XE0
                      00172 #define         AD_VDD_2DIV     0XF0
                      00173 
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015 
                      00016         extern STK06
                      00017         extern STK05
                      00018         extern STK04
                      00019         extern STK03
                      00020         extern STK02
                      00021         extern STK01
                      00022         extern STK00
                      00023 ;--------------------------------------------------------
                      00024 ; global declarations
                      00025 ;--------------------------------------------------------
                      00026         global  __mullong
                      00027 
                      00028 ;--------------------------------------------------------
                      00029 ; global definitions
                      00030 ;--------------------------------------------------------
                      00031 ;--------------------------------------------------------
                      00032 ; absolute symbol definitions
                      00033 ;--------------------------------------------------------
                      00034 ;--------------------------------------------------------
                      00035 ; compiler-defined variables
                      00036 ;--------------------------------------------------------
                      00037 UDL__mullong_0  udata
0000                  00038 r0x1003 res     1
0000                  00039 r0x1002 res     1
0001                  00040 r0x1001 res     1
0001                  00041 r0x1000 res     1
0002                  00042 r0x1007 res     1
0002                  00043 r0x1006 res     1
0003                  00044 r0x1005 res     1
0003                  00045 r0x1004 res     1
0004                  00046 r0x1008 res     1
0004                  00047 r0x1009 res     1
0005                  00048 r0x100A res     1
0005                  00049 r0x100B res     1
0006                  00050 r0x100C res     1
0006                  00051 r0x100D res     1
0007                  00052 r0x100E res     1
0007                  00053 r0x100F res     1
0008                  00054 r0x1010 res     1
                      00055 ;--------------------------------------------------------
                      00056 ; initialized data
                      00057 ;--------------------------------------------------------
                      00058 ;--------------------------------------------------------
                      00059 ; overlayable items in internal ram 
                      00060 ;--------------------------------------------------------
                      00061 ;       udata_ovr
                      00062 ;--------------------------------------------------------
                      00063 ; code
                      00064 ;--------------------------------------------------------
                      00065 code__mullong   code
                      00066 ;***
                      00067 ;  pBlock Stats: dbName = C
                      00068 ;***
                      00069 ;entry:  __mullong      ;Function start
                      00070 ; 2 exit points
                      00071 ;has an exit
                      00072 ;24 compiler assigned registers:
                      00073 ;   r0x1000
                      00074 ;   STK00
                      00075 ;   r0x1001
                      00076 ;   STK01
                      00077 ;   r0x1002
                      00078 ;   STK02
                      00079 ;   r0x1003
                      00080 ;   STK03
                      00081 ;   r0x1004
                      00082 ;   STK04
                      00083 ;   r0x1005
                      00084 ;   STK05
                      00085 ;   r0x1006
                      00086 ;   STK06
                      00087 ;   r0x1007
                      00088 ;   r0x1008
                      00089 ;   r0x1009
                      00090 ;   r0x100A
                      00091 ;   r0x100B
                      00092 ;   r0x100C
                      00093 ;   r0x100D
                      00094 ;   r0x100E
                      00095 ;   r0x100F
                      00096 ;   r0x1010
                      00097 ;; Starting pCode block
                      00098 ;;[ICODE] ../libsdcc/_mullong.c:33:  _entry($16) :
                      00099 ;;[ICODE] ../libsdcc/_mullong.c:33:     proc __mullong [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( long-int fixed, long-int fixed) fixed}
0000                  00100 __mullong       ;Function start
                      00101 ; 2 exit points
                      00102 ;;[ICODE] ../libsdcc/_mullong.c:33: iTemp0 [k2 lr3:43 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_a_1_1}[r0x1000 r0x1001 r0x1002 r0x1003 ] = recv __mullong [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( long-int fixed, long-int fixed) fixed}
                      00103 ;       .line   33; "../libsdcc/_mullong.c"     _mullong (long a, long b)
0000   5600           00104         MOVRA   r0x1000
0001   5800           00105         MOVAR   STK00
0002   5600           00106         MOVRA   r0x1001
0003   5800           00107         MOVAR   STK01
0004   5600           00108         MOVRA   r0x1002
0005   5800           00109         MOVAR   STK02
0006   5600           00110         MOVRA   r0x1003
                      00111 ;;[ICODE] ../libsdcc/_mullong.c:33: iTemp1 [k4 lr4:43 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_b_1_1}[r0x1004 r0x1005 r0x1006 r0x1007 ] = recv __mullong [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( long-int fixed, long-int fixed) fixed}
0007   5800           00112         MOVAR   STK03
0008   5600           00113         MOVRA   r0x1004
0009   5800           00114         MOVAR   STK04
000A   5600           00115         MOVRA   r0x1005
000B   5800           00116         MOVAR   STK05
000C   5600           00117         MOVRA   r0x1006
000D   5800           00118         MOVAR   STK06
000E   5600           00119         MOVRA   r0x1007
                      00120 ;;[ICODE] ../libsdcc/_mullong.c:35:     iTemp2 [k6 lr5:44 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_result_1_2}[r0x1008 r0x1009 r0x100A r0x100B ] := 0x0 {long-int literal}
                      00121 ;       .line   35; "../libsdcc/_mullong.c"     long result = 0;
000F   7600           00122         CLRR    r0x1008
0010   7600           00123         CLRR    r0x1009
0011   7600           00124         CLRR    r0x100A
0012   7600           00125         CLRR    r0x100B
                      00126 ;;[ICODE] ../libsdcc/_mullong.c:39:     iTemp3 [k8 lr6:43 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __mullong_i_1_2}[r0x100C ] := 0x8 {unsigned-char literal}
                      00127 ;       .line   39; "../libsdcc/_mullong.c"     for (i = 0; i < 8u; i++) {
0013   3C08           00128         MOVAI   0x08
0014   5600           00129         MOVRA   r0x100C
                      00130 ;;[ICODE] ../libsdcc/_mullong.c:39:  _forcontinue_0($14) :
                      00131 ;;[ICODE] ../libsdcc/_mullong.c:41:     iTemp4 [k10 lr9:10 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int fixed} = iTemp0 [k2 lr3:43 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_a_1_1}[r0x1000 r0x1001 r0x1002 r0x1003 ] & 0x1 {long-int literal}
0015                  00132 _00118_DS_
                      00133 ;       .line   41; "../libsdcc/_mullong.c"     if (a & 0x0001u) result += b;
0015   E000           00134         JBSET   r0x1003,0
0016   A000           00135         GOTO    _00109_DS_
                      00136 ;;[ICODE] ../libsdcc/_mullong.c:41:     if iTemp4 [k10 lr9:10 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int fixed} == 0 goto _andif_0($5)
                      00137 ;;[ICODE] ../libsdcc/_mullong.c:41:     iTemp2 [k6 lr5:44 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_result_1_2}[r0x1008 r0x1009 r0x100A r0x100B ] = iTemp2 [k6 lr5:44 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_result_1_2}[r0x1008 r0x1009 r0x100A r0x100B ] + iTemp1 [k4 lr4:43 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_b_1_1}[r0x1004 r0x1005 r0x1006 r0x1007 ]
0017   5800           00138         MOVAR   r0x1007
0018   7E00           00139         ADDRA   r0x1008
0019   5800           00140         MOVAR   r0x1006
001A   F187           00141         JBCLR   STATUS,0
001B   6000           00142         JZAR    r0x1006
001C   7E00           00143         ADDRA   r0x1009
001D   5800           00144         MOVAR   r0x1005
001E   F187           00145         JBCLR   STATUS,0
001F   6000           00146         JZAR    r0x1005
0020   7E00           00147         ADDRA   r0x100A
0021   5800           00148         MOVAR   r0x1004
0022   F187           00149         JBCLR   STATUS,0
0023   6000           00150         JZAR    r0x1004
0024   7E00           00151         ADDRA   r0x100B
                      00152 ;;[ICODE] ../libsdcc/_mullong.c:42:  _andif_0($5) :
                      00153 ;;[ICODE] ../libsdcc/_mullong.c:42:     iTemp6 [k12 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x100D r0x100E r0x100F r0x1010 ] = (unsigned-long-int register)iTemp0 [k2 lr3:43 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_a_1_1}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0025                  00154 _00109_DS_
                      00155 ;       .line   42; "../libsdcc/_mullong.c"     if (sizeof (a) > 1 && (a & 0x00000100ul)) result += (b << 8u);
0025   5800           00156         MOVAR   r0x1003
0026   5600           00157         MOVRA   r0x100D
0027   5800           00158         MOVAR   r0x1002
0028   5600           00159         MOVRA   r0x100E
0029   5800           00160         MOVAR   r0x1001
002A   5600           00161         MOVRA   r0x100F
002B   5800           00162         MOVAR   r0x1000
002C   5600           00163         MOVRA   r0x1010
                      00164 ;;[ICODE] ../libsdcc/_mullong.c:42:     iTemp7 [k13 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} = iTemp6 [k12 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x100D r0x100E r0x100F r0x1010 ] & 0x100 {const-unsigned-long-int literal}
002D   E000           00165         JBSET   r0x100E,0
002E   A000           00166         GOTO    _00112_DS_
                      00167 ;;[ICODE] ../libsdcc/_mullong.c:42:     if iTemp7 [k13 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} == 0 goto _andif_1($8)
                      00168 ;;[ICODE] ../libsdcc/_mullong.c:42:     iTemp8 [k14 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int fixed}[r0x100D r0x100E r0x100F r0x1010 ] = iTemp1 [k4 lr4:43 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_b_1_1}[r0x1004 r0x1005 r0x1006 r0x1007 ] << 0x8 {const-unsigned-int literal}
002F   5800           00169         MOVAR   r0x1005
0030   5600           00170         MOVRA   r0x1010
0031   5800           00171         MOVAR   r0x1006
0032   5600           00172         MOVRA   r0x100F
                      00173 ;;100   MOVAR   r0x1007
0033   7600           00174         CLRR    r0x100D
                      00175 ;;[ICODE] ../libsdcc/_mullong.c:42:     iTemp2 [k6 lr5:44 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_result_1_2}[r0x1008 r0x1009 r0x100A r0x100B ] = iTemp2 [k6 lr5:44 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_result_1_2}[r0x1008 r0x1009 r0x100A r0x100B ] + iTemp8 [k14 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int fixed}[r0x100D r0x100E r0x100F r0x1010 ]
0034   3C00           00176         MOVAI   0x00
0035   7E00           00177         ADDRA   r0x1008
                      00178 ;;99    MOVAR   r0x100E
0036   5800           00179         MOVAR   r0x1007
0037   5600           00180         MOVRA   r0x100E
0038   F187           00181         JBCLR   STATUS,0
0039   6000           00182         JZAR    r0x100E
003A   7E00           00183         ADDRA   r0x1009
003B   5800           00184         MOVAR   r0x100F
003C   F187           00185         JBCLR   STATUS,0
003D   6000           00186         JZAR    r0x100F
003E   7E00           00187         ADDRA   r0x100A
003F   5800           00188         MOVAR   r0x1010
0040   F187           00189         JBCLR   STATUS,0
0041   6000           00190         JZAR    r0x1010
0042   7E00           00191         ADDRA   r0x100B
                      00192 ;;[ICODE] ../libsdcc/_mullong.c:43:  _andif_1($8) :
                      00193 ;;[ICODE] ../libsdcc/_mullong.c:43:     iTemp10 [k16 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x100D r0x100E r0x100F r0x1010 ] = (unsigned-long-int register)iTemp0 [k2 lr3:43 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_a_1_1}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0043                  00194 _00112_DS_
                      00195 ;       .line   43; "../libsdcc/_mullong.c"     if (sizeof (a) > 2 && (a & 0x00010000ul)) result += (b << 16u);
0043   5800           00196         MOVAR   r0x1003
0044   5600           00197         MOVRA   r0x100D
0045   5800           00198         MOVAR   r0x1002
0046   5600           00199         MOVRA   r0x100E
0047   5800           00200         MOVAR   r0x1001
0048   5600           00201         MOVRA   r0x100F
0049   5800           00202         MOVAR   r0x1000
004A   5600           00203         MOVRA   r0x1010
                      00204 ;;[ICODE] ../libsdcc/_mullong.c:43:     iTemp11 [k17 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} = iTemp10 [k16 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x100D r0x100E r0x100F r0x1010 ] & 0x10000 {const-unsigned-long-int literal}
004B   E000           00205         JBSET   r0x100F,0
004C   A000           00206         GOTO    _00115_DS_
                      00207 ;;[ICODE] ../libsdcc/_mullong.c:43:     if iTemp11 [k17 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} == 0 goto _andif_2($11)
                      00208 ;;[ICODE] ../libsdcc/_mullong.c:43:     iTemp12 [k18 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int fixed}[r0x100D r0x100E r0x100F r0x1010 ] = iTemp1 [k4 lr4:43 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_b_1_1}[r0x1004 r0x1005 r0x1006 r0x1007 ] << 0x10 {const-unsigned-int literal}
004D   5800           00209         MOVAR   r0x1006
004E   5600           00210         MOVRA   r0x1010
004F   5800           00211         MOVAR   r0x1007
0050   5600           00212         MOVRA   r0x100F
0051   7600           00213         CLRR    r0x100E
0052   7600           00214         CLRR    r0x100D
                      00215 ;;[ICODE] ../libsdcc/_mullong.c:43:     iTemp2 [k6 lr5:44 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_result_1_2}[r0x1008 r0x1009 r0x100A r0x100B ] = iTemp2 [k6 lr5:44 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_result_1_2}[r0x1008 r0x1009 r0x100A r0x100B ] + iTemp12 [k18 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int fixed}[r0x100D r0x100E r0x100F r0x1010 ]
0053   3C00           00216         MOVAI   0x00
0054   7E00           00217         ADDRA   r0x1008
0055   3C00           00218         MOVAI   0x00
0056   F187           00219         JBCLR   STATUS,0
0057   6000           00220         JZAR    r0x100E
0058   7E00           00221         ADDRA   r0x1009
0059   5800           00222         MOVAR   r0x100F
005A   F187           00223         JBCLR   STATUS,0
005B   6000           00224         JZAR    r0x100F
005C   7E00           00225         ADDRA   r0x100A
005D   5800           00226         MOVAR   r0x1010
005E   F187           00227         JBCLR   STATUS,0
005F   6000           00228         JZAR    r0x1010
0060   7E00           00229         ADDRA   r0x100B
                      00230 ;;[ICODE] ../libsdcc/_mullong.c:44:  _andif_2($11) :
                      00231 ;;[ICODE] ../libsdcc/_mullong.c:44:     iTemp14 [k20 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x100D r0x100E r0x100F r0x1010 ] = (unsigned-long-int register)iTemp0 [k2 lr3:43 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_a_1_1}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0061                  00232 _00115_DS_
                      00233 ;       .line   44; "../libsdcc/_mullong.c"     if (sizeof (a) > 3 && (a & 0x01000000ul)) result += (b << 24u);
0061   5800           00234         MOVAR   r0x1003
0062   5600           00235         MOVRA   r0x100D
0063   5800           00236         MOVAR   r0x1002
0064   5600           00237         MOVRA   r0x100E
0065   5800           00238         MOVAR   r0x1001
0066   5600           00239         MOVRA   r0x100F
0067   5800           00240         MOVAR   r0x1000
0068   5600           00241         MOVRA   r0x1010
                      00242 ;;[ICODE] ../libsdcc/_mullong.c:44:     iTemp15 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} = iTemp14 [k20 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x100D r0x100E r0x100F r0x1010 ] & 0x1000000 {const-unsigned-long-int literal}
0069   E000           00243         JBSET   r0x1010,0
006A   A000           00244         GOTO    _00114_DS_
                      00245 ;;[ICODE] ../libsdcc/_mullong.c:44:     if iTemp15 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} == 0 goto _iffalse_3($10)
                      00246 ;;[ICODE] ../libsdcc/_mullong.c:44:     iTemp16 [k22 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int fixed}[r0x100D r0x100E r0x100F r0x1010 ] = iTemp1 [k4 lr4:43 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_b_1_1}[r0x1004 r0x1005 r0x1006 r0x1007 ] << 0x18 {const-unsigned-int literal}
006B   5800           00247         MOVAR   r0x1007
006C   5600           00248         MOVRA   r0x1010
006D   7600           00249         CLRR    r0x100F
006E   7600           00250         CLRR    r0x100E
006F   7600           00251         CLRR    r0x100D
                      00252 ;;[ICODE] ../libsdcc/_mullong.c:44:     iTemp2 [k6 lr5:44 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_result_1_2}[r0x1008 r0x1009 r0x100A r0x100B ] = iTemp2 [k6 lr5:44 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_result_1_2}[r0x1008 r0x1009 r0x100A r0x100B ] + iTemp16 [k22 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int fixed}[r0x100D r0x100E r0x100F r0x1010 ]
0070   3C00           00253         MOVAI   0x00
0071   7E00           00254         ADDRA   r0x1008
0072   3C00           00255         MOVAI   0x00
0073   F187           00256         JBCLR   STATUS,0
0074   6000           00257         JZAR    r0x100E
0075   7E00           00258         ADDRA   r0x1009
0076   5800           00259         MOVAR   r0x100F
0077   F187           00260         JBCLR   STATUS,0
0078   6000           00261         JZAR    r0x100F
0079   7E00           00262         ADDRA   r0x100A
007A   5800           00263         MOVAR   r0x1010
007B   F187           00264         JBCLR   STATUS,0
007C   6000           00265         JZAR    r0x1010
007D   7E00           00266         ADDRA   r0x100B
                      00267 ;;[ICODE] ../libsdcc/_mullong.c:44:  _iffalse_3($10) :
                      00268 ;;[ICODE] ../libsdcc/_mullong.c:45:     iTemp18 [k24 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x100D r0x100E r0x100F r0x1010 ] = (unsigned-long-int fixed)iTemp0 [k2 lr3:43 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_a_1_1}[r0x1000 r0x1001 r0x1002 r0x1003 ]
007E                  00269 _00114_DS_
                      00270 ;       .line   45; "../libsdcc/_mullong.c"     a = ((unsigned long)a) >> 1u;
007E   5800           00271         MOVAR   r0x1003
007F   5600           00272         MOVRA   r0x100D
0080   5800           00273         MOVAR   r0x1002
0081   5600           00274         MOVRA   r0x100E
0082   5800           00275         MOVAR   r0x1001
0083   5600           00276         MOVRA   r0x100F
0084   5800           00277         MOVAR   r0x1000
0085   5600           00278         MOVRA   r0x1010
                      00279 ;;[ICODE] ../libsdcc/_mullong.c:45:     iTemp0 [k2 lr3:43 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_a_1_1}[r0x1000 r0x1001 r0x1002 r0x1003 ] = iTemp18 [k24 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x100D r0x100E r0x100F r0x1010 ] >> 0x1 {const-unsigned-int literal}
                      00280 ;;shiftRight_Left2ResultLit:5278: shCount=1, size=4, sign=0, same=0, offr=0
0086   D187           00281         BCLR    STATUS,0
0087   4C00           00282         RRAR    r0x1010
0088   5600           00283         MOVRA   r0x1000
0089   4C00           00284         RRAR    r0x100F
008A   5600           00285         MOVRA   r0x1001
008B   4C00           00286         RRAR    r0x100E
008C   5600           00287         MOVRA   r0x1002
008D   4C00           00288         RRAR    r0x100D
008E   5600           00289         MOVRA   r0x1003
                      00290 ;;[ICODE] ../libsdcc/_mullong.c:46:     iTemp1 [k4 lr4:43 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_b_1_1}[r0x1004 r0x1005 r0x1006 r0x1007 ] = iTemp1 [k4 lr4:43 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_b_1_1}[r0x1004 r0x1005 r0x1006 r0x1007 ] << 0x1 {const-unsigned-int literal}
                      00291 ;       .line   46; "../libsdcc/_mullong.c"     b <<= 1u;
008F   D187           00292         BCLR    STATUS,0
0090   5200           00293         RLR     r0x1007
0091   5200           00294         RLR     r0x1006
0092   5200           00295         RLR     r0x1005
0093   5200           00296         RLR     r0x1004
                      00297 ;;[ICODE] ../libsdcc/_mullong.c:46:     iTemp21 [k27 lr40:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x100D ] = (char register)iTemp3 [k8 lr6:43 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __mullong_i_1_2}[r0x100C ]
0094   5800           00298         MOVAR   r0x100C
0095   5600           00299         MOVRA   r0x100D
                      00300 ;;[ICODE] ../libsdcc/_mullong.c:46:     iTemp3 [k8 lr6:43 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __mullong_i_1_2}[r0x100C ] = iTemp21 [k27 lr40:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x100D ] - 0x1 {const-char literal}
0096   6C00           00301         DECAR   r0x100D
0097   5600           00302         MOVRA   r0x100C
                      00303 ;;[ICODE] ../libsdcc/_mullong.c:39:     if iTemp3 [k8 lr6:43 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __mullong_i_1_2}[r0x100C ] != 0 goto _forcontinue_0($14)
                      00304 ;       .line   39; "../libsdcc/_mullong.c"     for (i = 0; i < 8u; i++) {
0098   3C00           00305         MOVAI   0x00
0099   5C00           00306         ORAR    r0x100C
009A   E587           00307         JBSET   STATUS,2
009B   A000           00308         GOTO    _00118_DS_
                      00309 ;;[ICODE] ../libsdcc/_mullong.c:49:     ret iTemp2 [k6 lr5:44 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ __mullong_result_1_2}[r0x1008 r0x1009 r0x100A r0x100B ]
                      00310 ;       .line   49; "../libsdcc/_mullong.c"     return result;
009C   5800           00311         MOVAR   r0x1008
009D   5600           00312         MOVRA   STK02
009E   5800           00313         MOVAR   r0x1009
009F   5600           00314         MOVRA   STK01
00A0   5800           00315         MOVAR   r0x100A
00A1   5600           00316         MOVRA   STK00
00A2   5800           00317         MOVAR   r0x100B
                      00318 ;;[ICODE] ../libsdcc/_mullong.c:49:  _return($15) :
                      00319 ;;[ICODE] ../libsdcc/_mullong.c:49:     eproc __mullong [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( long-int fixed, long-int fixed) fixed}
00A3   000C           00320         RETURN  
                      00321 ; exit point of __mullong
                      00322 
                      00323 
                      00324 ;       code size estimation:
                      00325 ;         164+    0 =   164 instructions (  328 byte)
                      00326 
                      00327         end
gpasm-1.7.0_beta1 (Jan 22 2015)_mullong.asm       2015-1-22  23:36:18          PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

ADCR0                             000001B0
ADCR1                             000001B1
ADCR2                             000001B2
ADIOS                             000001B3
ADRH                              000001B8
ADRL                              000001B9
ADVR0                             000001B4
ADVR1                             000001B5
ADVR2                             000001B6
FSR                               00000184
FSR0                              00000184
FSR1                              00000185
HIBYTE                            00000183
INDF                              00000180
INDF0                             00000180
INDF1                             00000181
INDF2                             00000182
INDF3                             00000189
INTE                              0000018A
INTF                              0000018B
IOP0                              00000190
KBCR                              00000197
KEYCR0                            000001BC
KEYCR1                            000001BD
LVDCR                             000001AD
LXTCR                             000001AC
MCR                               00000188
OEP0                              00000191
OSCCAL                            000001FB
OSCM                              000001AE
PCL                               00000186
PDP0                              00000193
PUP0                              00000192
STATUS                            00000187
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
T00DATA                           000001A3
T01DATA                           000001A9
T0CNT                             000001A1
T0CR0                             000001A0
T0CR1                             000001A8
T0LOAD                            000001A2
T1CNT                             000001A5
T1CR                              000001A4
T1DATA                            000001A7
T1LOAD                            000001A6
_00109_DS_                        00000025
_00112_DS_                        00000043
_00114_DS_                        0000007E
_00115_DS_                        00000061
_00118_DS_                        00000015
__32P7022                         00000001
__mullong                         00000000
r0x1000                           00000003
r0x1001                           00000002
r0x1002                           00000001
r0x1003                           00000000
r0x1004                           00000007
r0x1005                           00000006
r0x1006                           00000005
r0x1007                           00000004
r0x1008                           00000008
r0x1009                           00000009
r0x100A                           0000000A
r0x100B                           0000000B
r0x100C                           0000000C
r0x100D                           0000000D
r0x100E                           0000000E
r0x100F                           0000000F
r0x1010                           00000010
AD0                               0X00
AD1                               0X10
AD2                               0X20
AD3                               0X30
AD4                               0X40
AD5                               0X50
AD6                               0X60
AD7                               0X70
ADEOC                             ADCR0,1
ADIE                              INTE,6
ADIF                              INTFLAG,6
ADON                              ADCR0,0
AD_VDD                            0XD0
AD_VDD_2DIV                       0XF0
AD_VDD_4DIV                       0XE0
BUZZ0OUT                          T0CR,5
BUZZ1OUT                          T1CR,5
C                                 STATUS,0
CLKS                              OSCM,2
DC                                STATUS,1
GIE                               MCR,7
HAAS                              I2CCR,6
HBB                               I2CCR,5
HCF                               I2CCR,7
HEN                               I2CCR,1
HFEN                              OSCM,0
HTX                               I2CCR,4
I2CIE                             INTE,5
I2CIF                             INTFLAG,5
INT0IE                            INTE,2
INT0IF                            INTFLAG,2
INT1IE                            INTE,3
INT1IF                            INTFLAG,3
LDO                               0X80
LFEN                              OSCM,1
PD                                MCR,4
PWM0OUT                           T0CR,6
PWM1OUT                           T1CR,6
RXAK                              I2CCR,0
SRW                               I2CCR,2
STBH                              OSCM,4
STBL                              OSCM,5
T0                                MCR,5
T0IE                              INTE,0
T0IF                              INTFLAG,0
T0PS1                             T0CR,4
T0PTS0                            T0CR,3
T1IE                              INTE,1
T1IF                              INTFLAG,1
T1PS1                             T1CR,4
T1PTS0                            T1CR,3
T2IE                              INTE,4
T2IF                              INTFLAG,4
T2MODE                            T2CR,6
TC0EN                             T0CR,7
TC1EN                             T1CR,7
TC2EN                             T2CR,7
TK0CLR                            TK0CRH,3
TK0IE                             TK0CRL,6
TK0IF                             TK0CRL,7
TK0JE                             TK0CRH,5
TK0RCE                            TK0CRH,4
TK1CLR                            TK1CRH,3
TK1IE                             TK1CRL,6
TK1IF                             TK1CRL,7
TK1JE                             TK1CRH,5
TK1RCE                            TK1CRH,4
TK2CLR                            TK2CRH,3
TK2IE                             TK2CRL,6
TK2IF                             TK2CRL,7
TK2JE                             TK2CRH,5
TK2RCE                            TK2CRH,4
TXAK                              I2CCR,3
Z                                 STATUS,2

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

