gpasm-1.9.7 (May 15 2017)    _mulint.asm        2017-5-15  15:21:59          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : ANSI-C Compiler
                      00003 ; Version 0.0.4 (Nov 23 2015) (Linux)
                      00004 ; This file was generated Mon May 15 15:21:59 2017
                      00005 ;--------------------------------------------------------
                      00006 ; MC3X port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc/_mulint.c"
                      00009         list    p=9903
                      00010         radix dec
                      00011         include "9903.inc"
                      00001                 LIST
                      00002 ;mc9903.inc    Standard Header File, Version 1.00 by Sinomcu
Message[301]: Processor-header file mismatch.  Verify selected processor.
                      00344                 LIST
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015 
                      00016         extern STK06
                      00017         extern STK05
                      00018         extern STK04
                      00019         extern STK03
                      00020         extern STK02
                      00021         extern STK01
                      00022         extern STK00
                      00023 ;--------------------------------------------------------
                      00024 ; global declarations
                      00025 ;--------------------------------------------------------
                      00026         global  __mulint
                      00027 
                      00028 ;--------------------------------------------------------
                      00029 ; global definitions
                      00030 ;--------------------------------------------------------
                      00031 ;--------------------------------------------------------
                      00032 ; absolute symbol definitions
                      00033 ;--------------------------------------------------------
                      00034 ;--------------------------------------------------------
                      00035 ; compiler-defined variables
                      00036 ;--------------------------------------------------------
                      00037 UDL__mulint_0   udata
0000                  00038 r0x1001 res     1
0000                  00039 r0x1000 res     1
0001                  00040 r0x1003 res     1
0001                  00041 r0x1002 res     1
0002                  00042 r0x1004 res     1
0002                  00043 r0x1005 res     1
0003                  00044 r0x1006 res     1
0003                  00045 r0x1007 res     1
0004                  00046 r0x1008 res     1
0004                  00047 r0x100A res     1
0005                  00048 r0x1009 res     1
                      00049 ;--------------------------------------------------------
                      00050 ; initialized data
                      00051 ;--------------------------------------------------------
                      00052 ;--------------------------------------------------------
                      00053 ; overlayable items in internal ram 
                      00054 ;--------------------------------------------------------
                      00055 ;       udata_ovr
                      00056 ;--------------------------------------------------------
                      00057 ; code
                      00058 ;--------------------------------------------------------
                      00059 code__mulint    code
                      00060 ;***
                      00061 ;  pBlock Stats: dbName = C
                      00062 ;***
                      00063 ;entry:  __mulint       ;Function start
                      00064 ; 2 exit points
                      00065 ;has an exit
                      00066 ;14 compiler assigned registers:
                      00067 ;   r0x1000
                      00068 ;   STK00
                      00069 ;   r0x1001
                      00070 ;   STK01
                      00071 ;   r0x1002
                      00072 ;   STK02
                      00073 ;   r0x1003
                      00074 ;   r0x1004
                      00075 ;   r0x1005
                      00076 ;   r0x1006
                      00077 ;   r0x1007
                      00078 ;   r0x1008
                      00079 ;   r0x1009
                      00080 ;   r0x100A
                      00081 ;; Starting pCode block
                      00082 ;;[ICODE] ../libsdcc/_mulint.c:33:  _entry($16) :
                      00083 ;;[ICODE] ../libsdcc/_mulint.c:33:      proc __mulint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
0000                  00084 __mulint        ;Function start
                      00085 ; 2 exit points
                      00086 ;;[ICODE] ../libsdcc/_mulint.c:33: iTemp0 [k2 lr3:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_a_1_1}[r0x1000 r0x1001 ] = recv __mulint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
                      00087 ;       .line   33; "../libsdcc/_mulint.c"      _mulint (int a, int b)
0000   5600           00088         MOVRA   r0x1000
0001   5800           00089         MOVAR   STK00
0002   5600           00090         MOVRA   r0x1001
                      00091 ;;[ICODE] ../libsdcc/_mulint.c:33: iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_b_1_1}[r0x1002 r0x1003 ] = recv __mulint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
0003   5800           00092         MOVAR   STK01
0004   5600           00093         MOVRA   r0x1002
0005   5800           00094         MOVAR   STK02
0006   5600           00095         MOVRA   r0x1003
                      00096 ;;[ICODE] ../libsdcc/_mulint.c:35:      iTemp2 [k6 lr5:32 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_result_1_2}[r0x1004 r0x1005 ] := 0x0 {int literal}
                      00097 ;       .line   35; "../libsdcc/_mulint.c"      int result = 0;
0007   7600           00098         CLRR    r0x1004
0008   7600           00099         CLRR    r0x1005
                      00100 ;;[ICODE] ../libsdcc/_mulint.c:39:      iTemp3 [k8 lr6:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __mulint_i_1_2}[r0x1006 ] := 0x8 {unsigned-char literal}
                      00101 ;       .line   39; "../libsdcc/_mulint.c"      for (i = 0; i < 8u; i++) {
0009   3C08           00102         MOVAI   0x08
000A   5600           00103         MOVRA   r0x1006
                      00104 ;;[ICODE] ../libsdcc/_mulint.c:39:  _forcontinue_0($14) :
                      00105 ;;[ICODE] ../libsdcc/_mulint.c:41:      iTemp4 [k10 lr9:10 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x1007 r0x1008 ] = (unsigned-int register)iTemp0 [k2 lr3:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_a_1_1}[r0x1000 r0x1001 ]
000B                  00106 _00118_DS_
                      00107 ;       .line   41; "../libsdcc/_mulint.c"      if (a & 0x0001u) result += b;
000B   5800           00108         MOVAR   r0x1001
000C   5600           00109         MOVRA   r0x1007
000D   5800           00110         MOVAR   r0x1000
000E   5600           00111         MOVRA   r0x1008
                      00112 ;;[ICODE] ../libsdcc/_mulint.c:41:      iTemp5 [k11 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} = iTemp4 [k10 lr9:10 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x1007 r0x1008 ] & 0x1 {const-unsigned-int literal}
000F   E000           00113         JBSET   r0x1007,0
0010   A000           00114         GOTO    _00109_DS_
                      00115 ;;[ICODE] ../libsdcc/_mulint.c:41:      if iTemp5 [k11 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} == 0 goto _andif_0($5)
                      00116 ;;[ICODE] ../libsdcc/_mulint.c:41:      iTemp2 [k6 lr5:32 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_result_1_2}[r0x1004 r0x1005 ] = iTemp2 [k6 lr5:32 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_result_1_2}[r0x1004 r0x1005 ] + iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_b_1_1}[r0x1002 r0x1003 ]
0011   5800           00117         MOVAR   r0x1003
0012   7E00           00118         ADDRA   r0x1004
0013   5800           00119         MOVAR   r0x1002
0014   F187           00120         JBCLR   STATUS,0
0015   6000           00121         JZAR    r0x1002
0016   7E00           00122         ADDRA   r0x1005
                      00123 ;;[ICODE] ../libsdcc/_mulint.c:42:  _andif_0($5) :
                      00124 ;;[ICODE] ../libsdcc/_mulint.c:42:      iTemp7 [k13 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] = (unsigned-long-int register)iTemp0 [k2 lr3:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_a_1_1}[r0x1000 r0x1001 ]
0017                  00125 _00109_DS_
                      00126 ;       .line   42; "../libsdcc/_mulint.c"      if (sizeof (a) > 1 && (a & 0x00000100ul)) result += (b << 8u);
0017   5800           00127         MOVAR   r0x1001
0018   5600           00128         MOVRA   r0x1007
0019   5800           00129         MOVAR   r0x1000
001A   5600           00130         MOVRA   r0x1008
001B   3C00           00131         MOVAI   0x00
001C   FE00           00132         JBCLR   r0x1008,7
001D   3CFF           00133         MOVAI   0xff
001E   5600           00134         MOVRA   r0x1009
001F   5600           00135         MOVRA   r0x100A
                      00136 ;;[ICODE] ../libsdcc/_mulint.c:42:      iTemp8 [k14 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} = iTemp7 [k13 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] & 0x100 {const-unsigned-long-int literal}
0020   E000           00137         JBSET   r0x1008,0
0021   A000           00138         GOTO    _00114_DS_
                      00139 ;;[ICODE] ../libsdcc/_mulint.c:42:      if iTemp8 [k14 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} == 0 goto _iffalse_3($10)
                      00140 ;;[ICODE] ../libsdcc/_mulint.c:42:      iTemp10 [k16 lr18:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x1007 r0x1008 ] = iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_b_1_1}[r0x1002 r0x1003 ] << 0x8 {const-unsigned-int literal}
                      00141 ;;100   MOVAR   r0x1003
0022   7600           00142         CLRR    r0x1007
                      00143 ;;[ICODE] ../libsdcc/_mulint.c:42:      iTemp11 [k17 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x1009 r0x100A ] = (unsigned-int register)iTemp2 [k6 lr5:32 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_result_1_2}[r0x1004 r0x1005 ]
0023   5800           00144         MOVAR   r0x1004
0024   5600           00145         MOVRA   r0x100A
0025   5800           00146         MOVAR   r0x1005
0026   5600           00147         MOVRA   r0x1005
0027   5600           00148         MOVRA   r0x1009
                      00149 ;;[ICODE] ../libsdcc/_mulint.c:42:      iTemp2 [k6 lr5:32 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_result_1_2}[r0x1004 r0x1005 ] = iTemp11 [k17 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x1009 r0x100A ] + iTemp10 [k16 lr18:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x1007 r0x1008 ]
0028   3C00           00150         MOVAI   0x00
0029   7C00           00151         ADDAR   r0x100A
002A   5600           00152         MOVRA   r0x1004
                      00153 ;;101   MOVAR   r0x1009
                      00154 ;;99    MOVAR   r0x1008
002B   5800           00155         MOVAR   r0x1003
002C   5600           00156         MOVRA   r0x1008
002D   F187           00157         JBCLR   STATUS,0
002E   6000           00158         JZAR    r0x1008
002F   7E00           00159         ADDRA   r0x1005
                      00160 ;;[ICODE] ../libsdcc/_mulint.c:44:  _iffalse_3($10) :
                      00161 ;;[ICODE] ../libsdcc/_mulint.c:45:      iTemp19 [k25 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x1007 r0x1008 ] = (unsigned-int fixed)iTemp0 [k2 lr3:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_a_1_1}[r0x1000 r0x1001 ]
0030                  00162 _00114_DS_
                      00163 ;       .line   45; "../libsdcc/_mulint.c"      a = ((unsigned int)a) >> 1u;
0030   5800           00164         MOVAR   r0x1001
0031   5600           00165         MOVRA   r0x1007
0032   5800           00166         MOVAR   r0x1000
0033   5600           00167         MOVRA   r0x1008
                      00168 ;;[ICODE] ../libsdcc/_mulint.c:45:      iTemp0 [k2 lr3:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_a_1_1}[r0x1000 r0x1001 ] = iTemp19 [k25 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x1007 r0x1008 ] >> 0x1 {const-unsigned-int literal}
                      00169 ;;shiftRight_Left2ResultLit:5278: shCount=1, size=2, sign=0, same=0, offr=0
0034   D187           00170         BCLR    STATUS,0
0035   4C00           00171         RRAR    r0x1008
0036   5600           00172         MOVRA   r0x1000
0037   4C00           00173         RRAR    r0x1007
0038   5600           00174         MOVRA   r0x1001
                      00175 ;;[ICODE] ../libsdcc/_mulint.c:46:      iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_b_1_1}[r0x1002 r0x1003 ] = iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_b_1_1}[r0x1002 r0x1003 ] << 0x1 {const-unsigned-int literal}
                      00176 ;       .line   46; "../libsdcc/_mulint.c"      b <<= 1u;
0039   D187           00177         BCLR    STATUS,0
003A   5200           00178         RLR     r0x1003
003B   5200           00179         RLR     r0x1002
                      00180 ;;[ICODE] ../libsdcc/_mulint.c:46:      iTemp23 [k29 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x1007 ] = (char register)iTemp3 [k8 lr6:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __mulint_i_1_2}[r0x1006 ]
003C   5800           00181         MOVAR   r0x1006
003D   5600           00182         MOVRA   r0x1007
                      00183 ;;[ICODE] ../libsdcc/_mulint.c:46:      iTemp3 [k8 lr6:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __mulint_i_1_2}[r0x1006 ] = iTemp23 [k29 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x1007 ] - 0x1 {const-char literal}
003E   6C00           00184         DECAR   r0x1007
003F   5600           00185         MOVRA   r0x1006
                      00186 ;;[ICODE] ../libsdcc/_mulint.c:39:      if iTemp3 [k8 lr6:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __mulint_i_1_2}[r0x1006 ] != 0 goto _forcontinue_0($14)
                      00187 ;       .line   39; "../libsdcc/_mulint.c"      for (i = 0; i < 8u; i++) {
0040   3C00           00188         MOVAI   0x00
0041   5C00           00189         ORAR    r0x1006
0042   E587           00190         JBSET   STATUS,2
0043   A000           00191         GOTO    _00118_DS_
                      00192 ;;[ICODE] ../libsdcc/_mulint.c:49:      ret iTemp2 [k6 lr5:32 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_result_1_2}[r0x1004 r0x1005 ]
                      00193 ;       .line   49; "../libsdcc/_mulint.c"      return result;
0044   5800           00194         MOVAR   r0x1004
0045   5600           00195         MOVRA   STK00
0046   5800           00196         MOVAR   r0x1005
                      00197 ;;[ICODE] ../libsdcc/_mulint.c:49:  _return($15) :
                      00198 ;;[ICODE] ../libsdcc/_mulint.c:49:      eproc __mulint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
0047   000C           00199         RETURN  
                      00200 ; exit point of __mulint
                      00201 
                      00202 
                      00203 ;       code size estimation:
                      00204 ;          72+    0 =    72 instructions (  144 byte)
                      00205 
                      00206         end
gpasm-1.9.7 (May 15 2017)    _mulint.asm        2017-5-15  15:21:59          PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

ADCR0                             000001B8
ADCR1                             000001B9
ADIOS0                            000001BC
ADIOS1                            000001BD
ADRH                              000001BA
ADRL                              000001BB
EEAR                              000001B6
EECR                              000001B4
EEDR                              000001B7
EEMASK                            000001B5
FSR                               00000184
FSR0                              00000184
FSR1                              00000185
HIBYTE                            00000183
IICCR                             000001B0
IICDR                             000001B2
IICSR                             000001B1
INDF                              00000180
INDF0                             00000180
INDF1                             00000181
INDF2                             00000182
INDF3                             00000189
INTE                              0000018A
INTF                              0000018B
IOP0                              00000190
IOP1                              00000194
IOP2                              00000198
KBCR                              0000018F
MCR                               00000188
OEP0                              00000191
OEP1                              00000195
OEP2                              00000199
OSADJCR                           000001BE
OSCM                              0000018C
PCL                               00000186
PFLAG                             00000187
PUP0                              00000192
PUP1                              00000196
PUP2                              0000019A
STATUS                            00000187
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
T0CNT                             000001A1
T0CR                              000001A0
T0DATA                            000001A3
T0LOAD                            000001A2
T1CNTH                            000001A9
T1CNTL                            000001AA
T1CR                              000001A8
T1DATAH                           000001AD
T1DATAL                           000001AE
T1LOADH                           000001AB
T1LOADL                           000001AC
_00109_DS_                        00000017
_00114_DS_                        00000030
_00118_DS_                        0000000B
_CONFIG0                          00001FE0
_CONFIG1                          00001FE1
__9903                            00000001
__mulint                          00000000
r0x1000                           00000001
r0x1001                           00000000
r0x1002                           00000003
r0x1003                           00000002
r0x1004                           00000004
r0x1005                           00000005
r0x1006                           00000006
r0x1007                           00000007
r0x1008                           00000008
r0x1009                           0000000A
r0x100A                           00000009
ADCHS0                            ADCR0,4
ADCHS1                            ADCR0,5
ADCHS2                            ADCR0,6
ADCHS3                            ADCR0,7
ADCKS0                            ADCR1,4
ADCKS1                            ADCR1,5
ADEN                              ADCR0,0
ADEOC                             ADCR0,1
ADIE                              INTE,6
ADIF                              INTF,6
ADRSEL                            ADCR1,7
ADSPS0                            ADCR1,0
ADSPS1                            ADCR1,1
AN0EN                             ADIOS0,0
AN10EN                            ADIOS1,2
AN11EN                            ADIOS1,3
AN12EN                            ADIOS1,4
AN13EN                            ADIOS1,5
AN1EN                             ADIOS0,1
AN2EN                             ADIOS0,2
AN3EN                             ADIOS0,3
AN4EN                             ADIOS0,4
AN5EN                             ADIOS0,5
AN6EN                             ADIOS0,6
AN7EN                             ADIOS0,7
AN8EN                             ADIOS1,0
AN9EN                             ADIOS1,1
BUZ0OE                            T0CR,5
C                                 PFLAG,0
CLKS                              OSCM,2
DC                                PFLAG,1
EERW                              EECR,6
EETRIG                            EECR,7
GIE                               MCR,7
HFEN                              OSCM,0
IICACK                            IICSR,3
IICCKS0                           IICCR,4
IICCKS1                           IICCR,5
IICEN                             IICCR,7
IICIE                             INTE,5
IICIF                             INTF,5
IICIMS                            IICCR,0
IICRD                             IICSR,5
IICRDTP                           IICCR,1
IICRS                             IICCR,6
IICSTP                            IICSR,6
IICSTR                            IICSR,7
IICTYP0                           IICCR,2
IICTYP1                           IICCR,3
IICWR                             IICSR,4
INT0IE                            INTE,2
INT0IF                            INTF,2
INT1IE                            INTE,3
INT1IF                            INTF,3
KBIE                              INTE,4
KBIF                              INTF,4
LFEN                              OSCM,1
MINT00                            MCR,0
MINT01                            MCR,1
MINT10                            MCR,2
MINT11                            MCR,3
OSADJEN                           OSADJCR,7
OSADJTR0                          OSADJCR,0
OSADJTR1                          OSADJCR,1
OSADJTR2                          OSADJCR,2
OSADJTR3                          OSADJCR,3
OSADJTR4                          OSADJCR,4
OSADJTR5                          OSADJCR,5
P00D                              IOP0,0
P00OE                             OEP0,0
P00PU                             PUP0,0
P01D                              IOP0,1
P01OE                             OEP0,1
P01PU                             PUP0,1
P02D                              IOP0,2
P02OE                             OEP0,2
P02PU                             PUP0,2
P03D                              IOP0,3
P03OE                             OEP0,3
P03PU                             PUP0,3
P04D                              IOP0,4
P04OE                             OEP0,4
P04PU                             PUP0,4
P05D                              IOP0,5
P05OE                             OEP0,5
P05PU                             PUP0,5
P06D                              IOP0,6
P06OE                             OEP0,6
P06PU                             PUP0,6
P07D                              IOP0,7
P07OE                             OEP0,7
P07PU                             PUP0,7
P10D                              IOP1,0
P10OE                             OEP1,0
P10PU                             PUP1,0
P11D                              IOP1,1
P11OE                             OEP1,1
P11PU                             PUP1,1
P12D                              IOP1,2
P12OE                             OEP1,2
P12PU                             PUP1,2
P13D                              IOP1,3
P13OE                             OEP1,3
P13PU                             PUP1,3
P14D                              IOP1,4
P14OE                             OEP1,4
P14PU                             PUP1,4
P15D                              IOP1,5
P15OE                             OEP1,5
P15PU                             PUP1,5
P16D                              IOP1,6
P16OE                             OEP1,6
P16PU                             PUP1,6
P17D                              IOP1,7
P17OE                             OEP1,7
P17PU                             PUP1,7
P20D                              IOP2,0
P20OE                             OEP2,0
P20PU                             PUP2,0
P21D                              IOP2,1
P21OE                             OEP2,1
P21PU                             PUP2,1
P22D                              IOP2,2
P22OE                             OEP2,2
P22PU                             PUP2,2
P23D                              IOP2,3
P23OE                             OEP2,3
P23PU                             PUP2,3
P24D                              IOP2,4
P24OE                             OEP2,4
P24PU                             PUP2,4
P25D                              IOP2,5
P25OE                             OEP2,5
P25PU                             PUP2,5
PD                                MCR,4
PWM0OE                            T0CR,6
PWM1OE                            T1CR,6
RACK                              IICSR,1
SACK                              IICSR,2
STBH                              OSCM,4
STBL                              OSCM,5
T0CKS0                            T0CR,3
T0CKS1                            T0CR,4
T0EN                              T0CR,7
T0IE                              INTE,0
T0IF                              INTF,0
T0PRS0                            T0CR,0
T0PRS1                            T0CR,1
T0PRS2                            T0CR,2
T1CKS0                            T1CR,3
T1CKS1                            T1CR,4
T1EN                              T1CR,7
T1IE                              INTE,1
T1IF                              INTF,1
T1PRS0                            T1CR,0
T1PRS1                            T1CR,1
T1PRS2                            T1CR,2
TO                                MCR,5
UARTIE                            INTE,7
UARTIF                            INTF,7
VRS0                              ADCR0,2
VRS1                              ADCR0,3
Z                                 PFLAG,2

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     1 reported,     0 suppressed

