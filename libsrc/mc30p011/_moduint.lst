gpasm-1.7.0_beta1 (Jan 22 2015)_moduint.asm       2015-1-22  23:30:21          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : ANSI-C Compiler
                      00003 ; Version 0.0.4 (Jan 22 2015) (Linux)
                      00004 ; This file was generated Thu Jan 22 23:30:21 2015
                      00005 ;--------------------------------------------------------
                      00006 ; MC3X port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc/_moduint.c"
                      00009         list    p=30p011
                      00010         radix dec
                      00011         include "mc30p011.inc"
                      00001                 LIST
                      00002 ;mc30p011.inc    Standard Header File, Version 1.00 by Sinomcu
                      00225                 LIST
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015 
                      00016         extern STK06
                      00017         extern STK05
                      00018         extern STK04
                      00019         extern STK03
                      00020         extern STK02
                      00021         extern STK01
                      00022         extern STK00
                      00023 ;--------------------------------------------------------
                      00024 ; global declarations
                      00025 ;--------------------------------------------------------
                      00026         global  __moduint
                      00027 
                      00028 ;--------------------------------------------------------
                      00029 ; global definitions
                      00030 ;--------------------------------------------------------
                      00031 ;--------------------------------------------------------
                      00032 ; absolute symbol definitions
                      00033 ;--------------------------------------------------------
                      00034 ;--------------------------------------------------------
                      00035 ; compiler-defined variables
                      00036 ;--------------------------------------------------------
                      00037 UDL__moduint_0  udata
0000                  00038 r0x1001 res     1
0000                  00039 r0x1000 res     1
0001                  00040 r0x1003 res     1
0001                  00041 r0x1002 res     1
0002                  00042 r0x1004 res     1
0002                  00043 r0x1006 res     1
                      00044 ;--------------------------------------------------------
                      00045 ; initialized data
                      00046 ;--------------------------------------------------------
                      00047 ;--------------------------------------------------------
                      00048 ; overlayable items in internal ram 
                      00049 ;--------------------------------------------------------
                      00050 ;       udata_ovr
                      00051 ;--------------------------------------------------------
                      00052 ; code
                      00053 ;--------------------------------------------------------
                      00054 code__moduint   code
                      00055 ;***
                      00056 ;  pBlock Stats: dbName = C
                      00057 ;***
                      00058 ;entry:  __moduint      ;Function start
                      00059 ; 2 exit points
                      00060 ;has an exit
                      00061 ;12 compiler assigned registers:
                      00062 ;   r0x1000
                      00063 ;   STK00
                      00064 ;   r0x1001
                      00065 ;   STK01
                      00066 ;   r0x1002
                      00067 ;   STK02
                      00068 ;   r0x1003
                      00069 ;   r0x1004
                      00070 ;   r0x1005
                      00071 ;   r0x1006
                      00072 ;   r0x1007
                      00073 ;   r0x1008
                      00074 ;; Starting pCode block
                      00075 ;;[ICODE] ../libsdcc/_moduint.c:30:  _entry($12) :
                      00076 ;;[ICODE] ../libsdcc/_moduint.c:30:     proc __moduint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int function ( unsigned-int fixed, unsigned-int fixed) fixed}
0000                  00077 __moduint       ;Function start
                      00078 ; 2 exit points
                      00079 ;;[ICODE] ../libsdcc/_moduint.c:30: iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_a_1_1}[r0x1000 r0x1001 ] = recv __moduint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int function ( unsigned-int fixed, unsigned-int fixed) fixed}
                      00080 ;       .line   30; "../libsdcc/_moduint.c"     _moduint (unsigned int a, unsigned int b)
0000   1580           00081         MOVRA   r0x1000
0001   1600           00082         MOVAR   STK00
0002   1580           00083         MOVRA   r0x1001
                      00084 ;;[ICODE] ../libsdcc/_moduint.c:30: iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ] = recv __moduint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int function ( unsigned-int fixed, unsigned-int fixed) fixed}
0003   1600           00085         MOVAR   STK01
0004   1580           00086         MOVRA   r0x1002
0005   1600           00087         MOVAR   STK02
0006   1580           00088         MOVRA   r0x1003
                      00089 ;;[ICODE] ../libsdcc/_moduint.c:35:     if iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ] != 0 goto preHeaderLbl0($15)
                      00090 ;       .line   35; "../libsdcc/_moduint.c"     if (!b) return (unsigned int)-1;
0007   1600           00091         MOVAR   r0x1003
0008   1700           00092         ORAR    r0x1002
0009   3103           00093         JBSET   STATUS,2
000A   2800           00094         GOTO    _00119_DS_
                      00095 ;;[ICODE] ../libsdcc/_moduint.c:35:     ret 0xffff {unsigned-int literal}
000B   0BFF           00096         MOVAI   0xff
000C   1580           00097         MOVRA   STK00
000D   0BFF           00098         MOVAI   0xff
000E   2800           00099         GOTO    _00115_DS_
                      00100 ;;[ICODE] ../libsdcc/_moduint.c:39:  preHeaderLbl0($15) :
                      00101 ;;[ICODE] ../libsdcc/_moduint.c:39:     iTemp6 [k11 lr8:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] := 0x1 {const-unsigned-char literal}
000F                  00102 _00119_DS_
                      00103 ;       .line   39; "../libsdcc/_moduint.c"     while (!(b & (1UL << (8*sizeof(unsigned int)-1)))) {
000F   0B01           00104         MOVAI   0x01
0010   1580           00105         MOVRA   r0x1004
                      00106 ;;[ICODE] ../libsdcc/_moduint.c:39:  _whilecontinue_0($3) :
                      00107 ;;[ICODE] ../libsdcc/_moduint.c:39:     iTemp3 [k8 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1005 r0x1006 r0x1007 r0x1008 ] = (unsigned-long-int register)iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ]
0011                  00108 _00107_DS_
0011   1600           00109         MOVAR   r0x1003
                      00110 ;;1     MOVRA   r0x1005
0012   1600           00111         MOVAR   r0x1002
0013   1580           00112         MOVRA   r0x1006
                      00113 ;;1     CLRR    r0x1007
                      00114 ;;1     CLRR    r0x1008
                      00115 ;;[ICODE] ../libsdcc/_moduint.c:39:     iTemp4 [k9 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} = iTemp3 [k8 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1005 r0x1006 r0x1007 r0x1008 ] & 0x8000 {unsigned-long-int literal}
0014   3780           00116         JBCLR   r0x1006,7
0015   2800           00117         GOTO    _00112_DS_
                      00118 ;;[ICODE] ../libsdcc/_moduint.c:39:     if iTemp4 [k9 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} != 0 goto preHeaderLbl1($18)
                      00119 ;;[ICODE] ../libsdcc/_moduint.c:40:     iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ] = iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ] << 0x1 {const-unsigned-char literal}
                      00120 ;       .line   40; "../libsdcc/_moduint.c"     b <<= 1;
0016   3C03           00121         BCLR    STATUS,0
0017   1480           00122         RLR     r0x1003
0018   1480           00123         RLR     r0x1002
                      00124 ;;[ICODE] ../libsdcc/_moduint.c:41:     iTemp6 [k11 lr8:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] = iTemp6 [k11 lr8:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] + 0x1 {const-unsigned-char literal}
                      00125 ;       .line   41; "../libsdcc/_moduint.c"     ++count;
0019   1980           00126         INCR    r0x1004
                      00127 ;;[ICODE] ../libsdcc/_moduint.c:41:      goto _whilecontinue_0($3)
001A   2800           00128         GOTO    _00107_DS_
                      00129 ;;[ICODE] ../libsdcc/_moduint.c:45:  preHeaderLbl1($18) :
                      00130 ;;[ICODE] ../libsdcc/_moduint.c:45:     iTemp10 [k15 lr19:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] := iTemp6 [k11 lr8:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ]
                      00131 ;;[ICODE] ../libsdcc/_moduint.c:45:  _whilecontinue_1($8) :
                      00132 ;;[ICODE] ../libsdcc/_moduint.c:45:     if iTemp10 [k15 lr19:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] == 0 goto _whilebreak_1($10)
001B                  00133 _00112_DS_
                      00134 ;       .line   45; "../libsdcc/_moduint.c"     while (count) {
001B   0B00           00135         MOVAI   0x00
001C   1700           00136         ORAR    r0x1004
001D   3503           00137         JBCLR   STATUS,2
001E   2800           00138         GOTO    _00114_DS_
                      00139 ;;[ICODE] ../libsdcc/_moduint.c:46:     iTemp7 [k12 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_a_1_1}[r0x1000 r0x1001 ] < iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ]
                      00140 ;       .line   46; "../libsdcc/_moduint.c"     if (a >= b) {
001F   1600           00141         MOVAR   r0x1002
0020   1200           00142         RSUBAR  r0x1000
0021   3103           00143         JBSET   STATUS,2
0022   2800           00144         GOTO    _00131_DS_
0023   1600           00145         MOVAR   r0x1003
0024   1200           00146         RSUBAR  r0x1001
0025                  00147 _00131_DS_
0025   3003           00148         JBSET   STATUS,0
0026   2800           00149         GOTO    _00111_DS_
                      00150 ;;genSkipc:3246: created from rifx:0xbff774c0
                      00151 ;;[ICODE] ../libsdcc/_moduint.c:46:     if iTemp7 [k12 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_1($7)
                      00152 ;;[ICODE] ../libsdcc/_moduint.c:47:     iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_a_1_1}[r0x1000 r0x1001 ] = iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_a_1_1}[r0x1000 r0x1001 ] - iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ]
                      00153 ;       .line   47; "../libsdcc/_moduint.c"     a -= b;
0027   1600           00154         MOVAR   r0x1003
0028   1280           00155         RSUBRA  r0x1001
0029   1600           00156         MOVAR   r0x1002
002A   3003           00157         JBSET   STATUS,0
002B   1800           00158         JZAR    r0x1002
002C   1280           00159         RSUBRA  r0x1000
                      00160 ;;[ICODE] ../libsdcc/_moduint.c:47:  _iffalse_1($7) :
                      00161 ;;[ICODE] ../libsdcc/_moduint.c:49:     iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ] = iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ] >> 0x1 {const-unsigned-char literal}
                      00162 ;;shiftRight_Left2ResultLit:5278: shCount=1, size=2, sign=0, same=1, offr=0
002D                  00163 _00111_DS_
                      00164 ;       .line   49; "../libsdcc/_moduint.c"     b >>= 1;
002D   3C03           00165         BCLR    STATUS,0
002E   1380           00166         RRR     r0x1002
002F   1380           00167         RRR     r0x1003
                      00168 ;;[ICODE] ../libsdcc/_moduint.c:50:     iTemp10 [k15 lr19:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] = iTemp10 [k15 lr19:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] - 0x1 {const-unsigned-char literal}
                      00169 ;       .line   50; "../libsdcc/_moduint.c"     --count;
0030   1B80           00170         DECR    r0x1004
                      00171 ;;[ICODE] ../libsdcc/_moduint.c:50:      goto _whilecontinue_1($8)
0031   2800           00172         GOTO    _00112_DS_
                      00173 ;;[ICODE] ../libsdcc/_moduint.c:50:  _whilebreak_1($10) :
                      00174 ;;[ICODE] ../libsdcc/_moduint.c:53:     ret iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_a_1_1}[r0x1000 r0x1001 ]
0032                  00175 _00114_DS_
                      00176 ;       .line   53; "../libsdcc/_moduint.c"     return a;
0032   1600           00177         MOVAR   r0x1001
0033   1580           00178         MOVRA   STK00
0034   1600           00179         MOVAR   r0x1000
                      00180 ;;[ICODE] ../libsdcc/_moduint.c:53:  _return($11) :
                      00181 ;;[ICODE] ../libsdcc/_moduint.c:53:     eproc __moduint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int function ( unsigned-int fixed, unsigned-int fixed) fixed}
0035                  00182 _00115_DS_
0035   000C           00183         RETURN  
                      00184 ; exit point of __moduint
                      00185 
                      00186 
                      00187 ;       code size estimation:
                      00188 ;          54+    0 =    54 instructions (  108 byte)
                      00189 
                      00190         end
gpasm-1.7.0_beta1 (Jan 22 2015)_moduint.asm       2015-1-22  23:30:21          PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

BUZOUT                            00000005
C                                 00000000
DC                                00000001
DDR0                              00000045
DDR00                             00000000
DDR01                             00000001
DDR02                             00000002
DDR03                             00000003
DDR1                              00000046
DDR10                             00000000
DDR11                             00000001
DDR12                             00000002
DDR14                             00000004
DDR15                             00000005
DDR16                             00000006
DDR17                             00000007
EIS                               00000006
FSR                               00000004
GIE                               00000007
INDF                              00000000
INT0IE                            00000002
INT0IF                            00000002
INT0M                             00000006
INTECON                           0000000E
INTFLAG                           0000000F
KBIE                              00000001
KBIF                              00000001
KBIM                              00000009
KBIM0                             00000000
KBIM1                             00000001
KBIM2                             00000002
KBIM3                             00000003
KBIM4                             00000004
KBIM5                             00000005
KBIM6                             00000006
KBIM7                             00000007
MCR                               00000008
ODCON                             0000000C
P0                                00000005
P00                               00000000
P00PD                             00000000
P01                               00000001
P01PD                             00000001
P02                               00000002
P02PD                             00000002
P03                               00000003
P03PD                             00000003
P1                                00000006
P10                               00000000
P10OD                             00000000
P10PD                             00000004
P10PU                             00000000
P11                               00000001
P11OD                             00000001
P11PD                             00000005
P11PU                             00000001
P12                               00000002
P12OD                             00000002
P12PD                             00000006
P12PU                             00000002
P13                               00000003
P14                               00000004
P14OD                             00000004
P14PU                             00000004
P15                               00000005
P15OD                             00000005
P15PU                             00000005
P16                               00000006
P16OD                             00000006
P16PU                             00000006
P17                               00000007
P17OD                             00000007
P17PU                             00000007
PCL                               00000002
PCLATH                            0000000A
PD                                00000003
PDCON                             0000000B
PUCON                             0000000D
PWMOUT                            00000006
RST                               00000007
STATUS                            00000003
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
T0CNT                             00000001
T0CR                              00000041
T0IE                              00000000
T0IF                              00000000
T0PTA                             00000003
T0PTS                             00000005
T0SE                              00000004
T1CNT                             0000004D
T1CR                              0000004C
T1DATA                            0000004F
T1IE                              00000001
T1IF                              00000000
T1LOAD                            0000004E
TBS                               00000007
TMCR                              0000004B
TMR1EN                            00000007
TO                                00000004
WDTEN                             00000007
Z                                 00000002
_00107_DS_                        00000011
_00111_DS_                        0000002D
_00112_DS_                        0000001B
_00114_DS_                        00000032
_00115_DS_                        00000035
_00119_DS_                        0000000F
_00131_DS_                        00000025
_CONFIG0                          00002000
_CONFIG1                          00002001
_CP_ALL                           00001FFF
_FCPU_2T                          00003F7F
_FCPU_4T                          00003FFF
_IRC_1M                           00003FCF
_IRC_2M                           00003FDF
_IRC_444K                         00003FAF
_IRC_4M                           00003FEF
_IRC_8M                           00003FFF
_MCLR_OFF                         00003FF7
_MCLR_ON                          00003FFF
_OSC_HXT                          00002FFF
_OSC_IRC                          000037FF
_OSC_IRC_RTC                      00003FFF
_OSC_LXT                          000027FF
_PWRT_OFF                         00003BFF
_PWRT_ON                          00003FFF
_RD_FROM_PIN                      00003FFF
_RD_FROM_REG                      00003EFF
_SMT_OFF                          00003FFF
_SMT_ON                           00003DFF
_TWDT_18MS                        00003FFF
_TWDT_288MS                       00003DFF
_TWDT_4P5MS                       00003EFF
_TWDT_72MS                        00003CFF
_VBOR_15                          00003FF8
_VBOR_18                          00003FF9
_VBOR_20                          00003FFA
_VBOR_22                          00003FFB
_VBOR_24                          00003FFC
_VBOR_26                          00003FFD
_VBOR_30                          00003FFE
_VBOR_36                          00003FFF
_WDT_OFF                          000037FF
_WDT_ON                           00003FFF
__30P011                          00000001
__moduint                         00000000
r0x1000                           00000001
r0x1001                           00000000
r0x1002                           00000003
r0x1003                           00000002
r0x1004                           00000004
r0x1006                           00000005

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

