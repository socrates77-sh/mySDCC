gpasm-1.7.0_beta1 (Jan 22 2015)fssub.asm          2015-1-22  23:30:20          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : ANSI-C Compiler
                      00003 ; Version 0.0.4 (Jan 22 2015) (Linux)
                      00004 ; This file was generated Thu Jan 22 23:30:20 2015
                      00005 ;--------------------------------------------------------
                      00006 ; MC3X port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc/fssub.c"
                      00009         list    p=30p011
                      00010         radix dec
                      00011         include "mc30p011.inc"
                      00001                 LIST
                      00002 ;mc30p011.inc    Standard Header File, Version 1.00 by Sinomcu
                      00225                 LIST
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015         extern  ___uchar2fs
                      00016         extern  ___schar2fs
                      00017         extern  ___uint2fs
                      00018         extern  ___sint2fs
                      00019         extern  ___ulong2fs
                      00020         extern  ___slong2fs
                      00021         extern  ___fs2uchar
                      00022         extern  ___fs2schar
                      00023         extern  ___fs2uint
                      00024         extern  ___fs2sint
                      00025         extern  ___fs2ulong
                      00026         extern  ___fs2slong
                      00027         extern  ___fsadd
                      00028         extern  ___fsmul
                      00029         extern  ___fsdiv
                      00030         extern  ___fslt
                      00031         extern  ___fseq
                      00032         extern  ___fsneq
                      00033         extern  ___fsgt
                      00034 
                      00035         extern STK06
                      00036         extern STK05
                      00037         extern STK04
                      00038         extern STK03
                      00039         extern STK02
                      00040         extern STK01
                      00041         extern STK00
                      00042 ;--------------------------------------------------------
                      00043 ; global declarations
                      00044 ;--------------------------------------------------------
                      00045         global  ___fssub
                      00046 
                      00047 ;--------------------------------------------------------
                      00048 ; global definitions
                      00049 ;--------------------------------------------------------
                      00050 ;--------------------------------------------------------
                      00051 ; absolute symbol definitions
                      00052 ;--------------------------------------------------------
                      00053 ;--------------------------------------------------------
                      00054 ; compiler-defined variables
                      00055 ;--------------------------------------------------------
                      00056 UDL_fssub_0     udata
0000                  00057 r0x100B res     1
0000                  00058 r0x100A res     1
0001                  00059 r0x1009 res     1
0001                  00060 r0x1008 res     1
0002                  00061 r0x100F res     1
0002                  00062 r0x100E res     1
0003                  00063 r0x100D res     1
0003                  00064 r0x100C res     1
0004                  00065 ___fssub_fl1_1_22       res     4
0006                  00066 ___fssub_fl2_1_22       res     4
                      00067 ;--------------------------------------------------------
                      00068 ; initialized data
                      00069 ;--------------------------------------------------------
                      00070 ;--------------------------------------------------------
                      00071 ; overlayable items in internal ram 
                      00072 ;--------------------------------------------------------
                      00073 ;       udata_ovr
                      00074 ;--------------------------------------------------------
                      00075 ; code
                      00076 ;--------------------------------------------------------
                      00077 code_fssub      code
                      00078 ;***
                      00079 ;  pBlock Stats: dbName = C
                      00080 ;***
                      00081 ;entry:  ___fssub       ;Function start
                      00082 ; 2 exit points
                      00083 ;has an exit
                      00084 ;functions called:
                      00085 ;   ___fsadd
                      00086 ;   ___fsadd
                      00087 ;15 compiler assigned registers:
                      00088 ;   r0x1008
                      00089 ;   STK00
                      00090 ;   r0x1009
                      00091 ;   STK01
                      00092 ;   r0x100A
                      00093 ;   STK02
                      00094 ;   r0x100B
                      00095 ;   STK03
                      00096 ;   r0x100C
                      00097 ;   STK04
                      00098 ;   r0x100D
                      00099 ;   STK05
                      00100 ;   r0x100E
                      00101 ;   STK06
                      00102 ;   r0x100F
                      00103 ;; Starting pCode block
                      00104 ;;[ICODE] ../libsdcc/fssub.c:55:  _entry($6) :
                      00105 ;;[ICODE] ../libsdcc/fssub.c:55:        proc ___fssub [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0000                  00106 ___fssub        ;Function start
                      00107 ; 2 exit points
                      00108 ;;[ICODE] ../libsdcc/fssub.c:55: iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fssub_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ] = recv ___fssub [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
                      00109 ;       .line   55; "../libsdcc/fssub.c"        float __fssub (float a1, float a2) _FS_REENTRANT
0000   1580           00110         MOVRA   r0x1008
0001   1600           00111         MOVAR   STK00
0002   1580           00112         MOVRA   r0x1009
0003   1600           00113         MOVAR   STK01
0004   1580           00114         MOVRA   r0x100A
0005   1600           00115         MOVAR   STK02
0006   1580           00116         MOVRA   (___fssub_fl1_1_22 + 0)
0007   1580           00117         MOVRA   r0x100B
                      00118 ;;[ICODE] ../libsdcc/fssub.c:55: iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fssub_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ] = recv ___fssub [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0008   1600           00119         MOVAR   STK03
0009   1580           00120         MOVRA   r0x100C
000A   1600           00121         MOVAR   STK04
000B   1580           00122         MOVRA   r0x100D
000C   1600           00123         MOVAR   STK05
000D   1580           00124         MOVRA   r0x100E
000E   1600           00125         MOVAR   STK06
000F   1580           00126         MOVRA   r0x100F
                      00127 ;;[ICODE] ../libsdcc/fssub.c:59:        iTemp2 [k7 lr5:6 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fssub_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00128 ;;[ICODE] ../libsdcc/fssub.c:59:        *(iTemp2 [k7 lr5:6 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fssub_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00129 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
                      00130 ;;109   MOVAR   r0x100B
                      00131 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
                      00132 ;       .line   59; "../libsdcc/fssub.c"        fl1.f = a1;
0010   1600           00133         MOVAR   r0x100A
0011   1580           00134         MOVRA   (___fssub_fl1_1_22 + 1)
                      00135 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
0012   1600           00136         MOVAR   r0x1009
0013   1580           00137         MOVRA   (___fssub_fl1_1_22 + 2)
                      00138 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
0014   1600           00139         MOVAR   r0x1008
0015   1580           00140         MOVRA   (___fssub_fl1_1_22 + 3)
                      00141 ;;[ICODE] ../libsdcc/fssub.c:60:        iTemp4 [k11 lr7:8 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fssub_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00142 ;;[ICODE] ../libsdcc/fssub.c:60:        *(iTemp4 [k11 lr7:8 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fssub_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ]
                      00143 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
                      00144 ;       .line   60; "../libsdcc/fssub.c"        fl2.f = a2;
0016   1600           00145         MOVAR   r0x100F
0017   1580           00146         MOVRA   (___fssub_fl2_1_22 + 0)
                      00147 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
0018   1600           00148         MOVAR   r0x100E
0019   1580           00149         MOVRA   (___fssub_fl2_1_22 + 1)
                      00150 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
001A   1600           00151         MOVAR   r0x100D
001B   1580           00152         MOVRA   (___fssub_fl2_1_22 + 2)
                      00153 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
001C   1600           00154         MOVAR   r0x100C
001D   1580           00155         MOVRA   (___fssub_fl2_1_22 + 3)
                      00156 ;;[ICODE] ../libsdcc/fssub.c:63:        iTemp6 [k14 lr9:10 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fssub_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00157 ;;[ICODE] ../libsdcc/fssub.c:63:        iTemp8 [k17 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp6 [k14 lr9:10 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00158 ;       .line   63; "../libsdcc/fssub.c"        if (!fl2.l)
001E   1600           00159         MOVAR   (___fssub_fl2_1_22 + 0)
001F   1580           00160         MOVRA   r0x100B
0020   1600           00161         MOVAR   (___fssub_fl2_1_22 + 1)
0021   1580           00162         MOVRA   r0x100A
0022   1600           00163         MOVAR   (___fssub_fl2_1_22 + 2)
0023   1580           00164         MOVRA   r0x1009
0024   1600           00165         MOVAR   (___fssub_fl2_1_22 + 3)
0025   1580           00166         MOVRA   r0x1008
                      00167 ;;[ICODE] ../libsdcc/fssub.c:63:        if iTemp8 [k17 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] != 0 goto _iffalse_0($2)
0026   1600           00168         MOVAR   r0x100B
0027   1700           00169         ORAR    r0x100A
0028   1700           00170         ORAR    r0x1009
0029   1700           00171         ORAR    r0x1008
002A   3103           00172         JBSET   STATUS,2
002B   2800           00173         GOTO    _00106_DS_
                      00174 ;;[ICODE] ../libsdcc/fssub.c:64:        iTemp9 [k18 lr12:13 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fssub_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00175 ;;[ICODE] ../libsdcc/fssub.c:64:        iTemp11 [k21 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp9 [k18 lr12:13 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00176 ;       .line   64; "../libsdcc/fssub.c"        return (fl1.f);
002C   1600           00177         MOVAR   (___fssub_fl1_1_22 + 0)
002D   1580           00178         MOVRA   r0x100B
002E   1600           00179         MOVAR   (___fssub_fl1_1_22 + 1)
002F   1580           00180         MOVRA   r0x100A
0030   1600           00181         MOVAR   (___fssub_fl1_1_22 + 2)
0031   1580           00182         MOVRA   r0x1009
0032   1600           00183         MOVAR   (___fssub_fl1_1_22 + 3)
0033   1580           00184         MOVRA   r0x1008
                      00185 ;;[ICODE] ../libsdcc/fssub.c:64:        ret iTemp11 [k21 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0034   1600           00186         MOVAR   r0x100B
0035   1580           00187         MOVRA   STK02
0036   1600           00188         MOVAR   r0x100A
0037   1580           00189         MOVRA   STK01
0038   1600           00190         MOVAR   r0x1009
0039   1580           00191         MOVRA   STK00
003A   1600           00192         MOVAR   r0x1008
003B   2800           00193         GOTO    _00109_DS_
                      00194 ;;[ICODE] ../libsdcc/fssub.c:64:  _iffalse_0($2) :
                      00195 ;;[ICODE] ../libsdcc/fssub.c:65:        iTemp12 [k22 lr16:17 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fssub_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00196 ;;[ICODE] ../libsdcc/fssub.c:65:        iTemp14 [k25 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp12 [k22 lr16:17 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
003C                  00197 _00106_DS_
                      00198 ;       .line   65; "../libsdcc/fssub.c"        if (!fl1.l)
003C   1600           00199         MOVAR   (___fssub_fl1_1_22 + 0)
003D   1580           00200         MOVRA   r0x100B
003E   1600           00201         MOVAR   (___fssub_fl1_1_22 + 1)
003F   1580           00202         MOVRA   r0x100A
0040   1600           00203         MOVAR   (___fssub_fl1_1_22 + 2)
0041   1580           00204         MOVRA   r0x1009
0042   1600           00205         MOVAR   (___fssub_fl1_1_22 + 3)
0043   1580           00206         MOVRA   r0x1008
                      00207 ;;[ICODE] ../libsdcc/fssub.c:65:        if iTemp14 [k25 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] != 0 goto _iffalse_1($4)
0044   1600           00208         MOVAR   r0x100B
0045   1700           00209         ORAR    r0x100A
0046   1700           00210         ORAR    r0x1009
0047   1700           00211         ORAR    r0x1008
0048   3103           00212         JBSET   STATUS,2
0049   2800           00213         GOTO    _00108_DS_
                      00214 ;;[ICODE] ../libsdcc/fssub.c:66:        iTemp15 [k26 lr19:20 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fssub_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00215 ;;[ICODE] ../libsdcc/fssub.c:66:        iTemp17 [k29 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp15 [k26 lr19:20 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00216 ;       .line   66; "../libsdcc/fssub.c"        return (-fl2.f);
004A   1600           00217         MOVAR   (___fssub_fl2_1_22 + 0)
004B   1580           00218         MOVRA   r0x100B
004C   1600           00219         MOVAR   (___fssub_fl2_1_22 + 1)
004D   1580           00220         MOVRA   r0x100A
004E   1600           00221         MOVAR   (___fssub_fl2_1_22 + 2)
004F   1580           00222         MOVRA   r0x1009
0050   1600           00223         MOVAR   (___fssub_fl2_1_22 + 3)
0051   1580           00224         MOVRA   r0x1008
                      00225 ;;[ICODE] ../libsdcc/fssub.c:66:        iTemp18 [k30 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = - iTemp17 [k29 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0052   1600           00226         MOVAR   r0x1008
0053   0880           00227         XORAI   0x80
0054   1580           00228         MOVRA   r0x1008
0055   1600           00229         MOVAR   r0x1009
0056   1580           00230         MOVRA   r0x1009
0057   1600           00231         MOVAR   r0x100A
0058   1580           00232         MOVRA   r0x100A
0059   1600           00233         MOVAR   r0x100B
005A   1580           00234         MOVRA   r0x100B
                      00235 ;;[ICODE] ../libsdcc/fssub.c:66:        ret iTemp18 [k30 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
005B   1600           00236         MOVAR   r0x100B
005C   1580           00237         MOVRA   STK02
005D   1600           00238         MOVAR   r0x100A
005E   1580           00239         MOVRA   STK01
005F   1600           00240         MOVAR   r0x1009
0060   1580           00241         MOVRA   STK00
0061   1600           00242         MOVAR   r0x1008
0062   2800           00243         GOTO    _00109_DS_
                      00244 ;;[ICODE] ../libsdcc/fssub.c:66:  _iffalse_1($4) :
                      00245 ;;[ICODE] ../libsdcc/fssub.c:69:        iTemp19 [k31 lr24:29 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fssub_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00246 ;;[ICODE] ../libsdcc/fssub.c:69:        iTemp21 [k34 lr25:26 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fssub_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00247 ;;[ICODE] ../libsdcc/fssub.c:69:        iTemp23 [k37 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp21 [k34 lr25:26 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0063                  00248 _00108_DS_
                      00249 ;       .line   69; "../libsdcc/fssub.c"        fl2.l ^= SIGNBIT;
0063   1600           00250         MOVAR   (___fssub_fl2_1_22 + 0)
0064   1580           00251         MOVRA   r0x100F
0065   1580           00252         MOVRA   r0x100B
0066   1600           00253         MOVAR   (___fssub_fl2_1_22 + 1)
0067   1580           00254         MOVRA   r0x100E
0068   1580           00255         MOVRA   r0x100A
0069   1600           00256         MOVAR   (___fssub_fl2_1_22 + 2)
006A   1580           00257         MOVRA   r0x100D
006B   1580           00258         MOVRA   r0x1009
006C   1600           00259         MOVAR   (___fssub_fl2_1_22 + 3)
006D   1580           00260         MOVRA   r0x100C
006E   1580           00261         MOVRA   r0x1008
                      00262 ;;[ICODE] ../libsdcc/fssub.c:69:        iTemp24 [k38 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1004 r0x1005 r0x1006 r0x1007 ] = (unsigned-long-int register)iTemp23 [k37 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00263 ;;106   MOVAR   r0x100B
                      00264 ;;107   MOVAR   r0x100A
                      00265 ;;108   MOVAR   r0x1009
                      00266 ;;105   MOVAR   r0x1008
                      00267 ;;[ICODE] ../libsdcc/fssub.c:69:        iTemp25 [k39 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1001 r0x1002 r0x1003 ] = iTemp24 [k38 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1004 r0x1005 r0x1006 r0x1007 ] ^ 0x80000000 {unsigned-long-int literal}
                      00268 ;;100   MOVAR   r0x100F
                      00269 ;;102   MOVAR   r0x100E
                      00270 ;;104   MOVAR   r0x100D
006F   0B80           00271         MOVAI   0x80
0070   1000           00272         XORAR   r0x100C
0071   1580           00273         MOVRA   r0x1008
                      00274 ;;[ICODE] ../libsdcc/fssub.c:69:        *(iTemp19 [k31 lr24:29 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat]) := iTemp25 [k39 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00275 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
                      00276 ;;99    MOVAR   r0x100B
0072   1600           00277         MOVAR   r0x100F
0073   1580           00278         MOVRA   r0x100B
0074   1580           00279         MOVRA   (___fssub_fl2_1_22 + 0)
                      00280 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
                      00281 ;;101   MOVAR   r0x100A
0075   1600           00282         MOVAR   r0x100E
0076   1580           00283         MOVRA   r0x100A
0077   1580           00284         MOVRA   (___fssub_fl2_1_22 + 1)
                      00285 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
                      00286 ;;103   MOVAR   r0x1009
0078   1600           00287         MOVAR   r0x100D
0079   1580           00288         MOVRA   r0x1009
007A   1580           00289         MOVRA   (___fssub_fl2_1_22 + 2)
                      00290 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
007B   1600           00291         MOVAR   r0x1008
007C   1580           00292         MOVRA   (___fssub_fl2_1_22 + 3)
                      00293 ;;[ICODE] ../libsdcc/fssub.c:70:        iTemp26 [k40 lr30:31 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fssub_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00294 ;;[ICODE] ../libsdcc/fssub.c:70:        iTemp28 [k43 lr31:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp26 [k40 lr30:31 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00295 ;       .line   70; "../libsdcc/fssub.c"        return fl1.f + fl2.f; 
007D   1600           00296         MOVAR   (___fssub_fl1_1_22 + 0)
007E   1580           00297         MOVRA   r0x100B
007F   1600           00298         MOVAR   (___fssub_fl1_1_22 + 1)
0080   1580           00299         MOVRA   r0x100A
0081   1600           00300         MOVAR   (___fssub_fl1_1_22 + 2)
0082   1580           00301         MOVRA   r0x1009
0083   1600           00302         MOVAR   (___fssub_fl1_1_22 + 3)
0084   1580           00303         MOVRA   r0x1008
                      00304 ;;[ICODE] ../libsdcc/fssub.c:70:        iTemp29 [k44 lr32:33 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fssub_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00305 ;;[ICODE] ../libsdcc/fssub.c:70:        iTemp31 [k47 lr33:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-float fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] = @[iTemp29 [k44 lr32:33 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0085   1600           00306         MOVAR   (___fssub_fl2_1_22 + 0)
0086   1580           00307         MOVRA   r0x100F
0087   1600           00308         MOVAR   (___fssub_fl2_1_22 + 1)
0088   1580           00309         MOVRA   r0x100E
0089   1600           00310         MOVAR   (___fssub_fl2_1_22 + 2)
008A   1580           00311         MOVRA   r0x100D
008B   1600           00312         MOVAR   (___fssub_fl2_1_22 + 3)
008C   1580           00313         MOVRA   r0x100C
                      00314 ;;[ICODE] ../libsdcc/fssub.c:70:        send iTemp28 [k43 lr31:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]{argreg = 1}
                      00315 ;;[ICODE] ../libsdcc/fssub.c:70:        send iTemp31 [k47 lr33:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-float fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ]{argreg = 1}
                      00316 ;;[ICODE] ../libsdcc/fssub.c:70:        iTemp32 [k48 lr36:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = call ___fsadd [k49 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
008D   1600           00317         MOVAR   r0x100F
008E   1580           00318         MOVRA   STK06
008F   1600           00319         MOVAR   r0x100E
0090   1580           00320         MOVRA   STK05
0091   1600           00321         MOVAR   r0x100D
0092   1580           00322         MOVRA   STK04
0093   1600           00323         MOVAR   r0x100C
0094   1580           00324         MOVRA   STK03
0095   1600           00325         MOVAR   r0x100B
0096   1580           00326         MOVRA   STK02
0097   1600           00327         MOVAR   r0x100A
0098   1580           00328         MOVRA   STK01
0099   1600           00329         MOVAR   r0x1009
009A   1580           00330         MOVRA   STK00
009B   1600           00331         MOVAR   r0x1008
009C   2000           00332         CALL    ___fsadd
009D   1580           00333         MOVRA   r0x1008
009E   1600           00334         MOVAR   STK00
009F   1580           00335         MOVRA   r0x1009
00A0   1600           00336         MOVAR   STK01
00A1   1580           00337         MOVRA   r0x100A
00A2   1600           00338         MOVAR   STK02
00A3   1580           00339         MOVRA   r0x100B
                      00340 ;;[ICODE] ../libsdcc/fssub.c:70:        ret iTemp32 [k48 lr36:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
00A4   1600           00341         MOVAR   r0x100B
00A5   1580           00342         MOVRA   STK02
00A6   1600           00343         MOVAR   r0x100A
00A7   1580           00344         MOVRA   STK01
00A8   1600           00345         MOVAR   r0x1009
00A9   1580           00346         MOVRA   STK00
00AA   1600           00347         MOVAR   r0x1008
                      00348 ;;[ICODE] ../libsdcc/fssub.c:70:  _return($5) :
                      00349 ;;[ICODE] ../libsdcc/fssub.c:70:        eproc ___fssub [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
00AB                  00350 _00109_DS_
00AB   000C           00351         RETURN  
                      00352 ; exit point of ___fssub
                      00353 
                      00354 
                      00355 ;       code size estimation:
                      00356 ;         172+    0 =   172 instructions (  344 byte)
                      00357 
                      00358         end
gpasm-1.7.0_beta1 (Jan 22 2015)fssub.asm          2015-1-22  23:30:20          PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

BUZOUT                            00000005
C                                 00000000
DC                                00000001
DDR0                              00000045
DDR00                             00000000
DDR01                             00000001
DDR02                             00000002
DDR03                             00000003
DDR1                              00000046
DDR10                             00000000
DDR11                             00000001
DDR12                             00000002
DDR14                             00000004
DDR15                             00000005
DDR16                             00000006
DDR17                             00000007
EIS                               00000006
FSR                               00000004
GIE                               00000007
INDF                              00000000
INT0IE                            00000002
INT0IF                            00000002
INT0M                             00000006
INTECON                           0000000E
INTFLAG                           0000000F
KBIE                              00000001
KBIF                              00000001
KBIM                              00000009
KBIM0                             00000000
KBIM1                             00000001
KBIM2                             00000002
KBIM3                             00000003
KBIM4                             00000004
KBIM5                             00000005
KBIM6                             00000006
KBIM7                             00000007
MCR                               00000008
ODCON                             0000000C
P0                                00000005
P00                               00000000
P00PD                             00000000
P01                               00000001
P01PD                             00000001
P02                               00000002
P02PD                             00000002
P03                               00000003
P03PD                             00000003
P1                                00000006
P10                               00000000
P10OD                             00000000
P10PD                             00000004
P10PU                             00000000
P11                               00000001
P11OD                             00000001
P11PD                             00000005
P11PU                             00000001
P12                               00000002
P12OD                             00000002
P12PD                             00000006
P12PU                             00000002
P13                               00000003
P14                               00000004
P14OD                             00000004
P14PU                             00000004
P15                               00000005
P15OD                             00000005
P15PU                             00000005
P16                               00000006
P16OD                             00000006
P16PU                             00000006
P17                               00000007
P17OD                             00000007
P17PU                             00000007
PCL                               00000002
PCLATH                            0000000A
PD                                00000003
PDCON                             0000000B
PUCON                             0000000D
PWMOUT                            00000006
RST                               00000007
STATUS                            00000003
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
T0CNT                             00000001
T0CR                              00000041
T0IE                              00000000
T0IF                              00000000
T0PTA                             00000003
T0PTS                             00000005
T0SE                              00000004
T1CNT                             0000004D
T1CR                              0000004C
T1DATA                            0000004F
T1IE                              00000001
T1IF                              00000000
T1LOAD                            0000004E
TBS                               00000007
TMCR                              0000004B
TMR1EN                            00000007
TO                                00000004
WDTEN                             00000007
Z                                 00000002
_00106_DS_                        0000003C
_00108_DS_                        00000063
_00109_DS_                        000000AB
_CONFIG0                          00002000
_CONFIG1                          00002001
_CP_ALL                           00001FFF
_FCPU_2T                          00003F7F
_FCPU_4T                          00003FFF
_IRC_1M                           00003FCF
_IRC_2M                           00003FDF
_IRC_444K                         00003FAF
_IRC_4M                           00003FEF
_IRC_8M                           00003FFF
_MCLR_OFF                         00003FF7
_MCLR_ON                          00003FFF
_OSC_HXT                          00002FFF
_OSC_IRC                          000037FF
_OSC_IRC_RTC                      00003FFF
_OSC_LXT                          000027FF
_PWRT_OFF                         00003BFF
_PWRT_ON                          00003FFF
_RD_FROM_PIN                      00003FFF
_RD_FROM_REG                      00003EFF
_SMT_OFF                          00003FFF
_SMT_ON                           00003DFF
_TWDT_18MS                        00003FFF
_TWDT_288MS                       00003DFF
_TWDT_4P5MS                       00003EFF
_TWDT_72MS                        00003CFF
_VBOR_15                          00003FF8
_VBOR_18                          00003FF9
_VBOR_20                          00003FFA
_VBOR_22                          00003FFB
_VBOR_24                          00003FFC
_VBOR_26                          00003FFD
_VBOR_30                          00003FFE
_VBOR_36                          00003FFF
_WDT_OFF                          000037FF
_WDT_ON                           00003FFF
__30P011                          00000001
___fs2schar                       00000000
___fs2sint                        00000000
___fs2slong                       00000000
___fs2uchar                       00000000
___fs2uint                        00000000
___fs2ulong                       00000000
___fsadd                          00000000
___fsdiv                          00000000
___fseq                           00000000
___fsgt                           00000000
___fslt                           00000000
___fsmul                          00000000
___fsneq                          00000000
___fssub                          00000000
___fssub_fl1_1_22                 00000008
___fssub_fl2_1_22                 0000000C
___schar2fs                       00000000
___sint2fs                        00000000
___slong2fs                       00000000
___uchar2fs                       00000000
___uint2fs                        00000000
___ulong2fs                       00000000
r0x1008                           00000003
r0x1009                           00000002
r0x100A                           00000001
r0x100B                           00000000
r0x100C                           00000007
r0x100D                           00000006
r0x100E                           00000005
r0x100F                           00000004

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

