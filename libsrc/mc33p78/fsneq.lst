gpasm-1.7.0_beta1 (Jan 22 2015)fsneq.asm          2015-1-22  23:37:00          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : ANSI-C Compiler
                      00003 ; Version 0.0.4 (Jan 22 2015) (Linux)
                      00004 ; This file was generated Thu Jan 22 23:37:00 2015
                      00005 ;--------------------------------------------------------
                      00006 ; MC3X port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc/fsneq.c"
                      00009         list    p=33p78
                      00010         radix dec
                      00011         include "mc33p78.inc"
                      00001 
                      00002 ;mc33p78 header file
                      00003 ;define must write at first row
                      00004 
  000001B0            00005 INDF    EQU     0X01B0       
  000001B0            00006 INDF0   EQU     0X01B0
  000001B1            00007 INDF1   EQU     0X01B1
  000001B2            00008 INDF2   EQU     0X01B2
  000001B3            00009 HIBYTE  EQU     0X01B3
  000001B4            00010 FSR     EQU     0X01B4
  000001B4            00011 FSR0    EQU     0X01B4
  000001B5            00012 FSR1    EQU     0X1B5
  000001B6            00013 PCL     EQU     0X1B6
  000001B7            00014 PFLAG   EQU    0X1B7
  000001B7            00015 STATUS  EQU     0X1B7
  000001B8            00016 MCR     EQU     0X1B8
  000001B9            00017 INDF3   EQU    0X1B9   
  000001BA            00018 INTE    EQU     0X1BA
  000001BB            00019 INTF    EQU     0X1BB
  000001BC            00020 OSCM    EQU     0X1BC
                      00021 ;IOP0    EQU     0X1C0
                      00022 ;OEP0    EQU     0X1C1
                      00023 ;PUP0    EQU     0X1C2
                      00024 ;IOP1    EQU     0X1C4
                      00025 ;OEP1    EQU     0X1C5
                      00026 ;PUP1    EQU     0X1C6
  000001C8            00027 IOP1    EQU     0X1C8
  000001C9            00028 OEP1    EQU     0X1C9
  000001CA            00029 PUP1    EQU     0X1CA
                      00030 
  000001CE            00031 DKWP1    EQU     0X1CE
                      00032 
  000001D0            00033 IOP2    EQU     0X1D0
  000001D1            00034 OEP2    EQU     0X1D1
  000001D2            00035 PUP2    EQU     0X1D2
                      00036 ;T0DATA  EQU     0X1D3
                      00037 ;T1CR    EQU     0X1D4
                      00038 ;T1CNT   EQU     0X1D5
  000001D6            00039 DKWP2   EQU     0X1D6
  000001D7            00040 KBCR    EQU     0X1D7
  000001D8            00041 T0CR    EQU     0X1D8
  000001D9            00042 T0LOADH EQU     0X1D9
  000001DA            00043 T0LOADL  EQU     0X1DA
  000001DB            00044 T0LATFL   EQU     0X1DB
  000001DC            00045 T0LATFH EQU     0X1DC
                      00046 
  000001DD            00047 T0LATRL  EQU     0X1DD
  000001DE            00048 T0LATRH  EQU     0X1DE
                      00049 
  000001E0            00050 T1CR    EQU     0X1E0
  000001E1            00051 T1DATA  EQU     0X1E1
  000001E2            00052 T1LOAD  EQU     0X1E2
                      00053 
  000001E4            00054 OPCR0   EQU     0X1E4
  000001E5            00055 OPCR1   EQU     0X1E5
  000001E6            00056 DKW0    EQU     0X1E6
  000001E7            00057 DKW1    EQU     0X1E7
                      00058 
                      00059 ;pflag bit 
                      00060 #define         Z       PFLAG,2
                      00061 #define         DC      PFLAG,1
                      00062 #define         C       PFLAG,0 
                      00063 
                      00064 ;MCR
                      00065 #define         GIE     MCR,7
                      00066 #DEFINE         TO      MCR,5
                      00067 #DEFINE         PD      MCR,4
                      00068 #DEFINE         MINT11  MCR,3
                      00069 
                      00070 
                      00071 ;INTE
                      00072 #define         KBIE    INTE,7
                      00073 #DEFINE         INT1IE  INTE,3
                      00074 #DEFINE         INT0IE  INTE,2
                      00075 #DEFINE         T1IE    INTE,1
                      00076 #define         T0IE    INTE,0
                      00077 
                      00078 ;INTF
                      00079 #DEFINE         KBIF    INTF,7
                      00080 #DEFINE         T0RF    INTF,6
                      00081 #DEFINE         INT1IF  INTF,3
                      00082 #DEFINE         INT0IF  INTF,2
                      00083 #DEFINE         T1IF    INTF,1
                      00084 #DEFINE         T0IF    INTF,0
                      00085 
                      00086 ;DKW0
                      00087 #DEFINE         DKWE    DKW0,7
                      00088 #DEFINE         IROS    DKW0,6
                      00089 #DEFINE         IROT    DKW0,5         
                      00090 #DEFINE         WSEL0   DKW0,4
                      00091 #DEFINE         WSEL1   DKW0,3
                      00092 #DEFINE         RSEL    DKW0,2
                      00093 #DEFINE         ISEL1   DKW0,1
                      00094 #define         ISEL0   DKW0,0 
                      00095 
                      00096 #define                                 HFEN            OSCM,0
                      00097 #define                                 LFEN            OSCM,1
                      00098 #define                                 CLKS            OSCM,2
                      00099 #define                                 STBH            OSCM,4
                      00100 #DEFINE                                 STBL            OSCM,5
                      00101 
                      00102 ;T0CR
                      00103 #DEFINE         TC0EN   T0CR,7
                      00104 ;#DEFINE  
                      00105 
                      00106 ;T1CR
                      00107 #DEFINE         TC1EN   T1CR,7
                      00108          
                      00109     
                      00110 
                      00111 
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015         extern  ___uchar2fs
                      00016         extern  ___schar2fs
                      00017         extern  ___uint2fs
                      00018         extern  ___sint2fs
                      00019         extern  ___ulong2fs
                      00020         extern  ___slong2fs
                      00021         extern  ___fs2uchar
                      00022         extern  ___fs2schar
                      00023         extern  ___fs2uint
                      00024         extern  ___fs2sint
                      00025         extern  ___fs2ulong
                      00026         extern  ___fs2slong
                      00027         extern  ___fsadd
                      00028         extern  ___fssub
                      00029         extern  ___fsmul
                      00030         extern  ___fsdiv
                      00031         extern  ___fslt
                      00032         extern  ___fseq
                      00033         extern  ___fsgt
                      00034 
                      00035         extern STK06
                      00036         extern STK05
                      00037         extern STK04
                      00038         extern STK03
                      00039         extern STK02
                      00040         extern STK01
                      00041         extern STK00
                      00042 ;--------------------------------------------------------
                      00043 ; global declarations
                      00044 ;--------------------------------------------------------
                      00045         global  ___fsneq
                      00046 
                      00047 ;--------------------------------------------------------
                      00048 ; global definitions
                      00049 ;--------------------------------------------------------
                      00050 ;--------------------------------------------------------
                      00051 ; absolute symbol definitions
                      00052 ;--------------------------------------------------------
                      00053 ;--------------------------------------------------------
                      00054 ; compiler-defined variables
                      00055 ;--------------------------------------------------------
                      00056 UDL_fsneq_0     udata
0000                  00057 r0x100B res     1
0000                  00058 r0x100A res     1
0001                  00059 r0x1009 res     1
0001                  00060 r0x1008 res     1
0002                  00061 r0x100F res     1
0002                  00062 r0x100E res     1
0003                  00063 r0x100D res     1
0003                  00064 r0x100C res     1
0004                  00065 ___fsneq_fl1_1_22       res     4
0006                  00066 ___fsneq_fl2_1_22       res     4
                      00067 ;--------------------------------------------------------
                      00068 ; initialized data
                      00069 ;--------------------------------------------------------
                      00070 ;--------------------------------------------------------
                      00071 ; overlayable items in internal ram 
                      00072 ;--------------------------------------------------------
                      00073 ;       udata_ovr
                      00074 ;--------------------------------------------------------
                      00075 ; code
                      00076 ;--------------------------------------------------------
                      00077 code_fsneq      code
                      00078 ;***
                      00079 ;  pBlock Stats: dbName = C
                      00080 ;***
                      00081 ;entry:  ___fsneq       ;Function start
                      00082 ; 2 exit points
                      00083 ;has an exit
                      00084 ;15 compiler assigned registers:
                      00085 ;   r0x1008
                      00086 ;   STK00
                      00087 ;   r0x1009
                      00088 ;   STK01
                      00089 ;   r0x100A
                      00090 ;   STK02
                      00091 ;   r0x100B
                      00092 ;   STK03
                      00093 ;   r0x100C
                      00094 ;   STK04
                      00095 ;   r0x100D
                      00096 ;   STK05
                      00097 ;   r0x100E
                      00098 ;   STK06
                      00099 ;   r0x100F
                      00100 ;; Starting pCode block
                      00101 ;;[ICODE] ../libsdcc/fsneq.c:55:  _entry($4) :
                      00102 ;;[ICODE] ../libsdcc/fsneq.c:55:        proc ___fsneq [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
0000                  00103 ___fsneq        ;Function start
                      00104 ; 2 exit points
                      00105 ;;[ICODE] ../libsdcc/fsneq.c:55: iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsneq_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ] = recv ___fsneq [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
                      00106 ;       .line   55; "../libsdcc/fsneq.c"        char __fsneq (float a1, float a2) _FS_REENTRANT
0000   5600           00107         MOVRA   r0x1008
0001   5800           00108         MOVAR   STK00
0002   5600           00109         MOVRA   r0x1009
0003   5800           00110         MOVAR   STK01
0004   5600           00111         MOVRA   r0x100A
0005   5800           00112         MOVAR   STK02
0006   5600           00113         MOVRA   (___fsneq_fl1_1_22 + 0)
0007   5600           00114         MOVRA   r0x100B
                      00115 ;;[ICODE] ../libsdcc/fsneq.c:55: iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsneq_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ] = recv ___fsneq [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
0008   5800           00116         MOVAR   STK03
0009   5600           00117         MOVRA   r0x100C
000A   5800           00118         MOVAR   STK04
000B   5600           00119         MOVRA   r0x100D
000C   5800           00120         MOVAR   STK05
000D   5600           00121         MOVRA   r0x100E
000E   5800           00122         MOVAR   STK06
000F   5600           00123         MOVRA   r0x100F
                      00124 ;;[ICODE] ../libsdcc/fsneq.c:59:        iTemp2 [k7 lr5:6 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsneq_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00125 ;;[ICODE] ../libsdcc/fsneq.c:59:        *(iTemp2 [k7 lr5:6 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsneq_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00126 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
                      00127 ;;99    MOVAR   r0x100B
                      00128 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
                      00129 ;       .line   59; "../libsdcc/fsneq.c"        fl1.f = a1;
0010   5800           00130         MOVAR   r0x100A
0011   5600           00131         MOVRA   (___fsneq_fl1_1_22 + 1)
                      00132 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
0012   5800           00133         MOVAR   r0x1009
0013   5600           00134         MOVRA   (___fsneq_fl1_1_22 + 2)
                      00135 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
0014   5800           00136         MOVAR   r0x1008
0015   5600           00137         MOVRA   (___fsneq_fl1_1_22 + 3)
                      00138 ;;[ICODE] ../libsdcc/fsneq.c:60:        iTemp4 [k11 lr7:8 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsneq_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00139 ;;[ICODE] ../libsdcc/fsneq.c:60:        *(iTemp4 [k11 lr7:8 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsneq_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ]
                      00140 ;;gen.c:6444: size=3/4, offset=0, AOP_TYPE(res)=8
                      00141 ;       .line   60; "../libsdcc/fsneq.c"        fl2.f = a2;
0016   5800           00142         MOVAR   r0x100F
0017   5600           00143         MOVRA   (___fsneq_fl2_1_22 + 0)
                      00144 ;;gen.c:6444: size=2/4, offset=1, AOP_TYPE(res)=8
0018   5800           00145         MOVAR   r0x100E
0019   5600           00146         MOVRA   (___fsneq_fl2_1_22 + 1)
                      00147 ;;gen.c:6444: size=1/4, offset=2, AOP_TYPE(res)=8
001A   5800           00148         MOVAR   r0x100D
001B   5600           00149         MOVRA   (___fsneq_fl2_1_22 + 2)
                      00150 ;;gen.c:6444: size=0/4, offset=3, AOP_TYPE(res)=8
001C   5800           00151         MOVAR   r0x100C
001D   5600           00152         MOVRA   (___fsneq_fl2_1_22 + 3)
                      00153 ;;[ICODE] ../libsdcc/fsneq.c:70:        iTemp6 [k14 lr9:10 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsneq_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00154 ;;[ICODE] ../libsdcc/fsneq.c:70:        iTemp8 [k17 lr10:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp6 [k14 lr9:10 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00155 ;       .line   70; "../libsdcc/fsneq.c"        if (fl1.l == fl2.l)
001E   5800           00156         MOVAR   (___fsneq_fl1_1_22 + 0)
001F   5600           00157         MOVRA   r0x100B
0020   5800           00158         MOVAR   (___fsneq_fl1_1_22 + 1)
0021   5600           00159         MOVRA   r0x100A
0022   5800           00160         MOVAR   (___fsneq_fl1_1_22 + 2)
0023   5600           00161         MOVRA   r0x1009
0024   5800           00162         MOVAR   (___fsneq_fl1_1_22 + 3)
0025   5600           00163         MOVRA   r0x1008
                      00164 ;;[ICODE] ../libsdcc/fsneq.c:70:        iTemp9 [k18 lr11:12 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsneq_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00165 ;;[ICODE] ../libsdcc/fsneq.c:70:        iTemp11 [k21 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] = @[iTemp9 [k18 lr11:12 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0026   5800           00166         MOVAR   (___fsneq_fl2_1_22 + 0)
0027   5600           00167         MOVRA   r0x100F
0028   5800           00168         MOVAR   (___fsneq_fl2_1_22 + 1)
0029   5600           00169         MOVRA   r0x100E
002A   5800           00170         MOVAR   (___fsneq_fl2_1_22 + 2)
002B   5600           00171         MOVRA   r0x100D
002C   5800           00172         MOVAR   (___fsneq_fl2_1_22 + 3)
002D   5600           00173         MOVRA   r0x100C
                      00174 ;;[ICODE] ../libsdcc/fsneq.c:70:        iTemp12 [k22 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp8 [k17 lr10:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] == iTemp11 [k21 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ]
002E   5800           00175         MOVAR   r0x100F
002F   4000           00176         XORAR   r0x100B
0030   E5B7           00177         JBSET   STATUS,2
0031   A000           00178         GOTO    _00106_DS_
0032   5800           00179         MOVAR   r0x100E
0033   4000           00180         XORAR   r0x100A
0034   E5B7           00181         JBSET   STATUS,2
0035   A000           00182         GOTO    _00106_DS_
0036   5800           00183         MOVAR   r0x100D
0037   4000           00184         XORAR   r0x1009
0038   E5B7           00185         JBSET   STATUS,2
0039   A000           00186         GOTO    _00106_DS_
003A   5800           00187         MOVAR   r0x100C
003B   4000           00188         XORAR   r0x1008
003C   E5B7           00189         JBSET   STATUS,2
003D   A000           00190         GOTO    _00106_DS_
                      00191 ;;[ICODE] ../libsdcc/fsneq.c:70:        if iTemp12 [k22 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_0($2)
                      00192 ;;[ICODE] ../libsdcc/fsneq.c:71:        ret 0x0 {const-unsigned-char literal}
                      00193 ;       .line   71; "../libsdcc/fsneq.c"        return (0);
003E   3C00           00194         MOVAI   0x00
003F   A000           00195         GOTO    _00107_DS_
                      00196 ;;[ICODE] ../libsdcc/fsneq.c:71:  _iffalse_0($2) :
                      00197 ;;[ICODE] ../libsdcc/fsneq.c:72:        ret 0x1 {const-unsigned-char literal}
0040                  00198 _00106_DS_
                      00199 ;       .line   72; "../libsdcc/fsneq.c"        return (1);
0040   3C01           00200         MOVAI   0x01
                      00201 ;;[ICODE] ../libsdcc/fsneq.c:72:  _return($3) :
                      00202 ;;[ICODE] ../libsdcc/fsneq.c:72:        eproc ___fsneq [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
0041                  00203 _00107_DS_
0041   000C           00204         RETURN  
                      00205 ; exit point of ___fsneq
                      00206 
                      00207 
                      00208 ;       code size estimation:
                      00209 ;          66+    0 =    66 instructions (  132 byte)
                      00210 
                      00211         end
gpasm-1.7.0_beta1 (Jan 22 2015)fsneq.asm          2015-1-22  23:37:00          PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

DKW0                              000001E6
DKW1                              000001E7
DKWP1                             000001CE
DKWP2                             000001D6
FSR                               000001B4
FSR0                              000001B4
FSR1                              000001B5
HIBYTE                            000001B3
INDF                              000001B0
INDF0                             000001B0
INDF1                             000001B1
INDF2                             000001B2
INDF3                             000001B9
INTE                              000001BA
INTF                              000001BB
IOP1                              000001C8
IOP2                              000001D0
KBCR                              000001D7
MCR                               000001B8
OEP1                              000001C9
OEP2                              000001D1
OPCR0                             000001E4
OPCR1                             000001E5
OSCM                              000001BC
PCL                               000001B6
PFLAG                             000001B7
PUP1                              000001CA
PUP2                              000001D2
STATUS                            000001B7
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
T0CR                              000001D8
T0LATFH                           000001DC
T0LATFL                           000001DB
T0LATRH                           000001DE
T0LATRL                           000001DD
T0LOADH                           000001D9
T0LOADL                           000001DA
T1CR                              000001E0
T1DATA                            000001E1
T1LOAD                            000001E2
_00106_DS_                        00000040
_00107_DS_                        00000041
__33P78                           00000001
___fs2schar                       00000000
___fs2sint                        00000000
___fs2slong                       00000000
___fs2uchar                       00000000
___fs2uint                        00000000
___fs2ulong                       00000000
___fsadd                          00000000
___fsdiv                          00000000
___fseq                           00000000
___fsgt                           00000000
___fslt                           00000000
___fsmul                          00000000
___fsneq                          00000000
___fsneq_fl1_1_22                 00000008
___fsneq_fl2_1_22                 0000000C
___fssub                          00000000
___schar2fs                       00000000
___sint2fs                        00000000
___slong2fs                       00000000
___uchar2fs                       00000000
___uint2fs                        00000000
___ulong2fs                       00000000
r0x1008                           00000003
r0x1009                           00000002
r0x100A                           00000001
r0x100B                           00000000
r0x100C                           00000007
r0x100D                           00000006
r0x100E                           00000005
r0x100F                           00000004
C                                 PFLAG,0
CLKS                              OSCM,2
DC                                PFLAG,1
DKWE                              DKW0,7
GIE                               MCR,7
HFEN                              OSCM,0
INT0IE                            INTE,2
INT0IF                            INTF,2
INT1IE                            INTE,3
INT1IF                            INTF,3
IROS                              DKW0,6
IROT                              DKW0,5
ISEL0                             DKW0,0
ISEL1                             DKW0,1
KBIE                              INTE,7
KBIF                              INTF,7
LFEN                              OSCM,1
MINT11                            MCR,3
PD                                MCR,4
RSEL                              DKW0,2
STBH                              OSCM,4
STBL                              OSCM,5
T0IE                              INTE,0
T0IF                              INTF,0
T0RF                              INTF,6
T1IE                              INTE,1
T1IF                              INTF,1
TC0EN                             T0CR,7
TC1EN                             T1CR,7
TO                                MCR,5
WSEL0                             DKW0,4
WSEL1                             DKW0,3
Z                                 PFLAG,2

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

