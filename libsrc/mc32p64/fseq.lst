gpasm-2.0.0_beta2 (Aug 27 2017)fseq.asm           2017-9-12  18:09:52          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : SinoMCU ANSI-C Compiler
                      00003 ; Version 1.0.0 (Sep 11 2017) (MINGW32)
                      00004 ; This file was generated Tue Sep 12 18:09:52 2017
                      00005 ;--------------------------------------------------------
                      00006 ; MC30/MC32 port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc/fseq.c"
                      00009         list    p=3264
                      00010         radix dec
                      00011         include "3264.inc"
                      00001                 LIST
                      00002 ;mc32p64.inc    Standard Header File, Version 1.00 by Sinomcu
                      00374                 LIST
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015         extern  ___uchar2fs
                      00016         extern  ___schar2fs
                      00017         extern  ___uint2fs
                      00018         extern  ___sint2fs
                      00019         extern  ___ulong2fs
                      00020         extern  ___slong2fs
                      00021         extern  ___fs2uchar
                      00022         extern  ___fs2schar
                      00023         extern  ___fs2uint
                      00024         extern  ___fs2sint
                      00025         extern  ___fs2ulong
                      00026         extern  ___fs2slong
                      00027         extern  ___fsadd
                      00028         extern  ___fssub
                      00029         extern  ___fsmul
                      00030         extern  ___fsdiv
                      00031         extern  ___fslt
                      00032         extern  ___fsneq
                      00033         extern  ___fsgt
                      00034 
                      00035         extern PSAVE
                      00036         extern SSAVE
                      00037         extern WSAVE
                      00038         extern STK12
                      00039         extern STK11
                      00040         extern STK10
                      00041         extern STK09
                      00042         extern STK08
                      00043         extern STK07
                      00044         extern STK06
                      00045         extern STK05
                      00046         extern STK04
                      00047         extern STK03
                      00048         extern STK02
                      00049         extern STK01
                      00050         extern STK00
                      00051 ;--------------------------------------------------------
                      00052 ; global declarations
                      00053 ;--------------------------------------------------------
                      00054         global  ___fseq
                      00055 
                      00056 ;--------------------------------------------------------
                      00057 ; global definitions
                      00058 ;--------------------------------------------------------
                      00059 ;--------------------------------------------------------
                      00060 ; absolute symbol definitions
                      00061 ;--------------------------------------------------------
                      00062 ;--------------------------------------------------------
                      00063 ; compiler-defined variables
                      00064 ;--------------------------------------------------------
                      00065 UDL_fseq_0      udata
0000                  00066 r0x100B res     1
0000                  00067 r0x100A res     1
0001                  00068 r0x1009 res     1
0001                  00069 r0x1008 res     1
0002                  00070 r0x100F res     1
0002                  00071 r0x100E res     1
0003                  00072 r0x100D res     1
0003                  00073 r0x100C res     1
0004                  00074 ___fseq_fl1_1_22        res     4
0006                  00075 ___fseq_fl2_1_22        res     4
                      00076 ;--------------------------------------------------------
                      00077 ; initialized data
                      00078 ;--------------------------------------------------------
                      00079 
                      00080 ;@Allocation info for local variables in function '__fseq'
                      00081 ;@__fseq __uchar2fs                Allocated to registers ;size:2
                      00082 ;@__fseq __schar2fs                Allocated to registers ;size:2
                      00083 ;@__fseq __uint2fs                 Allocated to registers ;size:2
                      00084 ;@__fseq __sint2fs                 Allocated to registers ;size:2
                      00085 ;@__fseq __ulong2fs                Allocated to registers ;size:2
                      00086 ;@__fseq __slong2fs                Allocated to registers ;size:2
                      00087 ;@__fseq __fs2uchar                Allocated to registers ;size:2
                      00088 ;@__fseq __fs2schar                Allocated to registers ;size:2
                      00089 ;@__fseq __fs2uint                 Allocated to registers ;size:2
                      00090 ;@__fseq __fs2sint                 Allocated to registers ;size:2
                      00091 ;@__fseq __fs2ulong                Allocated to registers ;size:2
                      00092 ;@__fseq __fs2slong                Allocated to registers ;size:2
                      00093 ;@__fseq __fsadd                   Allocated to registers ;size:2
                      00094 ;@__fseq __fssub                   Allocated to registers ;size:2
                      00095 ;@__fseq __fsmul                   Allocated to registers ;size:2
                      00096 ;@__fseq __fsdiv                   Allocated to registers ;size:2
                      00097 ;@__fseq __fslt                    Allocated to registers ;size:2
                      00098 ;@__fseq __fsneq                   Allocated to registers ;size:2
                      00099 ;@__fseq __fsgt                    Allocated to registers ;size:2
                      00100 ;@__fseq a2                        Allocated to registers r0x100F r0x100E r0x100D r0x100C ;size:4
                      00101 ;@__fseq a1                        Allocated to registers r0x100B r0x100A r0x1009 r0x1008 ;size:4
                      00102 ;@__fseq fl1                       Allocated to registers ;size:4
                      00103 ;@__fseq fl2                       Allocated to registers ;size:4
                      00104 ;@end Allocation info for local variables in function '__fseq';
                      00105 
                      00106 ;--------------------------------------------------------
                      00107 ; overlayable items in internal ram 
                      00108 ;--------------------------------------------------------
                      00109 ;       udata_ovr
                      00110 ;--------------------------------------------------------
                      00111 ; code
                      00112 ;--------------------------------------------------------
                      00113 code_fseq       code
                      00114 ;***
                      00115 ;  pBlock Stats: dbName = C
                      00116 ;***
                      00117 ;entry:  ___fseq        ;Function start
                      00118 ; 2 exit points
                      00119 ;has an exit
                      00120 ;15 compiler assigned registers:
                      00121 ;   r0x1008
                      00122 ;   STK00
                      00123 ;   r0x1009
                      00124 ;   STK01
                      00125 ;   r0x100A
                      00126 ;   STK02
                      00127 ;   r0x100B
                      00128 ;   STK03
                      00129 ;   r0x100C
                      00130 ;   STK04
                      00131 ;   r0x100D
                      00132 ;   STK05
                      00133 ;   r0x100E
                      00134 ;   STK06
                      00135 ;   r0x100F
                      00136 ;; Starting pCode block
                      00137 ;;[ICODE] ../libsdcc/fseq.c:55:  _entry($4) :
                      00138 ;;[ICODE] ../libsdcc/fseq.c:55:         proc ___fseq [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
0000                  00139 ___fseq ;Function start
                      00140 ; 2 exit points
                      00141 ;;[ICODE] ../libsdcc/fseq.c:55: iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fseq_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ] = recv ___fseq [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
                      00142 ;       .line   55; "../libsdcc/fseq.c" char __fseq (float a1, float a2) _FS_REENTRANT
0000   5600           00143         MOVRA   r0x1008
0001   5800           00144         MOVAR   STK00
0002   5600           00145         MOVRA   r0x1009
0003   5800           00146         MOVAR   STK01
0004   5600           00147         MOVRA   r0x100A
0005   5800           00148         MOVAR   STK02
0006   5600           00149         MOVRA   (___fseq_fl1_1_22 + 0)
0007   5600           00150         MOVRA   r0x100B
                      00151 ;;[ICODE] ../libsdcc/fseq.c:55: iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fseq_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ] = recv ___fseq [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
0008   5800           00152         MOVAR   STK03
0009   5600           00153         MOVRA   r0x100C
000A   5800           00154         MOVAR   STK04
000B   5600           00155         MOVRA   r0x100D
000C   5800           00156         MOVAR   STK05
000D   5600           00157         MOVRA   r0x100E
000E   5800           00158         MOVAR   STK06
000F   5600           00159         MOVRA   r0x100F
                      00160 ;;[ICODE] ../libsdcc/fseq.c:59:         iTemp2 [k7 lr5:6 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fseq_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00161 ;;[ICODE] ../libsdcc/fseq.c:59:         *(iTemp2 [k7 lr5:6 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fseq_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00162 ;;gen.c:6371: size=3/4, offset=0, AOP_TYPE(res)=8
                      00163 ;;99    MOVAR   r0x100B
                      00164 ;;gen.c:6371: size=2/4, offset=1, AOP_TYPE(res)=8
                      00165 ;       .line   59; "../libsdcc/fseq.c" fl1.f = a1;
0010   5800           00166         MOVAR   r0x100A
0011   5600           00167         MOVRA   (___fseq_fl1_1_22 + 1)
                      00168 ;;gen.c:6371: size=1/4, offset=2, AOP_TYPE(res)=8
0012   5800           00169         MOVAR   r0x1009
0013   5600           00170         MOVRA   (___fseq_fl1_1_22 + 2)
                      00171 ;;gen.c:6371: size=0/4, offset=3, AOP_TYPE(res)=8
0014   5800           00172         MOVAR   r0x1008
0015   5600           00173         MOVRA   (___fseq_fl1_1_22 + 3)
                      00174 ;;[ICODE] ../libsdcc/fseq.c:60:         iTemp4 [k11 lr7:8 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fseq_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00175 ;;[ICODE] ../libsdcc/fseq.c:60:         *(iTemp4 [k11 lr7:8 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fseq_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ]
                      00176 ;;gen.c:6371: size=3/4, offset=0, AOP_TYPE(res)=8
                      00177 ;       .line   60; "../libsdcc/fseq.c" fl2.f = a2;
0016   5800           00178         MOVAR   r0x100F
0017   5600           00179         MOVRA   (___fseq_fl2_1_22 + 0)
                      00180 ;;gen.c:6371: size=2/4, offset=1, AOP_TYPE(res)=8
0018   5800           00181         MOVAR   r0x100E
0019   5600           00182         MOVRA   (___fseq_fl2_1_22 + 1)
                      00183 ;;gen.c:6371: size=1/4, offset=2, AOP_TYPE(res)=8
001A   5800           00184         MOVAR   r0x100D
001B   5600           00185         MOVRA   (___fseq_fl2_1_22 + 2)
                      00186 ;;gen.c:6371: size=0/4, offset=3, AOP_TYPE(res)=8
001C   5800           00187         MOVAR   r0x100C
001D   5600           00188         MOVRA   (___fseq_fl2_1_22 + 3)
                      00189 ;;[ICODE] ../libsdcc/fseq.c:62:         iTemp6 [k14 lr9:10 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fseq_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00190 ;;[ICODE] ../libsdcc/fseq.c:62:         iTemp8 [k17 lr10:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp6 [k14 lr9:10 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00191 ;       .line   62; "../libsdcc/fseq.c" if (fl1.l == fl2.l)
001E   5800           00192         MOVAR   (___fseq_fl1_1_22 + 0)
001F   5600           00193         MOVRA   r0x100B
0020   5800           00194         MOVAR   (___fseq_fl1_1_22 + 1)
0021   5600           00195         MOVRA   r0x100A
0022   5800           00196         MOVAR   (___fseq_fl1_1_22 + 2)
0023   5600           00197         MOVRA   r0x1009
0024   5800           00198         MOVAR   (___fseq_fl1_1_22 + 3)
0025   5600           00199         MOVRA   r0x1008
                      00200 ;;[ICODE] ../libsdcc/fseq.c:62:         iTemp9 [k18 lr11:12 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fseq_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00201 ;;[ICODE] ../libsdcc/fseq.c:62:         iTemp11 [k21 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] = @[iTemp9 [k18 lr11:12 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0026   5800           00202         MOVAR   (___fseq_fl2_1_22 + 0)
0027   5600           00203         MOVRA   r0x100F
0028   5800           00204         MOVAR   (___fseq_fl2_1_22 + 1)
0029   5600           00205         MOVRA   r0x100E
002A   5800           00206         MOVAR   (___fseq_fl2_1_22 + 2)
002B   5600           00207         MOVRA   r0x100D
002C   5800           00208         MOVAR   (___fseq_fl2_1_22 + 3)
002D   5600           00209         MOVRA   r0x100C
                      00210 ;;[ICODE] ../libsdcc/fseq.c:62:         iTemp12 [k22 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp8 [k17 lr10:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] == iTemp11 [k21 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ]
002E   5800           00211         MOVAR   r0x100F
002F   4000           00212         XORAR   r0x100B
0030   E5B7           00213         JBSET   STATUS,2
0031   A000           00214         GOTO    _00106_DS_
0032   5800           00215         MOVAR   r0x100E
0033   4000           00216         XORAR   r0x100A
0034   E5B7           00217         JBSET   STATUS,2
0035   A000           00218         GOTO    _00106_DS_
0036   5800           00219         MOVAR   r0x100D
0037   4000           00220         XORAR   r0x1009
0038   E5B7           00221         JBSET   STATUS,2
0039   A000           00222         GOTO    _00106_DS_
003A   5800           00223         MOVAR   r0x100C
003B   4000           00224         XORAR   r0x1008
003C   E5B7           00225         JBSET   STATUS,2
003D   A000           00226         GOTO    _00106_DS_
                      00227 ;;[ICODE] ../libsdcc/fseq.c:62:         if iTemp12 [k22 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_0($2)
                      00228 ;;[ICODE] ../libsdcc/fseq.c:63:         ret 0x1 {const-unsigned-char literal}
                      00229 ;       .line   63; "../libsdcc/fseq.c" return (1);
003E   3C01           00230         MOVAI   0x01
003F   A000           00231         GOTO    _00107_DS_
                      00232 ;;[ICODE] ../libsdcc/fseq.c:63:  _iffalse_0($2) :
                      00233 ;;[ICODE] ../libsdcc/fseq.c:64:         ret 0x0 {const-unsigned-char literal}
0040                  00234 _00106_DS_
                      00235 ;       .line   64; "../libsdcc/fseq.c" return (0);
0040   3C00           00236         MOVAI   0x00
                      00237 ;;[ICODE] ../libsdcc/fseq.c:64:  _return($3) :
                      00238 ;;[ICODE] ../libsdcc/fseq.c:64:         eproc ___fseq [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
0041                  00239 _00107_DS_
0041   000C           00240         RETURN  
                      00241 ; exit point of ___fseq
                      00242 
                      00243 
                      00244 ;       code size estimation:
                      00245 ;          66+    0 =    66 instructions (  132 byte)
                      00246 
                      00247         end
gpasm-2.0.0_beta2 (Aug 27 2017)fseq.asm           2017-9-12  18:09:52          PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

ADCR0                             000001EC
ADCR1                             000001ED
ADEOC                             00000001
ADIE                              00000006
ADIF                              00000006
ADIOS0                            00000000
ADIOS1                            00000001
ADIOS3                            00000003
ADIOS4                            00000004
ADIOS5                            00000005
ADIOS7                            00000007
ADOIS2                            00000002
ADOIS6                            00000006
ADON                              00000000
ADRH                              000001EE
ADRL                              000001EF
BUZ0OE                            00000005
BUZ1OE                            00000005
C                                 00000000
CLKS                              00000002
DC                                00000001
FSR                               000001B4
FSR0                              000001B4
FSR1                              000001B5
GIE                               00000007
HAAS                              00000006
HBB                               00000005
HCF                               00000007
HEN                               00000001
HFEN                              00000000
HIBYTE                            000001B3
HTX                               00000004
I2CADDR                           000001F1
I2CCR                             000001F0
I2CDATA                           000001F2
I2CIE                             00000005
I2CIF                             00000005
INDF                              000001B0
INDF0                             000001B0
INDF1                             000001B1
INDF2                             000001B2
INDF3                             000001B9
INT0IE                            00000002
INT0IF                            00000002
INT1IE                            00000003
INT1IF                            00000003
INTE                              000001BA
INTF                              000001BB
IOP0                              000001C0
IOP1                              000001C4
IOP2                              000001C8
IOP3                              000001CC
LFEN                              00000001
MCR                               000001B8
OEP0                              000001C1
OEP1                              000001C5
OEP2                              000001C9
OEP3                              000001CD
OSCM                              000001BC
P00                               00000000
P00OE                             00000000
P00PU                             00000000
P01                               00000001
P01OE                             00000001
P01PU                             00000001
P02                               00000002
P02OE                             00000002
P02PU                             00000002
P03                               00000003
P03OE                             00000003
P03PU                             00000003
P04                               00000004
P04OE                             00000004
P04PU                             00000004
P05                               00000005
P05OE                             00000005
P05PU                             00000005
P06                               00000006
P06OE                             00000006
P07                               00000007
P07OE                             00000007
P10                               00000000
P10OE                             00000000
P10PU                             00000000
P11                               00000001
P11OE                             00000001
P11PU                             00000001
P12                               00000002
P12OE                             00000002
P12PU                             00000002
P13                               00000003
P13OE                             00000003
P13PU                             00000003
P14                               00000004
P14OE                             00000004
P14PU                             00000004
P15                               00000005
P15OE                             00000005
P15PU                             00000005
P16                               00000006
P16OE                             00000006
P16PU                             00000006
P17                               00000007
P17OE                             00000007
P17PU                             00000007
P20                               00000000
P20OE                             00000000
P20PU                             00000000
P21                               00000001
P21OE                             00000001
P21PU                             00000001
P22                               00000002
P22OE                             00000002
P22PU                             00000002
P23                               00000003
P23OE                             00000003
P23PU                             00000003
P24                               00000004
P24OE                             00000004
P24PU                             00000004
P25                               00000005
P25OE                             00000005
P25PU                             00000005
P26                               00000006
P26OE                             00000006
P26PU                             00000006
P27                               00000007
P27OE                             00000007
P27PU                             00000007
P30                               00000000
P30OE                             00000000
P30PU                             00000000
P31                               00000001
P31OE                             00000001
P31PU                             00000001
PCL                               000001B6
PD                                00000004
PSAVE                             00000000
PUP0                              000001C2
PUP1                              000001C6
PUP2                              000001CA
PUP3                              000001CE
PWM0OE                            00000006
PWM1OE                            00000006
RXAK                              00000000
SRW                               00000002
SSAVE                             00000000
STATUS                            000001B7
STBH                              00000004
STBL                              00000005
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
STK07                             00000000
STK08                             00000000
STK09                             00000000
STK10                             00000000
STK11                             00000000
STK12                             00000000
T0CNT                             000001D1
T0CR                              000001D0
T0DATA                            000001D3
T0IE                              00000000
T0IF                              00000000
T0LOAD                            000001D2
T1CNT                             000001D5
T1CR                              000001D4
T1DATA                            000001D7
T1IE                              00000001
T1IF                              00000001
T1LOAD                            000001D6
T2CNTH                            000001D9
T2CNTL                            000001DA
T2CR                              000001D8
T2IE                              00000004
T2IF                              00000004
T2LOADH                           000001DB
T2LOADL                           000001DC
T2MOD                             00000005
TC0EN                             00000007
TC1EN                             00000007
TC2EN                             00000007
TK0CLR                            00000003
TK0CNTH                           000001E2
TK0CNTL                           000001E3
TK0CRH                            000001E0
TK0CRL                            000001E1
TK0IE                             00000006
TK0IF                             00000007
TK0JE                             00000005
TK0RCE                            00000004
TK1CLR                            00000003
TK1CNTH                           000001E6
TK1CNTL                           000001E7
TK1CRH                            000001E4
TK1CRL                            000001E5
TK1IE                             00000006
TK1IF                             00000007
TK1JE                             00000005
TK1RCE                            00000004
TK2CLR                            00000003
TK2CNTH                           000001EA
TK2CNTL                           000001EB
TK2CRH                            000001E8
TK2CRL                            000001E9
TK2IE                             00000006
TK2IF                             00000007
TK2JE                             00000005
TK2RCE                            00000004
TO                                00000005
TXAK                              00000003
WSAVE                             00000000
Z                                 00000002
_00106_DS_                        00000040
_00107_DS_                        00000041
_CONFIG0                          00008000
_CONFIG1                          00008001
_CP_ALL                           00007FFF
_FCPU_128T                        0000FFEF
_FCPU_16T                         0000FFBF
_FCPU_256T                        0000FFFF
_FCPU_2T                          0000FF8F
_FCPU_32T                         0000FFCF
_FCPU_4T                          0000FF9F
_FCPU_64T                         0000FFDF
_FCPU_8T                          0000FFAF
_HRC_LRC                          0000FCFF
_HRC_LXT                          0000FDFF
_HXT_LRC                          0000FEFF
_MCLR_OFF                         0000FF7F
_MCLR_ON                          0000FFFF
_PTWRT_16_1024                    0000FFF7
_PTWRT_16_16                      0000DFF7
_PTWRT_256_256                    0000DFFF
_PTWRT_256_4096                   0000FFFF
_PTWRT_4_4                        0000DFF3
_PTWRT_4_512                      0000FFF3
_PTWRT_64_2048                    0000FFFB
_PTWRT_64_64                      0000DFFB
_VLVR_160                         0000E3FF
_VLVR_185                         0000E7FF
_VLVR_205                         0000EBFF
_VLVR_218                         0000EFFF
_VLVR_232                         0000F3FF
_VLVR_245                         0000F7FF
_VLVR_305                         0000FBFF
_VLVR_360                         0000FFFF
_WDT_ALWAYS_OFF                   0000FFFC
_WDT_ALWAYS_ON                    0000FFFF
_WDT_SLEEP_OFF                    0000FFFD
__32P64                           00000001
___fs2schar                       00000000
___fs2sint                        00000000
___fs2slong                       00000000
___fs2uchar                       00000000
___fs2uint                        00000000
___fs2ulong                       00000000
___fsadd                          00000000
___fsdiv                          00000000
___fseq                           00000000
___fseq_fl1_1_22                  00000008
___fseq_fl2_1_22                  0000000C
___fsgt                           00000000
___fslt                           00000000
___fsmul                          00000000
___fsneq                          00000000
___fssub                          00000000
___schar2fs                       00000000
___sint2fs                        00000000
___slong2fs                       00000000
___uchar2fs                       00000000
___uint2fs                        00000000
___ulong2fs                       00000000
r0x1008                           00000003
r0x1009                           00000002
r0x100A                           00000001
r0x100B                           00000000
r0x100C                           00000007
r0x100D                           00000006
r0x100E                           00000005
r0x100F                           00000004

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

