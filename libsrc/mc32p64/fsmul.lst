gpasm-2.0.0_beta2 (Aug 27 2017)fsmul.asm          2017-9-12  18:09:53          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : SinoMCU ANSI-C Compiler
                      00003 ; Version 1.0.0 (Sep 11 2017) (MINGW32)
                      00004 ; This file was generated Tue Sep 12 18:09:53 2017
                      00005 ;--------------------------------------------------------
                      00006 ; MC30/MC32 port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc/fsmul.c"
                      00009         list    p=3264
                      00010         radix dec
                      00011         include "3264.inc"
                      00001                 LIST
                      00002 ;mc32p64.inc    Standard Header File, Version 1.00 by Sinomcu
                      00374                 LIST
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015         extern  ___uchar2fs
                      00016         extern  ___schar2fs
                      00017         extern  ___uint2fs
                      00018         extern  ___sint2fs
                      00019         extern  ___ulong2fs
                      00020         extern  ___slong2fs
                      00021         extern  ___fs2uchar
                      00022         extern  ___fs2schar
                      00023         extern  ___fs2uint
                      00024         extern  ___fs2sint
                      00025         extern  ___fs2ulong
                      00026         extern  ___fs2slong
                      00027         extern  ___fsadd
                      00028         extern  ___fssub
                      00029         extern  ___fsdiv
                      00030         extern  ___fslt
                      00031         extern  ___fseq
                      00032         extern  ___fsneq
                      00033         extern  ___fsgt
                      00034         extern  __mullong
                      00035 
                      00036         extern PSAVE
                      00037         extern SSAVE
                      00038         extern WSAVE
                      00039         extern STK12
                      00040         extern STK11
                      00041         extern STK10
                      00042         extern STK09
                      00043         extern STK08
                      00044         extern STK07
                      00045         extern STK06
                      00046         extern STK05
                      00047         extern STK04
                      00048         extern STK03
                      00049         extern STK02
                      00050         extern STK01
                      00051         extern STK00
                      00052 ;--------------------------------------------------------
                      00053 ; global declarations
                      00054 ;--------------------------------------------------------
                      00055         global  ___fsmul
                      00056 
                      00057 ;--------------------------------------------------------
                      00058 ; global definitions
                      00059 ;--------------------------------------------------------
                      00060 ;--------------------------------------------------------
                      00061 ; absolute symbol definitions
                      00062 ;--------------------------------------------------------
                      00063 ;--------------------------------------------------------
                      00064 ; compiler-defined variables
                      00065 ;--------------------------------------------------------
                      00066 UDL_fsmul_0     udata
0000                  00067 r0x100B res     1
0000                  00068 r0x100A res     1
0001                  00069 r0x1009 res     1
0001                  00070 r0x1008 res     1
0002                  00071 r0x100F res     1
0002                  00072 r0x100E res     1
0003                  00073 r0x100D res     1
0003                  00074 r0x100C res     1
0004                  00075 r0x1010 res     1
0004                  00076 r0x1011 res     1
0005                  00077 r0x1012 res     1
0005                  00078 r0x1013 res     1
0006                  00079 r0x1014 res     1
0006                  00080 r0x1015 res     1
0007                  00081 r0x1016 res     1
0007                  00082 r0x1017 res     1
0008                  00083 r0x1018 res     1
0008                  00084 r0x1019 res     1
0009                  00085 r0x101A res     1
0009                  00086 ___fsmul_fl1_1_22       res     4
000B                  00087 ___fsmul_fl2_1_22       res     4
                      00088 ;--------------------------------------------------------
                      00089 ; initialized data
                      00090 ;--------------------------------------------------------
                      00091 
                      00092 ;@Allocation info for local variables in function '__fsmul'
                      00093 ;@__fsmul __uchar2fs                Allocated to registers ;size:2
                      00094 ;@__fsmul __schar2fs                Allocated to registers ;size:2
                      00095 ;@__fsmul __uint2fs                 Allocated to registers ;size:2
                      00096 ;@__fsmul __sint2fs                 Allocated to registers ;size:2
                      00097 ;@__fsmul __ulong2fs                Allocated to registers ;size:2
                      00098 ;@__fsmul __slong2fs                Allocated to registers ;size:2
                      00099 ;@__fsmul __fs2uchar                Allocated to registers ;size:2
                      00100 ;@__fsmul __fs2schar                Allocated to registers ;size:2
                      00101 ;@__fsmul __fs2uint                 Allocated to registers ;size:2
                      00102 ;@__fsmul __fs2sint                 Allocated to registers ;size:2
                      00103 ;@__fsmul __fs2ulong                Allocated to registers ;size:2
                      00104 ;@__fsmul __fs2slong                Allocated to registers ;size:2
                      00105 ;@__fsmul __fsadd                   Allocated to registers ;size:2
                      00106 ;@__fsmul __fssub                   Allocated to registers ;size:2
                      00107 ;@__fsmul __fsdiv                   Allocated to registers ;size:2
                      00108 ;@__fsmul __fslt                    Allocated to registers ;size:2
                      00109 ;@__fsmul __fseq                    Allocated to registers ;size:2
                      00110 ;@__fsmul __fsneq                   Allocated to registers ;size:2
                      00111 ;@__fsmul __fsgt                    Allocated to registers ;size:2
                      00112 ;@__fsmul _mullong                  Allocated to registers ;size:2
                      00113 ;@__fsmul a2                        Allocated to registers r0x100F r0x100E r0x100D r0x100C ;size:4
                      00114 ;@__fsmul a1                        Allocated to registers r0x100B r0x100A r0x1009 r0x1008 ;size:4
                      00115 ;@__fsmul fl1                       Allocated to registers ;size:4
                      00116 ;@__fsmul fl2                       Allocated to registers ;size:4
                      00117 ;@__fsmul result                    Allocated to registers r0x100A r0x1009 r0x1008 r0x100F ;size:4
                      00118 ;@__fsmul exp                       Allocated to registers r0x100E r0x100D ;size:2
                      00119 ;@__fsmul sign                      Allocated to registers r0x100B ;size:1
                      00120 ;@end Allocation info for local variables in function '__fsmul';
                      00121 
                      00122 ;--------------------------------------------------------
                      00123 ; overlayable items in internal ram 
                      00124 ;--------------------------------------------------------
                      00125 ;       udata_ovr
                      00126 ;--------------------------------------------------------
                      00127 ; code
                      00128 ;--------------------------------------------------------
                      00129 code_fsmul      code
                      00130 ;***
                      00131 ;  pBlock Stats: dbName = C
                      00132 ;***
                      00133 ;entry:  ___fsmul       ;Function start
                      00134 ; 2 exit points
                      00135 ;has an exit
                      00136 ;functions called:
                      00137 ;   __mullong
                      00138 ;   __mullong
                      00139 ;   __mullong
                      00140 ;   __mullong
                      00141 ;   __mullong
                      00142 ;   __mullong
                      00143 ;26 compiler assigned registers:
                      00144 ;   r0x1008
                      00145 ;   STK00
                      00146 ;   r0x1009
                      00147 ;   STK01
                      00148 ;   r0x100A
                      00149 ;   STK02
                      00150 ;   r0x100B
                      00151 ;   STK03
                      00152 ;   r0x100C
                      00153 ;   STK04
                      00154 ;   r0x100D
                      00155 ;   STK05
                      00156 ;   r0x100E
                      00157 ;   STK06
                      00158 ;   r0x100F
                      00159 ;   r0x1010
                      00160 ;   r0x1011
                      00161 ;   r0x1012
                      00162 ;   r0x1013
                      00163 ;   r0x1014
                      00164 ;   r0x1015
                      00165 ;   r0x1016
                      00166 ;   r0x1017
                      00167 ;   r0x1018
                      00168 ;   r0x1019
                      00169 ;   r0x101A
                      00170 ;; Starting pCode block
                      00171 ;;[ICODE] ../libsdcc/fsmul.c:55:  _entry($14) :
                      00172 ;;[ICODE] ../libsdcc/fsmul.c:55:        proc ___fsmul [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0000                  00173 ___fsmul        ;Function start
                      00174 ; 2 exit points
                      00175 ;;[ICODE] ../libsdcc/fsmul.c:55: iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsmul_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ] = recv ___fsmul [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
                      00176 ;       .line   55; "../libsdcc/fsmul.c"        float __fsmul (float a1, float a2) _FS_REENTRANT
0000   5600           00177         MOVRA   r0x1008
0001   5800           00178         MOVAR   STK00
0002   5600           00179         MOVRA   r0x1009
0003   5800           00180         MOVAR   STK01
0004   5600           00181         MOVRA   r0x100A
0005   5800           00182         MOVAR   STK02
0006   5600           00183         MOVRA   (___fsmul_fl1_1_22 + 0)
0007   5600           00184         MOVRA   r0x100B
                      00185 ;;[ICODE] ../libsdcc/fsmul.c:55: iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsmul_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ] = recv ___fsmul [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0008   5800           00186         MOVAR   STK03
0009   5600           00187         MOVRA   r0x100C
000A   5800           00188         MOVAR   STK04
000B   5600           00189         MOVRA   r0x100D
000C   5800           00190         MOVAR   STK05
000D   5600           00191         MOVRA   r0x100E
000E   5800           00192         MOVAR   STK06
000F   5600           00193         MOVRA   (___fsmul_fl2_1_22 + 0)
0010   5600           00194         MOVRA   r0x100F
                      00195 ;;[ICODE] ../libsdcc/fsmul.c:62:        iTemp2 [k7 lr5:6 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00196 ;;[ICODE] ../libsdcc/fsmul.c:62:        *(iTemp2 [k7 lr5:6 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsmul_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00197 ;;gen.c:6371: size=3/4, offset=0, AOP_TYPE(res)=8
                      00198 ;;99    MOVAR   r0x100B
                      00199 ;;gen.c:6371: size=2/4, offset=1, AOP_TYPE(res)=8
                      00200 ;       .line   62; "../libsdcc/fsmul.c"        fl1.f = a1;
0011   5800           00201         MOVAR   r0x100A
0012   5600           00202         MOVRA   (___fsmul_fl1_1_22 + 1)
                      00203 ;;gen.c:6371: size=1/4, offset=2, AOP_TYPE(res)=8
0013   5800           00204         MOVAR   r0x1009
0014   5600           00205         MOVRA   (___fsmul_fl1_1_22 + 2)
                      00206 ;;gen.c:6371: size=0/4, offset=3, AOP_TYPE(res)=8
0015   5800           00207         MOVAR   r0x1008
0016   5600           00208         MOVRA   (___fsmul_fl1_1_22 + 3)
                      00209 ;;[ICODE] ../libsdcc/fsmul.c:63:        iTemp4 [k11 lr7:8 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00210 ;;[ICODE] ../libsdcc/fsmul.c:63:        *(iTemp4 [k11 lr7:8 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsmul_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ]
                      00211 ;;gen.c:6371: size=3/4, offset=0, AOP_TYPE(res)=8
                      00212 ;;125   MOVAR   r0x100F
                      00213 ;;gen.c:6371: size=2/4, offset=1, AOP_TYPE(res)=8
                      00214 ;       .line   63; "../libsdcc/fsmul.c"        fl2.f = a2;
0017   5800           00215         MOVAR   r0x100E
0018   5600           00216         MOVRA   (___fsmul_fl2_1_22 + 1)
                      00217 ;;gen.c:6371: size=1/4, offset=2, AOP_TYPE(res)=8
0019   5800           00218         MOVAR   r0x100D
001A   5600           00219         MOVRA   (___fsmul_fl2_1_22 + 2)
                      00220 ;;gen.c:6371: size=0/4, offset=3, AOP_TYPE(res)=8
001B   5800           00221         MOVAR   r0x100C
001C   5600           00222         MOVRA   (___fsmul_fl2_1_22 + 3)
                      00223 ;;[ICODE] ../libsdcc/fsmul.c:65:        iTemp6 [k14 lr9:10 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00224 ;;[ICODE] ../libsdcc/fsmul.c:65:        iTemp8 [k17 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp6 [k14 lr9:10 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00225 ;       .line   65; "../libsdcc/fsmul.c"        if (!fl1.l || !fl2.l)
001D   5800           00226         MOVAR   (___fsmul_fl1_1_22 + 0)
001E   5600           00227         MOVRA   r0x100B
001F   5800           00228         MOVAR   (___fsmul_fl1_1_22 + 1)
0020   5600           00229         MOVRA   r0x100A
0021   5800           00230         MOVAR   (___fsmul_fl1_1_22 + 2)
0022   5600           00231         MOVRA   r0x1009
0023   5800           00232         MOVAR   (___fsmul_fl1_1_22 + 3)
0024   5600           00233         MOVRA   r0x1008
                      00234 ;;[ICODE] ../libsdcc/fsmul.c:65:        if iTemp8 [k17 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] == 0 goto _iftrue_0($1)
0025   5800           00235         MOVAR   r0x100B
0026   5C00           00236         ORAR    r0x100A
0027   5C00           00237         ORAR    r0x1009
0028   5C00           00238         ORAR    r0x1008
0029   F5B7           00239         JBCLR   STATUS,2
002A   A000           00240         GOTO    _00105_DS_
                      00241 ;;[ICODE] ../libsdcc/fsmul.c:65:        iTemp9 [k18 lr12:13 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00242 ;;[ICODE] ../libsdcc/fsmul.c:65:        iTemp11 [k21 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp9 [k18 lr12:13 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
002B   5800           00243         MOVAR   (___fsmul_fl2_1_22 + 0)
002C   5600           00244         MOVRA   r0x100B
002D   5800           00245         MOVAR   (___fsmul_fl2_1_22 + 1)
002E   5600           00246         MOVRA   r0x100A
002F   5800           00247         MOVAR   (___fsmul_fl2_1_22 + 2)
0030   5600           00248         MOVRA   r0x1009
0031   5800           00249         MOVAR   (___fsmul_fl2_1_22 + 3)
0032   5600           00250         MOVRA   r0x1008
                      00251 ;;[ICODE] ../libsdcc/fsmul.c:65:        if iTemp11 [k21 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] != 0 goto _iffalse_0($2)
0033   5800           00252         MOVAR   r0x100B
0034   5C00           00253         ORAR    r0x100A
0035   5C00           00254         ORAR    r0x1009
0036   5C00           00255         ORAR    r0x1008
0037   E5B7           00256         JBSET   STATUS,2
0038   A000           00257         GOTO    _00106_DS_
                      00258 ;;[ICODE] ../libsdcc/fsmul.c:65:  _iftrue_0($1) :
                      00259 ;;[ICODE] ../libsdcc/fsmul.c:66:        ret 0 {float literal}
0039                  00260 _00105_DS_
                      00261 ;       .line   66; "../libsdcc/fsmul.c"        return (0);
0039   3C00           00262         MOVAI   0x00
003A   5600           00263         MOVRA   STK02
003B   3C00           00264         MOVAI   0x00
003C   5600           00265         MOVRA   STK01
003D   3C00           00266         MOVAI   0x00
003E   5600           00267         MOVRA   STK00
003F   3C00           00268         MOVAI   0x00
0040   A000           00269         GOTO    _00117_DS_
                      00270 ;;[ICODE] ../libsdcc/fsmul.c:66:  _iffalse_0($2) :
                      00271 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp13 [k24 lr18:19 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00272 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp15 [k27 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp13 [k24 lr18:19 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0041                  00273 _00106_DS_
                      00274 ;       .line   69; "../libsdcc/fsmul.c"        sign = SIGN (fl1.l) ^ SIGN (fl2.l);
0041   5800           00275         MOVAR   (___fsmul_fl1_1_22 + 0)
0042   5600           00276         MOVRA   r0x100B
0043   5800           00277         MOVAR   (___fsmul_fl1_1_22 + 1)
0044   5600           00278         MOVRA   r0x100A
0045   5800           00279         MOVAR   (___fsmul_fl1_1_22 + 2)
0046   5600           00280         MOVRA   r0x1009
0047   5800           00281         MOVAR   (___fsmul_fl1_1_22 + 3)
0048   5600           00282         MOVRA   r0x1008
                      00283 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp16 [k28 lr20:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1004 ] = gabit iTemp15 [k27 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0049   5800           00284         MOVAR   r0x1008
004A   3E80           00285         ANDAI   0x80
004B   E5B7           00286         JBSET   STATUS,2
004C   3C01           00287         MOVAI   0x01
004D   5600           00288         MOVRA   r0x100F
                      00289 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp17 [k29 lr21:22 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00290 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp19 [k32 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp17 [k29 lr21:22 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
004E   5800           00291         MOVAR   (___fsmul_fl2_1_22 + 0)
004F   5600           00292         MOVRA   r0x100B
0050   5800           00293         MOVAR   (___fsmul_fl2_1_22 + 1)
0051   5600           00294         MOVRA   r0x100A
0052   5800           00295         MOVAR   (___fsmul_fl2_1_22 + 2)
0053   5600           00296         MOVRA   r0x1009
0054   5800           00297         MOVAR   (___fsmul_fl2_1_22 + 3)
0055   5600           00298         MOVRA   r0x1008
                      00299 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp20 [k33 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1005 ] = gabit iTemp19 [k32 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0056   5800           00300         MOVAR   r0x1008
0057   3E80           00301         ANDAI   0x80
0058   E5B7           00302         JBSET   STATUS,2
0059   3C01           00303         MOVAI   0x01
005A   5600           00304         MOVRA   r0x100E
                      00305 ;;[ICODE] ../libsdcc/fsmul.c:69:        iTemp12 [k22 lr24:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ ___fsmul_sign_1_22}[r0x1000 ] = iTemp16 [k28 lr20:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1004 ] ^ iTemp20 [k33 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1005 ]
005B   5800           00306         MOVAR   r0x100E
005C   4000           00307         XORAR   r0x100F
005D   5600           00308         MOVRA   r0x100B
                      00309 ;;[ICODE] ../libsdcc/fsmul.c:70:        iTemp23 [k37 lr26:27 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00310 ;;[ICODE] ../libsdcc/fsmul.c:70:        iTemp25 [k40 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp23 [k37 lr26:27 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00311 ;       .line   70; "../libsdcc/fsmul.c"        exp = EXP (fl1.l) - EXCESS;
005E   5800           00312         MOVAR   (___fsmul_fl1_1_22 + 0)
005F   5600           00313         MOVRA   r0x100A
0060   5800           00314         MOVAR   (___fsmul_fl1_1_22 + 1)
0061   5600           00315         MOVRA   r0x1009
0062   5800           00316         MOVAR   (___fsmul_fl1_1_22 + 2)
0063   5600           00317         MOVRA   r0x1008
0064   5800           00318         MOVAR   (___fsmul_fl1_1_22 + 3)
0065   5600           00319         MOVRA   r0x100F
                      00320 ;;[ICODE] ../libsdcc/fsmul.c:70:        iTemp26 [k41 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1005 r0x1006 r0x1007 r0x1008 ] = iTemp25 [k40 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x17 {const-unsigned-char literal}
0066   5000           00321         RLAR    r0x1008
0067   5000           00322         RLAR    r0x100F
0068   5600           00323         MOVRA   r0x100A
0069   5600           00324         MOVRA   r0x100E
006A   7600           00325         CLRR    r0x100D
006B   5200           00326         RLR     r0x100D
006C   7600           00327         CLRR    r0x100C
006D   7600           00328         CLRR    r0x1010
                      00329 ;;[ICODE] ../libsdcc/fsmul.c:70:        iTemp27 [k42 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp26 [k41 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1005 r0x1006 r0x1007 r0x1008 ] & 0xff {unsigned-long-int literal}
                      00330 ;;103   MOVAR   r0x100E
006E   7600           00331         CLRR    r0x1009
006F   7600           00332         CLRR    r0x1008
0070   7600           00333         CLRR    r0x100F
                      00334 ;;[ICODE] ../libsdcc/fsmul.c:70:        iTemp28 [k43 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp27 [k42 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] - 0x7e {unsigned-long-int literal}
0071   3C82           00335         MOVAI   0x82
0072   7E00           00336         ADDRA   r0x100A
0073   3CFF           00337         MOVAI   0xff
0074   E1B7           00338         JBSET   STATUS,0
0075   7E00           00339         ADDRA   r0x1009
0076   3CFF           00340         MOVAI   0xff
0077   E1B7           00341         JBSET   STATUS,0
0078   7E00           00342         ADDRA   r0x1008
0079   3CFF           00343         MOVAI   0xff
007A   E1B7           00344         JBSET   STATUS,0
007B   7E00           00345         ADDRA   r0x100F
                      00346 ;;[ICODE] ../libsdcc/fsmul.c:70:        iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] = (int fixed)iTemp28 [k43 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ]
007C   5800           00347         MOVAR   r0x100A
007D   5600           00348         MOVRA   r0x100E
007E   5800           00349         MOVAR   r0x1009
007F   5600           00350         MOVRA   r0x100D
                      00351 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp30 [k45 lr33:34 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00352 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp32 [k48 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp30 [k45 lr33:34 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00353 ;       .line   71; "../libsdcc/fsmul.c"        exp += EXP (fl2.l);
0080   5800           00354         MOVAR   (___fsmul_fl2_1_22 + 0)
0081   5600           00355         MOVRA   r0x100A
0082   5800           00356         MOVAR   (___fsmul_fl2_1_22 + 1)
0083   5600           00357         MOVRA   r0x1009
0084   5800           00358         MOVAR   (___fsmul_fl2_1_22 + 2)
0085   5600           00359         MOVRA   r0x1008
0086   5800           00360         MOVAR   (___fsmul_fl2_1_22 + 3)
0087   5600           00361         MOVRA   r0x100F
                      00362 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp33 [k49 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp32 [k48 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x17 {const-unsigned-char literal}
0088   5000           00363         RLAR    r0x1008
0089   5000           00364         RLAR    r0x100F
008A   5600           00365         MOVRA   r0x100A
008B   5600           00366         MOVRA   r0x100C
008C   7600           00367         CLRR    r0x1010
008D   5200           00368         RLR     r0x1010
008E   7600           00369         CLRR    r0x1011
008F   7600           00370         CLRR    r0x1012
                      00371 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp34 [k50 lr36:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp33 [k49 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] & 0xff {unsigned-long-int literal}
                      00372 ;;104   MOVAR   r0x100C
0090   7600           00373         CLRR    r0x1009
0091   7600           00374         CLRR    r0x1008
0092   7600           00375         CLRR    r0x100F
                      00376 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp35 [k51 lr37:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = (unsigned-long-int fixed)iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ]
0093   5800           00377         MOVAR   r0x100E
0094   5600           00378         MOVRA   r0x100C
0095   5800           00379         MOVAR   r0x100D
0096   5600           00380         MOVRA   r0x1010
0097   3C00           00381         MOVAI   0x00
0098   FE00           00382         JBCLR   r0x1010,7
0099   3CFF           00383         MOVAI   0xff
009A   5600           00384         MOVRA   r0x1012
009B   5600           00385         MOVRA   r0x1011
                      00386 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp36 [k52 lr38:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp35 [k51 lr37:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] + iTemp34 [k50 lr36:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ]
009C   5800           00387         MOVAR   r0x100A
009D   7C00           00388         ADDAR   r0x100C
009E   5600           00389         MOVRA   r0x100A
009F   5800           00390         MOVAR   r0x1010
00A0   F1B7           00391         JBCLR   STATUS,0
00A1   6000           00392         JZAR    r0x1010
00A2   7E00           00393         ADDRA   r0x1009
00A3   5800           00394         MOVAR   r0x1011
00A4   F1B7           00395         JBCLR   STATUS,0
00A5   6000           00396         JZAR    r0x1011
00A6   7E00           00397         ADDRA   r0x1008
00A7   5800           00398         MOVAR   r0x1012
00A8   F1B7           00399         JBCLR   STATUS,0
00A9   6000           00400         JZAR    r0x1012
00AA   7E00           00401         ADDRA   r0x100F
                      00402 ;;[ICODE] ../libsdcc/fsmul.c:71:        iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] = (int fixed)iTemp36 [k52 lr38:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ]
00AB   5800           00403         MOVAR   r0x100A
00AC   5600           00404         MOVRA   r0x100E
00AD   5800           00405         MOVAR   r0x1009
00AE   5600           00406         MOVRA   r0x100D
                      00407 ;;[ICODE] ../libsdcc/fsmul.c:73:        iTemp38 [k54 lr41:46 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00408 ;;[ICODE] ../libsdcc/fsmul.c:73:        iTemp40 [k57 lr42:43 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00409 ;;[ICODE] ../libsdcc/fsmul.c:73:        iTemp42 [k60 lr43:44 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp40 [k57 lr42:43 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00410 ;       .line   73; "../libsdcc/fsmul.c"        fl1.l = MANT (fl1.l);
00AF   5800           00411         MOVAR   (___fsmul_fl1_1_22 + 0)
00B0   5600           00412         MOVRA   r0x100A
00B1   5800           00413         MOVAR   (___fsmul_fl1_1_22 + 1)
00B2   5600           00414         MOVRA   r0x1009
00B3   5800           00415         MOVAR   (___fsmul_fl1_1_22 + 2)
00B4   5600           00416         MOVRA   r0x1008
00B5   5800           00417         MOVAR   (___fsmul_fl1_1_22 + 3)
00B6   5600           00418         MOVRA   r0x100F
                      00419 ;;[ICODE] ../libsdcc/fsmul.c:73:        iTemp43 [k61 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp42 [k60 lr43:44 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] & 0x7fffff {unsigned-long-int literal}
00B7   DE00           00420         BCLR    r0x1008,7
00B8   7600           00421         CLRR    r0x100F
                      00422 ;;[ICODE] ../libsdcc/fsmul.c:73:        iTemp44 [k62 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp43 [k61 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] | 0x800000 {unsigned-long-int literal}
00B9   CE00           00423         BSET    r0x1008,7
                      00424 ;;[ICODE] ../libsdcc/fsmul.c:73:        *(iTemp38 [k54 lr41:46 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := iTemp44 [k62 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ]
                      00425 ;;gen.c:6371: size=3/4, offset=0, AOP_TYPE(res)=8
00BA   5800           00426         MOVAR   r0x100A
00BB   5600           00427         MOVRA   (___fsmul_fl1_1_22 + 0)
                      00428 ;;gen.c:6371: size=2/4, offset=1, AOP_TYPE(res)=8
00BC   5800           00429         MOVAR   r0x1009
00BD   5600           00430         MOVRA   (___fsmul_fl1_1_22 + 1)
                      00431 ;;gen.c:6371: size=1/4, offset=2, AOP_TYPE(res)=8
00BE   5800           00432         MOVAR   r0x1008
00BF   5600           00433         MOVRA   (___fsmul_fl1_1_22 + 2)
                      00434 ;;gen.c:6371: size=0/4, offset=3, AOP_TYPE(res)=8
00C0   3C00           00435         MOVAI   0x00
00C1   5600           00436         MOVRA   (___fsmul_fl1_1_22 + 3)
                      00437 ;;[ICODE] ../libsdcc/fsmul.c:74:        iTemp45 [k63 lr47:52 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00438 ;;[ICODE] ../libsdcc/fsmul.c:74:        iTemp47 [k66 lr48:49 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00439 ;;[ICODE] ../libsdcc/fsmul.c:74:        iTemp49 [k69 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp47 [k66 lr48:49 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00440 ;       .line   74; "../libsdcc/fsmul.c"        fl2.l = MANT (fl2.l);
00C2   5800           00441         MOVAR   (___fsmul_fl2_1_22 + 0)
00C3   5600           00442         MOVRA   r0x100A
00C4   5800           00443         MOVAR   (___fsmul_fl2_1_22 + 1)
00C5   5600           00444         MOVRA   r0x1009
00C6   5800           00445         MOVAR   (___fsmul_fl2_1_22 + 2)
00C7   5600           00446         MOVRA   r0x1008
00C8   5800           00447         MOVAR   (___fsmul_fl2_1_22 + 3)
00C9   5600           00448         MOVRA   r0x100F
                      00449 ;;[ICODE] ../libsdcc/fsmul.c:74:        iTemp50 [k70 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp49 [k69 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] & 0x7fffff {unsigned-long-int literal}
00CA   DE00           00450         BCLR    r0x1008,7
00CB   7600           00451         CLRR    r0x100F
                      00452 ;;[ICODE] ../libsdcc/fsmul.c:74:        iTemp51 [k71 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp50 [k70 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] | 0x800000 {unsigned-long-int literal}
00CC   CE00           00453         BSET    r0x1008,7
                      00454 ;;[ICODE] ../libsdcc/fsmul.c:74:        *(iTemp45 [k63 lr47:52 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := iTemp51 [k71 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ]
                      00455 ;;gen.c:6371: size=3/4, offset=0, AOP_TYPE(res)=8
00CD   5800           00456         MOVAR   r0x100A
00CE   5600           00457         MOVRA   (___fsmul_fl2_1_22 + 0)
                      00458 ;;gen.c:6371: size=2/4, offset=1, AOP_TYPE(res)=8
00CF   5800           00459         MOVAR   r0x1009
00D0   5600           00460         MOVRA   (___fsmul_fl2_1_22 + 1)
                      00461 ;;gen.c:6371: size=1/4, offset=2, AOP_TYPE(res)=8
00D1   5800           00462         MOVAR   r0x1008
00D2   5600           00463         MOVRA   (___fsmul_fl2_1_22 + 2)
                      00464 ;;gen.c:6371: size=0/4, offset=3, AOP_TYPE(res)=8
00D3   3C00           00465         MOVAI   0x00
00D4   5600           00466         MOVRA   (___fsmul_fl2_1_22 + 3)
                      00467 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp53 [k74 lr53:54 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00468 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp55 [k77 lr54:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp53 [k74 lr53:54 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00469 ;       .line   77; "../libsdcc/fsmul.c"        result = (fl1.l >> 8) * (fl2.l >> 8);
00D5   5800           00470         MOVAR   (___fsmul_fl1_1_22 + 0)
00D6   5600           00471         MOVRA   r0x100A
00D7   5800           00472         MOVAR   (___fsmul_fl1_1_22 + 1)
00D8   5600           00473         MOVRA   r0x100C
00D9   5600           00474         MOVRA   r0x1009
00DA   5800           00475         MOVAR   (___fsmul_fl1_1_22 + 2)
00DB   5600           00476         MOVRA   r0x1010
00DC   5600           00477         MOVRA   r0x1008
00DD   5800           00478         MOVAR   (___fsmul_fl1_1_22 + 3)
00DE   5600           00479         MOVRA   r0x1011
00DF   5600           00480         MOVRA   r0x100F
                      00481 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp56 [k78 lr55:60 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp55 [k77 lr54:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x8 {const-unsigned-char literal}
                      00482 ;;119   MOVAR   r0x1009
                      00483 ;;101   MOVAR   r0x1008
                      00484 ;;120   MOVAR   r0x100F
00E0   7600           00485         CLRR    r0x1012
                      00486 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp57 [k79 lr56:57 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00487 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp59 [k82 lr57:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp57 [k79 lr56:57 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
00E1   5800           00488         MOVAR   (___fsmul_fl2_1_22 + 0)
00E2   5600           00489         MOVRA   r0x100A
00E3   5800           00490         MOVAR   (___fsmul_fl2_1_22 + 1)
00E4   5600           00491         MOVRA   r0x1013
00E5   5600           00492         MOVRA   r0x1009
00E6   5800           00493         MOVAR   (___fsmul_fl2_1_22 + 2)
00E7   5600           00494         MOVRA   r0x1008
00E8   5800           00495         MOVAR   (___fsmul_fl2_1_22 + 3)
00E9   5600           00496         MOVRA   r0x1015
00EA   5600           00497         MOVRA   r0x100F
                      00498 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp60 [k83 lr58:60 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = iTemp59 [k82 lr57:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x8 {const-unsigned-char literal}
                      00499 ;;100   MOVAR   r0x1009
                      00500 ;;124   MOVAR   r0x1008
                      00501 ;;102   MOVAR   r0x100F
00EB   7600           00502         CLRR    r0x1016
                      00503 ;;[ICODE] ../libsdcc/fsmul.c:77:        send iTemp56 [k78 lr55:60 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ]{argreg = 1}
                      00504 ;;[ICODE] ../libsdcc/fsmul.c:77:        send iTemp60 [k83 lr58:60 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ]{argreg = 1}
                      00505 ;;[ICODE] ../libsdcc/fsmul.c:77:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = call __mullong [k141 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( long-int fixed, long-int fixed) fixed}
00EC   5800           00506         MOVAR   r0x1013
00ED   5600           00507         MOVRA   STK06
                      00508 ;;123   MOVAR   r0x1014
00EE   5800           00509         MOVAR   r0x1008
00EF   5600           00510         MOVRA   r0x1014
00F0   5600           00511         MOVRA   STK05
00F1   5800           00512         MOVAR   r0x1015
00F2   5600           00513         MOVRA   STK04
00F3   3C00           00514         MOVAI   0x00
00F4   5600           00515         MOVRA   STK03
00F5   5800           00516         MOVAR   r0x100C
00F6   5600           00517         MOVRA   STK02
00F7   5800           00518         MOVAR   r0x1010
00F8   5600           00519         MOVRA   STK01
00F9   5800           00520         MOVAR   r0x1011
00FA   5600           00521         MOVRA   STK00
00FB   3C00           00522         MOVAI   0x00
00FC   8000           00523         CALL    __mullong
00FD   5600           00524         MOVRA   r0x100F
00FE   5800           00525         MOVAR   STK00
00FF   5600           00526         MOVRA   r0x1008
0100   5800           00527         MOVAR   STK01
0101   5600           00528         MOVRA   r0x1009
0102   5800           00529         MOVAR   STK02
0103   5600           00530         MOVRA   r0x100A
                      00531 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp62 [k85 lr63:64 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00532 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp64 [k88 lr64:65 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = @[iTemp62 [k85 lr63:64 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00533 ;       .line   78; "../libsdcc/fsmul.c"        result += ((fl1.l & (unsigned long) 0xFF) * (fl2.l >> 8)) >> 8;
0104   5800           00534         MOVAR   (___fsmul_fl1_1_22 + 0)
0105   5600           00535         MOVRA   r0x100C
0106   5800           00536         MOVAR   (___fsmul_fl1_1_22 + 1)
0107   5600           00537         MOVRA   r0x1010
0108   5800           00538         MOVAR   (___fsmul_fl1_1_22 + 2)
0109   5600           00539         MOVRA   r0x1011
010A   5800           00540         MOVAR   (___fsmul_fl1_1_22 + 3)
010B   5600           00541         MOVRA   r0x1012
                      00542 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp65 [k89 lr65:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp64 [k88 lr64:65 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] & 0xff {unsigned-long-int literal}
010C   7600           00543         CLRR    r0x1010
010D   7600           00544         CLRR    r0x1011
010E   7600           00545         CLRR    r0x1012
                      00546 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp66 [k90 lr66:67 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00547 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp68 [k93 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = @[iTemp66 [k90 lr66:67 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
010F   5800           00548         MOVAR   (___fsmul_fl2_1_22 + 0)
0110   5600           00549         MOVRA   r0x1013
0111   5800           00550         MOVAR   (___fsmul_fl2_1_22 + 1)
0112   5600           00551         MOVRA   r0x1014
0113   5800           00552         MOVAR   (___fsmul_fl2_1_22 + 2)
0114   5600           00553         MOVRA   r0x1015
0115   5800           00554         MOVAR   (___fsmul_fl2_1_22 + 3)
0116   5600           00555         MOVRA   r0x1016
                      00556 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp69 [k94 lr68:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100F r0x1010 r0x1011 r0x1012 ] = iTemp68 [k93 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] >> 0x8 {const-unsigned-char literal}
                      00557 ;;114   MOVAR   r0x1014
                      00558 ;;116   MOVAR   r0x1015
                      00559 ;;118   MOVAR   r0x1016
0117   7600           00560         CLRR    r0x101A
                      00561 ;;[ICODE] ../libsdcc/fsmul.c:78:        send iTemp65 [k89 lr65:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ]{argreg = 1}
                      00562 ;;[ICODE] ../libsdcc/fsmul.c:78:        send iTemp69 [k94 lr68:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100F r0x1010 r0x1011 r0x1012 ]{argreg = 1}
                      00563 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp70 [k95 lr71:72 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = call __mullong [k141 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( long-int fixed, long-int fixed) fixed}
                      00564 ;;113   MOVAR   r0x1017
0118   5800           00565         MOVAR   r0x1014
0119   5600           00566         MOVRA   r0x1017
011A   5600           00567         MOVRA   STK06
                      00568 ;;115   MOVAR   r0x1018
011B   5800           00569         MOVAR   r0x1015
011C   5600           00570         MOVRA   r0x1018
011D   5600           00571         MOVRA   STK05
                      00572 ;;117   MOVAR   r0x1019
011E   5800           00573         MOVAR   r0x1016
011F   5600           00574         MOVRA   r0x1019
0120   5600           00575         MOVRA   STK04
0121   3C00           00576         MOVAI   0x00
0122   5600           00577         MOVRA   STK03
0123   5800           00578         MOVAR   r0x100C
0124   5600           00579         MOVRA   STK02
0125   3C00           00580         MOVAI   0x00
0126   5600           00581         MOVRA   STK01
0127   3C00           00582         MOVAI   0x00
0128   5600           00583         MOVRA   STK00
0129   3C00           00584         MOVAI   0x00
012A   8000           00585         CALL    __mullong
012B   5600           00586         MOVRA   r0x1015
012C   5600           00587         MOVRA   r0x1012
012D   5800           00588         MOVAR   STK00
012E   5600           00589         MOVRA   r0x1014
012F   5600           00590         MOVRA   r0x1011
0130   5800           00591         MOVAR   STK01
0131   5600           00592         MOVRA   r0x1010
0132   5800           00593         MOVAR   STK02
0133   5600           00594         MOVRA   r0x100C
                      00595 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp71 [k96 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = iTemp70 [k95 lr71:72 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] >> 0x8 {const-unsigned-char literal}
                      00596 ;;109   MOVAR   r0x1010
                      00597 ;;121   MOVAR   r0x1011
                      00598 ;;122   MOVAR   r0x1012
0134   7600           00599         CLRR    r0x1016
                      00600 ;;[ICODE] ../libsdcc/fsmul.c:78:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] + iTemp71 [k96 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ]
                      00601 ;;108   MOVAR   r0x1013
0135   5800           00602         MOVAR   r0x1010
0136   5600           00603         MOVRA   r0x1013
0137   7E00           00604         ADDRA   r0x100A
0138   5800           00605         MOVAR   r0x1014
0139   F1B7           00606         JBCLR   STATUS,0
013A   6000           00607         JZAR    r0x1014
013B   7E00           00608         ADDRA   r0x1009
013C   5800           00609         MOVAR   r0x1015
013D   F1B7           00610         JBCLR   STATUS,0
013E   6000           00611         JZAR    r0x1015
013F   7E00           00612         ADDRA   r0x1008
0140   5800           00613         MOVAR   r0x1016
0141   F1B7           00614         JBCLR   STATUS,0
0142   6000           00615         JZAR    r0x1016
0143   7E00           00616         ADDRA   r0x100F
                      00617 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp73 [k98 lr75:76 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00618 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp75 [k101 lr76:77 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = @[iTemp73 [k98 lr75:76 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00619 ;       .line   79; "../libsdcc/fsmul.c"        result += ((fl2.l & (unsigned long) 0xFF) * (fl1.l >> 8)) >> 8;
0144   5800           00620         MOVAR   (___fsmul_fl2_1_22 + 0)
0145   5600           00621         MOVRA   r0x100C
0146   5800           00622         MOVAR   (___fsmul_fl2_1_22 + 1)
0147   5600           00623         MOVRA   r0x1010
0148   5800           00624         MOVAR   (___fsmul_fl2_1_22 + 2)
0149   5600           00625         MOVRA   r0x1011
014A   5800           00626         MOVAR   (___fsmul_fl2_1_22 + 3)
014B   5600           00627         MOVRA   r0x1012
                      00628 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp76 [k102 lr77:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp75 [k101 lr76:77 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] & 0xff {unsigned-long-int literal}
014C   7600           00629         CLRR    r0x1010
014D   7600           00630         CLRR    r0x1011
014E   7600           00631         CLRR    r0x1012
                      00632 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp77 [k103 lr78:79 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00633 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp79 [k106 lr79:80 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = @[iTemp77 [k103 lr78:79 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
014F   5800           00634         MOVAR   (___fsmul_fl1_1_22 + 0)
0150   5600           00635         MOVRA   r0x1013
0151   5800           00636         MOVAR   (___fsmul_fl1_1_22 + 1)
0152   5600           00637         MOVRA   r0x1017
0153   5600           00638         MOVRA   r0x1014
0154   5800           00639         MOVAR   (___fsmul_fl1_1_22 + 2)
0155   5600           00640         MOVRA   r0x1018
0156   5600           00641         MOVRA   r0x1015
0157   5800           00642         MOVAR   (___fsmul_fl1_1_22 + 3)
0158   5600           00643         MOVRA   r0x1019
0159   5600           00644         MOVRA   r0x1016
                      00645 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp80 [k107 lr80:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100F r0x1010 r0x1011 r0x1012 ] = iTemp79 [k106 lr79:80 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] >> 0x8 {const-unsigned-char literal}
                      00646 ;;110   MOVAR   r0x1014
                      00647 ;;111   MOVAR   r0x1015
                      00648 ;;112   MOVAR   r0x1016
015A   7600           00649         CLRR    r0x101A
                      00650 ;;[ICODE] ../libsdcc/fsmul.c:79:        send iTemp76 [k102 lr77:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ]{argreg = 1}
                      00651 ;;[ICODE] ../libsdcc/fsmul.c:79:        send iTemp80 [k107 lr80:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100F r0x1010 r0x1011 r0x1012 ]{argreg = 1}
                      00652 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp81 [k108 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = call __mullong [k141 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( long-int fixed, long-int fixed) fixed}
015B   5800           00653         MOVAR   r0x1017
015C   5600           00654         MOVRA   STK06
015D   5800           00655         MOVAR   r0x1018
015E   5600           00656         MOVRA   STK05
015F   5800           00657         MOVAR   r0x1019
0160   5600           00658         MOVRA   STK04
0161   3C00           00659         MOVAI   0x00
0162   5600           00660         MOVRA   STK03
0163   5800           00661         MOVAR   r0x100C
0164   5600           00662         MOVRA   STK02
0165   3C00           00663         MOVAI   0x00
0166   5600           00664         MOVRA   STK01
0167   3C00           00665         MOVAI   0x00
0168   5600           00666         MOVRA   STK00
0169   3C00           00667         MOVAI   0x00
016A   8000           00668         CALL    __mullong
016B   5600           00669         MOVRA   r0x1015
016C   5600           00670         MOVRA   r0x1012
016D   5800           00671         MOVAR   STK00
016E   5600           00672         MOVRA   r0x1014
016F   5600           00673         MOVRA   r0x1011
0170   5800           00674         MOVAR   STK01
0171   5600           00675         MOVRA   r0x1013
0172   5600           00676         MOVRA   r0x1010
0173   5800           00677         MOVAR   STK02
0174   5600           00678         MOVRA   r0x100C
                      00679 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp82 [k109 lr84:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = iTemp81 [k108 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] >> 0x8 {const-unsigned-char literal}
                      00680 ;;105   MOVAR   r0x1010
                      00681 ;;106   MOVAR   r0x1011
                      00682 ;;107   MOVAR   r0x1012
0175   7600           00683         CLRR    r0x1016
                      00684 ;;[ICODE] ../libsdcc/fsmul.c:79:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] + iTemp82 [k109 lr84:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ]
0176   5800           00685         MOVAR   r0x1013
0177   7E00           00686         ADDRA   r0x100A
0178   5800           00687         MOVAR   r0x1014
0179   F1B7           00688         JBCLR   STATUS,0
017A   6000           00689         JZAR    r0x1014
017B   7E00           00690         ADDRA   r0x1009
017C   5800           00691         MOVAR   r0x1015
017D   F1B7           00692         JBCLR   STATUS,0
017E   6000           00693         JZAR    r0x1015
017F   7E00           00694         ADDRA   r0x1008
0180   5800           00695         MOVAR   r0x1016
0181   F1B7           00696         JBCLR   STATUS,0
0182   6000           00697         JZAR    r0x1016
0183   7E00           00698         ADDRA   r0x100F
                      00699 ;;[ICODE] ../libsdcc/fsmul.c:82:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] + 0x40 {unsigned-long-int literal}
                      00700 ;       .line   82; "../libsdcc/fsmul.c"        result += 0x40;
0184   3C40           00701         MOVAI   0x40
0185   7E00           00702         ADDRA   r0x100A
0186   F1B7           00703         JBCLR   STATUS,0
0187   6600           00704         INCR    r0x1009
0188   F5B7           00705         JBCLR   STATUS,2
0189   6600           00706         INCR    r0x1008
018A   F5B7           00707         JBCLR   STATUS,2
018B   6600           00708         INCR    r0x100F
                      00709 ;;[ICODE] ../libsdcc/fsmul.c:84:        iTemp85 [k112 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] & 0x80000000 {unsigned-long-int literal}
                      00710 ;       .line   84; "../libsdcc/fsmul.c"        if (result & SIGNBIT)
018C   EE00           00711         JBSET   r0x100F,7
018D   A000           00712         GOTO    _00109_DS_
                      00713 ;;[ICODE] ../libsdcc/fsmul.c:84:        if iTemp85 [k112 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} == 0 goto _iffalse_1($5)
                      00714 ;;[ICODE] ../libsdcc/fsmul.c:87:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] + 0x40 {unsigned-long-int literal}
                      00715 ;       .line   87; "../libsdcc/fsmul.c"        result += 0x40;
018E   3C40           00716         MOVAI   0x40
018F   7E00           00717         ADDRA   r0x100A
0190   F1B7           00718         JBCLR   STATUS,0
0191   6600           00719         INCR    r0x1009
0192   F5B7           00720         JBCLR   STATUS,2
0193   6600           00721         INCR    r0x1008
0194   F5B7           00722         JBCLR   STATUS,2
0195   6600           00723         INCR    r0x100F
                      00724 ;;[ICODE] ../libsdcc/fsmul.c:88:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x8 {const-unsigned-char literal}
                      00725 ;       .line   88; "../libsdcc/fsmul.c"        result >>= 8;
0196   5800           00726         MOVAR   r0x1009
0197   5600           00727         MOVRA   r0x100A
0198   5800           00728         MOVAR   r0x1008
0199   5600           00729         MOVRA   r0x1009
019A   5800           00730         MOVAR   r0x100F
019B   5600           00731         MOVRA   r0x1008
019C   7600           00732         CLRR    r0x100F
                      00733 ;;[ICODE] ../libsdcc/fsmul.c:88:         goto _ifend_1($6)
019D   A000           00734         GOTO    _00110_DS_
                      00735 ;;[ICODE] ../libsdcc/fsmul.c:88:  _iffalse_1($5) :
                      00736 ;;[ICODE] ../libsdcc/fsmul.c:92:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x7 {const-unsigned-char literal}
019E                  00737 _00109_DS_
                      00738 ;       .line   92; "../libsdcc/fsmul.c"        result >>= 7;
019E   5000           00739         RLAR    r0x100A
019F   5000           00740         RLAR    r0x1009
01A0   5600           00741         MOVRA   r0x100A
01A1   5000           00742         RLAR    r0x1008
01A2   5600           00743         MOVRA   r0x1009
01A3   5000           00744         RLAR    r0x100F
01A4   5600           00745         MOVRA   r0x1008
01A5   7600           00746         CLRR    r0x100F
01A6   5200           00747         RLR     r0x100F
                      00748 ;;[ICODE] ../libsdcc/fsmul.c:93:        iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] = iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] - 0x1 {const-unsigned-char literal}
                      00749 ;       .line   93; "../libsdcc/fsmul.c"        exp--;
01A7   3CFF           00750         MOVAI   0xff
01A8   7E00           00751         ADDRA   r0x100E
01A9   E1B7           00752         JBSET   STATUS,0
01AA   6E00           00753         DECR    r0x100D
                      00754 ;;[ICODE] ../libsdcc/fsmul.c:93:  _ifend_1($6) :
                      00755 ;;[ICODE] ../libsdcc/fsmul.c:96:        iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] & 0xff7fffff {unsigned-long-int literal}
01AB                  00756 _00110_DS_
                      00757 ;       .line   96; "../libsdcc/fsmul.c"        result &= ~HIDDEN;
01AB   DE00           00758         BCLR    r0x1008,7
                      00759 ;;[ICODE] ../libsdcc/fsmul.c:99:        iTemp92 [k119 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] < 0x100 {const-int literal}
                      00760 ;;signed compare: left < lit(0x100=256), size=2, mask=ffff
                      00761 ;       .line   99; "../libsdcc/fsmul.c"        if (exp >= 0x100)
01AC   5800           00762         MOVAR   r0x100D
01AD   3F80           00763         ADDAI   0x80
01AE   3F7F           00764         ADDAI   0x7f
01AF   E5B7           00765         JBSET   STATUS,2
01B0   A000           00766         GOTO    _00135_DS_
01B1   3C00           00767         MOVAI   0x00
01B2   4800           00768         RSUBAR  r0x100E
01B3                  00769 _00135_DS_
01B3   E1B7           00770         JBSET   STATUS,0
01B4   A000           00771         GOTO    _00115_DS_
                      00772 ;;genSkipc:3192: created from rifx:00CC608C
                      00773 ;;[ICODE] ../libsdcc/fsmul.c:99:        if iTemp92 [k119 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_3($11)
                      00774 ;;[ICODE] ../libsdcc/fsmul.c:100:       iTemp93 [k120 lr106:114 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00775 ;;[ICODE] ../libsdcc/fsmul.c:100:       if iTemp12 [k22 lr24:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ ___fsmul_sign_1_22}[r0x1000 ] == 0 goto iTempLbl0($15)
                      00776 ;       .line   100; "../libsdcc/fsmul.c"       fl1.l = (sign ? SIGNBIT : 0) | 0x7F800000;
01B5   3C00           00777         MOVAI   0x00
01B6   5C00           00778         ORAR    r0x100B
01B7   F5B7           00779         JBCLR   STATUS,2
01B8   A000           00780         GOTO    _00119_DS_
                      00781 ;;[ICODE] ../libsdcc/fsmul.c:100:       iTemp95 [k123 lr108:113 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] := 0x80000000 {unsigned-long-int literal}
01B9   7600           00782         CLRR    r0x100C
01BA   7600           00783         CLRR    r0x1010
01BB   7600           00784         CLRR    r0x1011
01BC   3C80           00785         MOVAI   0x80
01BD   5600           00786         MOVRA   r0x1012
                      00787 ;;[ICODE] ../libsdcc/fsmul.c:100:        goto iTempLbl1($16)
01BE   A000           00788         GOTO    _00120_DS_
                      00789 ;;[ICODE] ../libsdcc/fsmul.c:100:  iTempLbl0($15) :
                      00790 ;;[ICODE] ../libsdcc/fsmul.c:100:       iTemp95 [k123 lr108:113 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] := 0x0 {unsigned-long-int literal}
01BF                  00791 _00119_DS_
01BF   7600           00792         CLRR    r0x100C
01C0   7600           00793         CLRR    r0x1010
01C1   7600           00794         CLRR    r0x1011
01C2   7600           00795         CLRR    r0x1012
                      00796 ;;[ICODE] ../libsdcc/fsmul.c:100:  iTempLbl1($16) :
                      00797 ;;[ICODE] ../libsdcc/fsmul.c:100:       iTemp96 [k124 lr113:114 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp95 [k123 lr108:113 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] | 0x7f800000 {unsigned-long-int literal}
01C3                  00798 _00120_DS_
01C3   CE00           00799         BSET    r0x1011,7
01C4   3C7F           00800         MOVAI   0x7f
01C5   5E00           00801         ORRA    r0x1012
                      00802 ;;[ICODE] ../libsdcc/fsmul.c:100:       *(iTemp93 [k120 lr106:114 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := iTemp96 [k124 lr113:114 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ]
                      00803 ;;gen.c:6371: size=3/4, offset=0, AOP_TYPE(res)=8
01C6   5800           00804         MOVAR   r0x100C
01C7   5600           00805         MOVRA   (___fsmul_fl1_1_22 + 0)
                      00806 ;;gen.c:6371: size=2/4, offset=1, AOP_TYPE(res)=8
01C8   5800           00807         MOVAR   r0x1010
01C9   5600           00808         MOVRA   (___fsmul_fl1_1_22 + 1)
                      00809 ;;gen.c:6371: size=1/4, offset=2, AOP_TYPE(res)=8
01CA   5800           00810         MOVAR   r0x1011
01CB   5600           00811         MOVRA   (___fsmul_fl1_1_22 + 2)
                      00812 ;;gen.c:6371: size=0/4, offset=3, AOP_TYPE(res)=8
01CC   5800           00813         MOVAR   r0x1012
01CD   5600           00814         MOVRA   (___fsmul_fl1_1_22 + 3)
                      00815 ;;[ICODE] ../libsdcc/fsmul.c:100:        goto _ifend_3($12)
01CE   A000           00816         GOTO    _00116_DS_
                      00817 ;;[ICODE] ../libsdcc/fsmul.c:100:  _iffalse_3($11) :
                      00818 ;;[ICODE] ../libsdcc/fsmul.c:101:       iTemp97 [k125 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] < 0x0 {int literal}
                      00819 ;;signed compare: left < lit(0x0=0), size=2, mask=ffff
01CF                  00820 _00115_DS_
                      00821 ;       .line   101; "../libsdcc/fsmul.c"       else if (exp < 0)
01CF   C1B7           00822         BSET    STATUS,0
01D0   EE00           00823         JBSET   r0x100D,7
01D1   D1B7           00824         BCLR    STATUS,0
01D2   E1B7           00825         JBSET   STATUS,0
01D3   A000           00826         GOTO    _00112_DS_
                      00827 ;;genSkipc:3192: created from rifx:00CC608C
                      00828 ;;[ICODE] ../libsdcc/fsmul.c:101:       if iTemp97 [k125 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($8)
                      00829 ;;[ICODE] ../libsdcc/fsmul.c:102:       iTemp98 [k126 lr119:120 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00830 ;;[ICODE] ../libsdcc/fsmul.c:102:       *(iTemp98 [k126 lr119:120 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := 0x0 {volatile-unsigned-long-int literal}
                      00831 ;;gen.c:6371: size=3/4, offset=0, AOP_TYPE(res)=8
                      00832 ;       .line   102; "../libsdcc/fsmul.c"       fl1.l = 0;
01D4   7600           00833         CLRR    (___fsmul_fl1_1_22 + 0)
                      00834 ;;gen.c:6371: size=2/4, offset=1, AOP_TYPE(res)=8
01D5   7600           00835         CLRR    (___fsmul_fl1_1_22 + 1)
                      00836 ;;gen.c:6371: size=1/4, offset=2, AOP_TYPE(res)=8
01D6   7600           00837         CLRR    (___fsmul_fl1_1_22 + 2)
                      00838 ;;gen.c:6371: size=0/4, offset=3, AOP_TYPE(res)=8
01D7   7600           00839         CLRR    (___fsmul_fl1_1_22 + 3)
                      00840 ;;[ICODE] ../libsdcc/fsmul.c:102:        goto _ifend_3($12)
01D8   A000           00841         GOTO    _00116_DS_
                      00842 ;;[ICODE] ../libsdcc/fsmul.c:102:  _iffalse_2($8) :
                      00843 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp100 [k129 lr123:134 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00844 ;;[ICODE] ../libsdcc/fsmul.c:104:       if iTemp12 [k22 lr24:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ ___fsmul_sign_1_22}[r0x1000 ] == 0 goto iTempLbl2($17)
01D9                  00845 _00112_DS_
                      00846 ;       .line   104; "../libsdcc/fsmul.c"       fl1.l = PACK (sign ? SIGNBIT : 0 , exp, result);
01D9   3C00           00847         MOVAI   0x00
01DA   5C00           00848         ORAR    r0x100B
01DB   F5B7           00849         JBCLR   STATUS,2
01DC   A000           00850         GOTO    _00121_DS_
                      00851 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp102 [k132 lr125:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1007 r0x1008 r0x1009 ] := 0x80000000 {unsigned-long-int literal}
01DD   7600           00852         CLRR    r0x100B
01DE   7600           00853         CLRR    r0x100C
01DF   7600           00854         CLRR    r0x1010
01E0   3C80           00855         MOVAI   0x80
01E1   5600           00856         MOVRA   r0x1011
                      00857 ;;[ICODE] ../libsdcc/fsmul.c:104:        goto iTempLbl3($18)
01E2   A000           00858         GOTO    _00122_DS_
                      00859 ;;[ICODE] ../libsdcc/fsmul.c:104:  iTempLbl2($17) :
                      00860 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp102 [k132 lr125:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1007 r0x1008 r0x1009 ] := 0x0 {unsigned-long-int literal}
01E3                  00861 _00121_DS_
01E3   7600           00862         CLRR    r0x100B
01E4   7600           00863         CLRR    r0x100C
01E5   7600           00864         CLRR    r0x1010
01E6   7600           00865         CLRR    r0x1011
                      00866 ;;[ICODE] ../libsdcc/fsmul.c:104:  iTempLbl3($18) :
                      00867 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp103 [k133 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x100A r0x100B r0x100C r0x100D ] = (unsigned-long-int fixed)iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ]
01E7                  00868 _00122_DS_
01E7   5800           00869         MOVAR   r0x100E
01E8   5600           00870         MOVRA   r0x1012
01E9   5800           00871         MOVAR   r0x100D
01EA   5600           00872         MOVRA   r0x1013
01EB   3C00           00873         MOVAI   0x00
01EC   FE00           00874         JBCLR   r0x1013,7
01ED   3CFF           00875         MOVAI   0xff
01EE   5600           00876         MOVRA   r0x1015
01EF   5600           00877         MOVRA   r0x1014
                      00878 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp104 [k134 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1005 r0x1006 r0x100E r0x100F ] = iTemp103 [k133 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x100A r0x100B r0x100C r0x100D ] << 0x17 {const-unsigned-char literal}
01F0   4C00           00879         RRAR    r0x1013
01F1   4C00           00880         RRAR    r0x1012
01F2   5600           00881         MOVRA   r0x1017
01F3   7600           00882         CLRR    r0x1016
01F4   4E00           00883         RRR     r0x1016
01F5   7600           00884         CLRR    r0x100D
01F6   7600           00885         CLRR    r0x100E
                      00886 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp105 [k135 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1007 r0x1008 r0x1009 ] = iTemp102 [k132 lr125:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1007 r0x1008 r0x1009 ] | iTemp104 [k134 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1005 r0x1006 r0x100E r0x100F ]
01F7   3C00           00887         MOVAI   0x00
01F8   5E00           00888         ORRA    r0x100B
01F9   3C00           00889         MOVAI   0x00
01FA   5E00           00890         ORRA    r0x100C
01FB   5800           00891         MOVAR   r0x1016
01FC   5E00           00892         ORRA    r0x1010
01FD   5800           00893         MOVAR   r0x1017
01FE   5E00           00894         ORRA    r0x1011
                      00895 ;;[ICODE] ../libsdcc/fsmul.c:104:       iTemp106 [k136 lr133:134 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp105 [k135 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1007 r0x1008 r0x1009 ] | iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ]
01FF   5800           00896         MOVAR   r0x100B
0200   5E00           00897         ORRA    r0x100A
0201   5800           00898         MOVAR   r0x100C
0202   5E00           00899         ORRA    r0x1009
0203   5800           00900         MOVAR   r0x1010
0204   5E00           00901         ORRA    r0x1008
0205   5800           00902         MOVAR   r0x1011
0206   5E00           00903         ORRA    r0x100F
                      00904 ;;[ICODE] ../libsdcc/fsmul.c:104:       *(iTemp100 [k129 lr123:134 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := iTemp106 [k136 lr133:134 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ]
                      00905 ;;gen.c:6371: size=3/4, offset=0, AOP_TYPE(res)=8
0207   5800           00906         MOVAR   r0x100A
0208   5600           00907         MOVRA   (___fsmul_fl1_1_22 + 0)
                      00908 ;;gen.c:6371: size=2/4, offset=1, AOP_TYPE(res)=8
0209   5800           00909         MOVAR   r0x1009
020A   5600           00910         MOVRA   (___fsmul_fl1_1_22 + 1)
                      00911 ;;gen.c:6371: size=1/4, offset=2, AOP_TYPE(res)=8
020B   5800           00912         MOVAR   r0x1008
020C   5600           00913         MOVRA   (___fsmul_fl1_1_22 + 2)
                      00914 ;;gen.c:6371: size=0/4, offset=3, AOP_TYPE(res)=8
020D   5800           00915         MOVAR   r0x100F
020E   5600           00916         MOVRA   (___fsmul_fl1_1_22 + 3)
                      00917 ;;[ICODE] ../libsdcc/fsmul.c:104:  _ifend_3($12) :
                      00918 ;;[ICODE] ../libsdcc/fsmul.c:105:       iTemp107 [k137 lr136:137 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00919 ;;[ICODE] ../libsdcc/fsmul.c:105:       iTemp109 [k140 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp107 [k137 lr136:137 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
020F                  00920 _00116_DS_
                      00921 ;       .line   105; "../libsdcc/fsmul.c"       return (fl1.f);
020F   5800           00922         MOVAR   (___fsmul_fl1_1_22 + 0)
0210   5600           00923         MOVRA   r0x100B
0211   5800           00924         MOVAR   (___fsmul_fl1_1_22 + 1)
0212   5600           00925         MOVRA   r0x100A
0213   5800           00926         MOVAR   (___fsmul_fl1_1_22 + 2)
0214   5600           00927         MOVRA   r0x1009
0215   5800           00928         MOVAR   (___fsmul_fl1_1_22 + 3)
0216   5600           00929         MOVRA   r0x1008
                      00930 ;;[ICODE] ../libsdcc/fsmul.c:105:       ret iTemp109 [k140 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0217   5800           00931         MOVAR   r0x100B
0218   5600           00932         MOVRA   STK02
0219   5800           00933         MOVAR   r0x100A
021A   5600           00934         MOVRA   STK01
021B   5800           00935         MOVAR   r0x1009
021C   5600           00936         MOVRA   STK00
021D   5800           00937         MOVAR   r0x1008
                      00938 ;;[ICODE] ../libsdcc/fsmul.c:105:  _return($13) :
                      00939 ;;[ICODE] ../libsdcc/fsmul.c:105:       eproc ___fsmul [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
021E                  00940 _00117_DS_
021E   000C           00941         RETURN  
                      00942 ; exit point of ___fsmul
                      00943 
                      00944 
                      00945 ;       code size estimation:
                      00946 ;         543+    0 =   543 instructions ( 1086 byte)
                      00947 
                      00948         end
gpasm-2.0.0_beta2 (Aug 27 2017)fsmul.asm          2017-9-12  18:09:53          PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

ADCR0                             000001EC
ADCR1                             000001ED
ADEOC                             00000001
ADIE                              00000006
ADIF                              00000006
ADIOS0                            00000000
ADIOS1                            00000001
ADIOS3                            00000003
ADIOS4                            00000004
ADIOS5                            00000005
ADIOS7                            00000007
ADOIS2                            00000002
ADOIS6                            00000006
ADON                              00000000
ADRH                              000001EE
ADRL                              000001EF
BUZ0OE                            00000005
BUZ1OE                            00000005
C                                 00000000
CLKS                              00000002
DC                                00000001
FSR                               000001B4
FSR0                              000001B4
FSR1                              000001B5
GIE                               00000007
HAAS                              00000006
HBB                               00000005
HCF                               00000007
HEN                               00000001
HFEN                              00000000
HIBYTE                            000001B3
HTX                               00000004
I2CADDR                           000001F1
I2CCR                             000001F0
I2CDATA                           000001F2
I2CIE                             00000005
I2CIF                             00000005
INDF                              000001B0
INDF0                             000001B0
INDF1                             000001B1
INDF2                             000001B2
INDF3                             000001B9
INT0IE                            00000002
INT0IF                            00000002
INT1IE                            00000003
INT1IF                            00000003
INTE                              000001BA
INTF                              000001BB
IOP0                              000001C0
IOP1                              000001C4
IOP2                              000001C8
IOP3                              000001CC
LFEN                              00000001
MCR                               000001B8
OEP0                              000001C1
OEP1                              000001C5
OEP2                              000001C9
OEP3                              000001CD
OSCM                              000001BC
P00                               00000000
P00OE                             00000000
P00PU                             00000000
P01                               00000001
P01OE                             00000001
P01PU                             00000001
P02                               00000002
P02OE                             00000002
P02PU                             00000002
P03                               00000003
P03OE                             00000003
P03PU                             00000003
P04                               00000004
P04OE                             00000004
P04PU                             00000004
P05                               00000005
P05OE                             00000005
P05PU                             00000005
P06                               00000006
P06OE                             00000006
P07                               00000007
P07OE                             00000007
P10                               00000000
P10OE                             00000000
P10PU                             00000000
P11                               00000001
P11OE                             00000001
P11PU                             00000001
P12                               00000002
P12OE                             00000002
P12PU                             00000002
P13                               00000003
P13OE                             00000003
P13PU                             00000003
P14                               00000004
P14OE                             00000004
P14PU                             00000004
P15                               00000005
P15OE                             00000005
P15PU                             00000005
P16                               00000006
P16OE                             00000006
P16PU                             00000006
P17                               00000007
P17OE                             00000007
P17PU                             00000007
P20                               00000000
P20OE                             00000000
P20PU                             00000000
P21                               00000001
P21OE                             00000001
P21PU                             00000001
P22                               00000002
P22OE                             00000002
P22PU                             00000002
P23                               00000003
P23OE                             00000003
P23PU                             00000003
P24                               00000004
P24OE                             00000004
P24PU                             00000004
P25                               00000005
P25OE                             00000005
P25PU                             00000005
P26                               00000006
P26OE                             00000006
P26PU                             00000006
P27                               00000007
P27OE                             00000007
P27PU                             00000007
P30                               00000000
P30OE                             00000000
P30PU                             00000000
P31                               00000001
P31OE                             00000001
P31PU                             00000001
PCL                               000001B6
PD                                00000004
PSAVE                             00000000
PUP0                              000001C2
PUP1                              000001C6
PUP2                              000001CA
PUP3                              000001CE
PWM0OE                            00000006
PWM1OE                            00000006
RXAK                              00000000
SRW                               00000002
SSAVE                             00000000
STATUS                            000001B7
STBH                              00000004
STBL                              00000005
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
STK07                             00000000
STK08                             00000000
STK09                             00000000
STK10                             00000000
STK11                             00000000
STK12                             00000000
T0CNT                             000001D1
T0CR                              000001D0
T0DATA                            000001D3
T0IE                              00000000
T0IF                              00000000
T0LOAD                            000001D2
T1CNT                             000001D5
T1CR                              000001D4
T1DATA                            000001D7
T1IE                              00000001
T1IF                              00000001
T1LOAD                            000001D6
T2CNTH                            000001D9
T2CNTL                            000001DA
T2CR                              000001D8
T2IE                              00000004
T2IF                              00000004
T2LOADH                           000001DB
T2LOADL                           000001DC
T2MOD                             00000005
TC0EN                             00000007
TC1EN                             00000007
TC2EN                             00000007
TK0CLR                            00000003
TK0CNTH                           000001E2
TK0CNTL                           000001E3
TK0CRH                            000001E0
TK0CRL                            000001E1
TK0IE                             00000006
TK0IF                             00000007
TK0JE                             00000005
TK0RCE                            00000004
TK1CLR                            00000003
TK1CNTH                           000001E6
TK1CNTL                           000001E7
TK1CRH                            000001E4
TK1CRL                            000001E5
TK1IE                             00000006
TK1IF                             00000007
TK1JE                             00000005
TK1RCE                            00000004
TK2CLR                            00000003
TK2CNTH                           000001EA
TK2CNTL                           000001EB
TK2CRH                            000001E8
TK2CRL                            000001E9
TK2IE                             00000006
TK2IF                             00000007
TK2JE                             00000005
TK2RCE                            00000004
TO                                00000005
TXAK                              00000003
WSAVE                             00000000
Z                                 00000002
_00105_DS_                        00000039
_00106_DS_                        00000041
_00109_DS_                        0000019E
_00110_DS_                        000001AB
_00112_DS_                        000001D9
_00115_DS_                        000001CF
_00116_DS_                        0000020F
_00117_DS_                        0000021E
_00119_DS_                        000001BF
_00120_DS_                        000001C3
_00121_DS_                        000001E3
_00122_DS_                        000001E7
_00135_DS_                        000001B3
_CONFIG0                          00008000
_CONFIG1                          00008001
_CP_ALL                           00007FFF
_FCPU_128T                        0000FFEF
_FCPU_16T                         0000FFBF
_FCPU_256T                        0000FFFF
_FCPU_2T                          0000FF8F
_FCPU_32T                         0000FFCF
_FCPU_4T                          0000FF9F
_FCPU_64T                         0000FFDF
_FCPU_8T                          0000FFAF
_HRC_LRC                          0000FCFF
_HRC_LXT                          0000FDFF
_HXT_LRC                          0000FEFF
_MCLR_OFF                         0000FF7F
_MCLR_ON                          0000FFFF
_PTWRT_16_1024                    0000FFF7
_PTWRT_16_16                      0000DFF7
_PTWRT_256_256                    0000DFFF
_PTWRT_256_4096                   0000FFFF
_PTWRT_4_4                        0000DFF3
_PTWRT_4_512                      0000FFF3
_PTWRT_64_2048                    0000FFFB
_PTWRT_64_64                      0000DFFB
_VLVR_160                         0000E3FF
_VLVR_185                         0000E7FF
_VLVR_205                         0000EBFF
_VLVR_218                         0000EFFF
_VLVR_232                         0000F3FF
_VLVR_245                         0000F7FF
_VLVR_305                         0000FBFF
_VLVR_360                         0000FFFF
_WDT_ALWAYS_OFF                   0000FFFC
_WDT_ALWAYS_ON                    0000FFFF
_WDT_SLEEP_OFF                    0000FFFD
__32P64                           00000001
___fs2schar                       00000000
___fs2sint                        00000000
___fs2slong                       00000000
___fs2uchar                       00000000
___fs2uint                        00000000
___fs2ulong                       00000000
___fsadd                          00000000
___fsdiv                          00000000
___fseq                           00000000
___fsgt                           00000000
___fslt                           00000000
___fsmul                          00000000
___fsmul_fl1_1_22                 00000013
___fsmul_fl2_1_22                 00000017
___fsneq                          00000000
___fssub                          00000000
___schar2fs                       00000000
___sint2fs                        00000000
___slong2fs                       00000000
___uchar2fs                       00000000
___uint2fs                        00000000
___ulong2fs                       00000000
__mullong                         00000000
r0x1008                           00000003
r0x1009                           00000002
r0x100A                           00000001
r0x100B                           00000000
r0x100C                           00000007
r0x100D                           00000006
r0x100E                           00000005
r0x100F                           00000004
r0x1010                           00000008
r0x1011                           00000009
r0x1012                           0000000A
r0x1013                           0000000B
r0x1014                           0000000C
r0x1015                           0000000D
r0x1016                           0000000E
r0x1017                           0000000F
r0x1018                           00000010
r0x1019                           00000011
r0x101A                           00000012

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

