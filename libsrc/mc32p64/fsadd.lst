gpasm-2.0.0_beta2 (Aug 27 2017)fsadd.asm          2017-9-12  18:09:51          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : SinoMCU ANSI-C Compiler
                      00003 ; Version 1.0.0 (Sep 11 2017) (MINGW32)
                      00004 ; This file was generated Tue Sep 12 18:09:51 2017
                      00005 ;--------------------------------------------------------
                      00006 ; MC30/MC32 port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc/fsadd.c"
                      00009         list    p=3264
                      00010         radix dec
                      00011         include "3264.inc"
                      00001                 LIST
                      00002 ;mc32p64.inc    Standard Header File, Version 1.00 by Sinomcu
                      00374                 LIST
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015         extern  ___uchar2fs
                      00016         extern  ___schar2fs
                      00017         extern  ___uint2fs
                      00018         extern  ___sint2fs
                      00019         extern  ___ulong2fs
                      00020         extern  ___slong2fs
                      00021         extern  ___fs2uchar
                      00022         extern  ___fs2schar
                      00023         extern  ___fs2uint
                      00024         extern  ___fs2sint
                      00025         extern  ___fs2ulong
                      00026         extern  ___fs2slong
                      00027         extern  ___fssub
                      00028         extern  ___fsmul
                      00029         extern  ___fsdiv
                      00030         extern  ___fslt
                      00031         extern  ___fseq
                      00032         extern  ___fsneq
                      00033         extern  ___fsgt
                      00034 
                      00035         extern PSAVE
                      00036         extern SSAVE
                      00037         extern WSAVE
                      00038         extern STK12
                      00039         extern STK11
                      00040         extern STK10
                      00041         extern STK09
                      00042         extern STK08
                      00043         extern STK07
                      00044         extern STK06
                      00045         extern STK05
                      00046         extern STK04
                      00047         extern STK03
                      00048         extern STK02
                      00049         extern STK01
                      00050         extern STK00
                      00051 ;--------------------------------------------------------
                      00052 ; global declarations
                      00053 ;--------------------------------------------------------
                      00054         global  ___fsadd
                      00055 
                      00056 ;--------------------------------------------------------
                      00057 ; global definitions
                      00058 ;--------------------------------------------------------
                      00059 ;--------------------------------------------------------
                      00060 ; absolute symbol definitions
                      00061 ;--------------------------------------------------------
                      00062 ;--------------------------------------------------------
                      00063 ; compiler-defined variables
                      00064 ;--------------------------------------------------------
                      00065 UDL_fsadd_0     udata
0000                  00066 r0x100B res     1
0000                  00067 r0x100A res     1
0001                  00068 r0x1009 res     1
0001                  00069 r0x1008 res     1
0002                  00070 r0x100F res     1
0002                  00071 r0x100E res     1
0003                  00072 r0x100D res     1
0003                  00073 r0x100C res     1
0004                  00074 r0x1010 res     1
0004                  00075 r0x1011 res     1
0005                  00076 r0x1012 res     1
0005                  00077 r0x1013 res     1
0006                  00078 r0x1014 res     1
0006                  00079 r0x1015 res     1
0007                  00080 r0x1016 res     1
0007                  00081 r0x1017 res     1
0008                  00082 r0x1018 res     1
0008                  00083 r0x1019 res     1
0009                  00084 r0x101A res     1
0009                  00085 r0x101B res     1
000A                  00086 r0x101C res     1
000A                  00087 r0x101D res     1
000B                  00088 r0x101E res     1
000B                  00089 r0x101F res     1
000C                  00090 ___fsadd_fl1_1_22       res     4
000E                  00091 ___fsadd_fl2_1_22       res     4
                      00092 ;--------------------------------------------------------
                      00093 ; initialized data
                      00094 ;--------------------------------------------------------
                      00095 
                      00096 ;@Allocation info for local variables in function '__fsadd'
                      00097 ;@__fsadd __uchar2fs                Allocated to registers ;size:2
                      00098 ;@__fsadd __schar2fs                Allocated to registers ;size:2
                      00099 ;@__fsadd __uint2fs                 Allocated to registers ;size:2
                      00100 ;@__fsadd __sint2fs                 Allocated to registers ;size:2
                      00101 ;@__fsadd __ulong2fs                Allocated to registers ;size:2
                      00102 ;@__fsadd __slong2fs                Allocated to registers ;size:2
                      00103 ;@__fsadd __fs2uchar                Allocated to registers ;size:2
                      00104 ;@__fsadd __fs2schar                Allocated to registers ;size:2
                      00105 ;@__fsadd __fs2uint                 Allocated to registers ;size:2
                      00106 ;@__fsadd __fs2sint                 Allocated to registers ;size:2
                      00107 ;@__fsadd __fs2ulong                Allocated to registers ;size:2
                      00108 ;@__fsadd __fs2slong                Allocated to registers ;size:2
                      00109 ;@__fsadd __fssub                   Allocated to registers ;size:2
                      00110 ;@__fsadd __fsmul                   Allocated to registers ;size:2
                      00111 ;@__fsadd __fsdiv                   Allocated to registers ;size:2
                      00112 ;@__fsadd __fslt                    Allocated to registers ;size:2
                      00113 ;@__fsadd __fseq                    Allocated to registers ;size:2
                      00114 ;@__fsadd __fsneq                   Allocated to registers ;size:2
                      00115 ;@__fsadd __fsgt                    Allocated to registers ;size:2
                      00116 ;@__fsadd a2                        Allocated to registers r0x100F r0x100E r0x100D r0x100C ;size:4
                      00117 ;@__fsadd a1                        Allocated to registers r0x100B r0x100A r0x1009 r0x1008 ;size:4
                      00118 ;@__fsadd fl1                       Allocated to registers ;size:4
                      00119 ;@__fsadd fl2                       Allocated to registers ;size:4
                      00120 ;@__fsadd mant1                     Allocated to registers r0x100B r0x100A r0x1014 r0x1015 ;size:4
                      00121 ;@__fsadd mant2                     Allocated to registers r0x1016 r0x1017 r0x1018 r0x1019 ;size:4
                      00122 ;@__fsadd exp1                      Allocated to registers r0x100F r0x100E ;size:2
                      00123 ;@__fsadd exp2                      Allocated to registers r0x100D r0x100C ;size:2
                      00124 ;@__fsadd sign                      Allocated to registers r0x1010 r0x1011 r0x1012 r0x1013 ;size:4
                      00125 ;@end Allocation info for local variables in function '__fsadd';
                      00126 
                      00127 ;--------------------------------------------------------
                      00128 ; overlayable items in internal ram 
                      00129 ;--------------------------------------------------------
                      00130 ;       udata_ovr
                      00131 ;--------------------------------------------------------
                      00132 ; code
                      00133 ;--------------------------------------------------------
                      00134 code_fsadd      code
                      00135 ;***
                      00136 ;  pBlock Stats: dbName = C
                      00137 ;***
                      00138 ;entry:  ___fsadd       ;Function start
                      00139 ; 2 exit points
                      00140 ;has an exit
                      00141 ;31 compiler assigned registers:
                      00142 ;   r0x1008
                      00143 ;   STK00
                      00144 ;   r0x1009
                      00145 ;   STK01
                      00146 ;   r0x100A
                      00147 ;   STK02
                      00148 ;   r0x100B
                      00149 ;   STK03
                      00150 ;   r0x100C
                      00151 ;   STK04
                      00152 ;   r0x100D
                      00153 ;   STK05
                      00154 ;   r0x100E
                      00155 ;   STK06
                      00156 ;   r0x100F
                      00157 ;   r0x1010
                      00158 ;   r0x1011
                      00159 ;   r0x1012
                      00160 ;   r0x1013
                      00161 ;   r0x1014
                      00162 ;   r0x1015
                      00163 ;   r0x1016
                      00164 ;   r0x1017
                      00165 ;   r0x1018
                      00166 ;   r0x1019
                      00167 ;   r0x101A
                      00168 ;   r0x101B
                      00169 ;   r0x101C
                      00170 ;   r0x101D
                      00171 ;   r0x101E
                      00172 ;   r0x101F
                      00173 ;; Starting pCode block
                      00174 ;;[ICODE] ../libsdcc/fsadd.c:53:  _entry($30) :
                      00175 ;;[ICODE] ../libsdcc/fsadd.c:53:        proc ___fsadd [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0000                  00176 ___fsadd        ;Function start
                      00177 ; 2 exit points
                      00178 ;;[ICODE] ../libsdcc/fsadd.c:53: iTemp0 [k2 lr3:7 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsadd_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ] = recv ___fsadd [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
                      00179 ;       .line   53; "../libsdcc/fsadd.c"        float __fsadd (float a1, float a2) _FS_REENTRANT
0000   5600           00180         MOVRA   r0x1008
0001   5800           00181         MOVAR   STK00
0002   5600           00182         MOVRA   r0x1009
0003   5800           00183         MOVAR   STK01
0004   5600           00184         MOVRA   r0x100A
0005   5800           00185         MOVAR   STK02
0006   5600           00186         MOVRA   (___fsadd_fl1_1_22 + 0)
0007   5600           00187         MOVRA   r0x100B
                      00188 ;;[ICODE] ../libsdcc/fsadd.c:53: iTemp1 [k4 lr4:9 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsadd_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ] = recv ___fsadd [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0008   5800           00189         MOVAR   STK03
0009   5600           00190         MOVRA   r0x100C
000A   5800           00191         MOVAR   STK04
000B   5600           00192         MOVRA   r0x100D
000C   5800           00193         MOVAR   STK05
000D   5600           00194         MOVRA   r0x100E
000E   5800           00195         MOVAR   STK06
000F   5600           00196         MOVRA   (___fsadd_fl2_1_22 + 0)
0010   5600           00197         MOVRA   r0x100F
                      00198 ;;[ICODE] ../libsdcc/fsadd.c:58:        iTemp2 [k6 lr5:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsadd_sign_1_22}[r0x1008 r0x1009 r0x100A r0x100B ] := 0x0 {unsigned-long-int literal}
                      00199 ;       .line   58; "../libsdcc/fsadd.c"        unsigned long sign = 0;
0011   7600           00200         CLRR    r0x1010
0012   7600           00201         CLRR    r0x1011
0013   7600           00202         CLRR    r0x1012
0014   7600           00203         CLRR    r0x1013
                      00204 ;;[ICODE] ../libsdcc/fsadd.c:60:        iTemp3 [k9 lr6:7 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsadd_fl1_1_22 [k8 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00205 ;;[ICODE] ../libsdcc/fsadd.c:60:        *(iTemp3 [k9 lr6:7 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp0 [k2 lr3:7 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsadd_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00206 ;;gen.c:6371: size=3/4, offset=0, AOP_TYPE(res)=8
                      00207 ;;117   MOVAR   r0x100B
                      00208 ;;gen.c:6371: size=2/4, offset=1, AOP_TYPE(res)=8
                      00209 ;       .line   60; "../libsdcc/fsadd.c"        fl1.f = a1;
0015   5800           00210         MOVAR   r0x100A
0016   5600           00211         MOVRA   (___fsadd_fl1_1_22 + 1)
                      00212 ;;gen.c:6371: size=1/4, offset=2, AOP_TYPE(res)=8
0017   5800           00213         MOVAR   r0x1009
0018   5600           00214         MOVRA   (___fsadd_fl1_1_22 + 2)
                      00215 ;;gen.c:6371: size=0/4, offset=3, AOP_TYPE(res)=8
0019   5800           00216         MOVAR   r0x1008
001A   5600           00217         MOVRA   (___fsadd_fl1_1_22 + 3)
                      00218 ;;[ICODE] ../libsdcc/fsadd.c:61:        iTemp5 [k13 lr8:9 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsadd_fl2_1_22 [k12 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00219 ;;[ICODE] ../libsdcc/fsadd.c:61:        *(iTemp5 [k13 lr8:9 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp1 [k4 lr4:9 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsadd_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ]
                      00220 ;;gen.c:6371: size=3/4, offset=0, AOP_TYPE(res)=8
                      00221 ;;118   MOVAR   r0x100F
                      00222 ;;gen.c:6371: size=2/4, offset=1, AOP_TYPE(res)=8
                      00223 ;       .line   61; "../libsdcc/fsadd.c"        fl2.f = a2;
001B   5800           00224         MOVAR   r0x100E
001C   5600           00225         MOVRA   (___fsadd_fl2_1_22 + 1)
                      00226 ;;gen.c:6371: size=1/4, offset=2, AOP_TYPE(res)=8
001D   5800           00227         MOVAR   r0x100D
001E   5600           00228         MOVRA   (___fsadd_fl2_1_22 + 2)
                      00229 ;;gen.c:6371: size=0/4, offset=3, AOP_TYPE(res)=8
001F   5800           00230         MOVAR   r0x100C
0020   5600           00231         MOVRA   (___fsadd_fl2_1_22 + 3)
                      00232 ;;[ICODE] ../libsdcc/fsadd.c:64:        iTemp7 [k16 lr10:11 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsadd_fl1_1_22 [k8 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00233 ;;[ICODE] ../libsdcc/fsadd.c:64:        iTemp9 [k19 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp7 [k16 lr10:11 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00234 ;       .line   64; "../libsdcc/fsadd.c"        if (!fl1.l)
0021   5800           00235         MOVAR   (___fsadd_fl1_1_22 + 0)
0022   5600           00236         MOVRA   r0x100B
0023   5800           00237         MOVAR   (___fsadd_fl1_1_22 + 1)
0024   5600           00238         MOVRA   r0x100A
0025   5800           00239         MOVAR   (___fsadd_fl1_1_22 + 2)
0026   5600           00240         MOVRA   r0x1009
0027   5800           00241         MOVAR   (___fsadd_fl1_1_22 + 3)
0028   5600           00242         MOVRA   r0x1008
                      00243 ;;[ICODE] ../libsdcc/fsadd.c:64:        if iTemp9 [k19 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] != 0 goto _iffalse_0($2)
0029   5800           00244         MOVAR   r0x100B
002A   5C00           00245         ORAR    r0x100A
002B   5C00           00246         ORAR    r0x1009
002C   5C00           00247         ORAR    r0x1008
002D   E5B7           00248         JBSET   STATUS,2
002E   A000           00249         GOTO    _00106_DS_
                      00250 ;;[ICODE] ../libsdcc/fsadd.c:65:        iTemp10 [k20 lr13:14 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsadd_fl2_1_22 [k12 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00251 ;;[ICODE] ../libsdcc/fsadd.c:65:        iTemp12 [k23 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp10 [k20 lr13:14 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00252 ;       .line   65; "../libsdcc/fsadd.c"        return (fl2.f);
002F   5800           00253         MOVAR   (___fsadd_fl2_1_22 + 0)
0030   5600           00254         MOVRA   r0x100B
0031   5800           00255         MOVAR   (___fsadd_fl2_1_22 + 1)
0032   5600           00256         MOVRA   r0x100A
0033   5800           00257         MOVAR   (___fsadd_fl2_1_22 + 2)
0034   5600           00258         MOVRA   r0x1009
0035   5800           00259         MOVAR   (___fsadd_fl2_1_22 + 3)
0036   5600           00260         MOVRA   r0x1008
                      00261 ;;[ICODE] ../libsdcc/fsadd.c:65:        ret iTemp12 [k23 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0037   5800           00262         MOVAR   r0x100B
0038   5600           00263         MOVRA   STK02
0039   5800           00264         MOVAR   r0x100A
003A   5600           00265         MOVRA   STK01
003B   5800           00266         MOVAR   r0x1009
003C   5600           00267         MOVRA   STK00
003D   5800           00268         MOVAR   r0x1008
003E   A000           00269         GOTO    _00133_DS_
                      00270 ;;[ICODE] ../libsdcc/fsadd.c:65:  _iffalse_0($2) :
                      00271 ;;[ICODE] ../libsdcc/fsadd.c:66:        iTemp13 [k24 lr17:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsadd_fl2_1_22 [k12 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00272 ;;[ICODE] ../libsdcc/fsadd.c:66:        iTemp15 [k27 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp13 [k24 lr17:18 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
003F                  00273 _00106_DS_
                      00274 ;       .line   66; "../libsdcc/fsadd.c"        if (!fl2.l)
003F   5800           00275         MOVAR   (___fsadd_fl2_1_22 + 0)
0040   5600           00276         MOVRA   r0x100B
0041   5800           00277         MOVAR   (___fsadd_fl2_1_22 + 1)
0042   5600           00278         MOVRA   r0x100A
0043   5800           00279         MOVAR   (___fsadd_fl2_1_22 + 2)
0044   5600           00280         MOVRA   r0x1009
0045   5800           00281         MOVAR   (___fsadd_fl2_1_22 + 3)
0046   5600           00282         MOVRA   r0x1008
                      00283 ;;[ICODE] ../libsdcc/fsadd.c:66:        if iTemp15 [k27 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] != 0 goto _iffalse_1($4)
0047   5800           00284         MOVAR   r0x100B
0048   5C00           00285         ORAR    r0x100A
0049   5C00           00286         ORAR    r0x1009
004A   5C00           00287         ORAR    r0x1008
004B   E5B7           00288         JBSET   STATUS,2
004C   A000           00289         GOTO    _00108_DS_
                      00290 ;;[ICODE] ../libsdcc/fsadd.c:67:        iTemp16 [k28 lr20:21 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsadd_fl1_1_22 [k8 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00291 ;;[ICODE] ../libsdcc/fsadd.c:67:        iTemp18 [k31 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp16 [k28 lr20:21 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00292 ;       .line   67; "../libsdcc/fsadd.c"        return (fl1.f);
004D   5800           00293         MOVAR   (___fsadd_fl1_1_22 + 0)
004E   5600           00294         MOVRA   r0x100B
004F   5800           00295         MOVAR   (___fsadd_fl1_1_22 + 1)
0050   5600           00296         MOVRA   r0x100A
0051   5800           00297         MOVAR   (___fsadd_fl1_1_22 + 2)
0052   5600           00298         MOVRA   r0x1009
0053   5800           00299         MOVAR   (___fsadd_fl1_1_22 + 3)
0054   5600           00300         MOVRA   r0x1008
                      00301 ;;[ICODE] ../libsdcc/fsadd.c:67:        ret iTemp18 [k31 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0055   5800           00302         MOVAR   r0x100B
0056   5600           00303         MOVRA   STK02
0057   5800           00304         MOVAR   r0x100A
0058   5600           00305         MOVRA   STK01
0059   5800           00306         MOVAR   r0x1009
005A   5600           00307         MOVRA   STK00
005B   5800           00308         MOVAR   r0x1008
005C   A000           00309         GOTO    _00133_DS_
                      00310 ;;[ICODE] ../libsdcc/fsadd.c:67:  _iffalse_1($4) :
                      00311 ;;[ICODE] ../libsdcc/fsadd.c:69:        iTemp20 [k34 lr24:25 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsadd_fl1_1_22 [k8 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00312 ;;[ICODE] ../libsdcc/fsadd.c:69:        iTemp22 [k37 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp20 [k34 lr24:25 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
005D                  00313 _00108_DS_
                      00314 ;       .line   69; "../libsdcc/fsadd.c"        exp1 = EXP (fl1.l);
005D   5800           00315         MOVAR   (___fsadd_fl1_1_22 + 0)
005E   5600           00316         MOVRA   r0x100B
005F   5800           00317         MOVAR   (___fsadd_fl1_1_22 + 1)
0060   5600           00318         MOVRA   r0x100A
0061   5800           00319         MOVAR   (___fsadd_fl1_1_22 + 2)
0062   5600           00320         MOVRA   r0x1009
0063   5800           00321         MOVAR   (___fsadd_fl1_1_22 + 3)
0064   5600           00322         MOVRA   r0x1008
                      00323 ;;[ICODE] ../libsdcc/fsadd.c:69:        iTemp23 [k38 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] = iTemp22 [k37 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] >> 0x17 {const-unsigned-char literal}
0065   5000           00324         RLAR    r0x1009
0066   5000           00325         RLAR    r0x1008
0067   5600           00326         MOVRA   r0x100B
0068   5600           00327         MOVRA   r0x100F
0069   7600           00328         CLRR    r0x100E
006A   5200           00329         RLR     r0x100E
006B   7600           00330         CLRR    r0x100D
006C   7600           00331         CLRR    r0x100C
                      00332 ;;[ICODE] ../libsdcc/fsadd.c:69:        iTemp24 [k39 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = iTemp23 [k38 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] & 0xff {unsigned-long-int literal}
                      00333 ;;116   MOVAR   r0x100F
006D   7600           00334         CLRR    r0x100A
006E   7600           00335         CLRR    r0x1009
006F   7600           00336         CLRR    r0x1008
                      00337 ;;[ICODE] ../libsdcc/fsadd.c:69:        iTemp19 [k32 lr28:98 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ] = (int fixed)iTemp24 [k39 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0070   5800           00338         MOVAR   r0x100B
0071   5600           00339         MOVRA   r0x100F
0072   3C00           00340         MOVAI   0x00
0073   5600           00341         MOVRA   r0x100E
                      00342 ;;[ICODE] ../libsdcc/fsadd.c:70:        iTemp27 [k43 lr30:31 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsadd_fl2_1_22 [k12 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00343 ;;[ICODE] ../libsdcc/fsadd.c:70:        iTemp29 [k46 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp27 [k43 lr30:31 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00344 ;       .line   70; "../libsdcc/fsadd.c"        exp2 = EXP (fl2.l);
0074   5800           00345         MOVAR   (___fsadd_fl2_1_22 + 0)
0075   5600           00346         MOVRA   r0x100B
0076   5800           00347         MOVAR   (___fsadd_fl2_1_22 + 1)
0077   5600           00348         MOVRA   r0x100A
0078   5800           00349         MOVAR   (___fsadd_fl2_1_22 + 2)
0079   5600           00350         MOVRA   r0x1009
007A   5800           00351         MOVAR   (___fsadd_fl2_1_22 + 3)
007B   5600           00352         MOVRA   r0x1008
                      00353 ;;[ICODE] ../libsdcc/fsadd.c:70:        iTemp30 [k47 lr32:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1006 r0x1007 r0x100C r0x100D ] = iTemp29 [k46 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] >> 0x17 {const-unsigned-char literal}
007C   5000           00354         RLAR    r0x1009
007D   5000           00355         RLAR    r0x1008
007E   5600           00356         MOVRA   r0x100D
007F   7600           00357         CLRR    r0x100C
0080   5200           00358         RLR     r0x100C
0081   7600           00359         CLRR    r0x1014
0082   7600           00360         CLRR    r0x1015
                      00361 ;;[ICODE] ../libsdcc/fsadd.c:70:        iTemp31 [k48 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = iTemp30 [k47 lr32:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1006 r0x1007 r0x100C r0x100D ] & 0xff {unsigned-long-int literal}
0083   5800           00362         MOVAR   r0x100D
0084   5600           00363         MOVRA   r0x100D
0085   5600           00364         MOVRA   r0x100B
0086   7600           00365         CLRR    r0x100A
0087   7600           00366         CLRR    r0x1009
0088   7600           00367         CLRR    r0x1008
                      00368 ;;[ICODE] ../libsdcc/fsadd.c:70:        iTemp26 [k41 lr34:84 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp2_1_22}[r0x1006 r0x1007 ] = (int fixed)iTemp31 [k48 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00369 ;;115   MOVAR   r0x100B
0089   3C00           00370         MOVAI   0x00
008A   5600           00371         MOVRA   r0x100C
                      00372 ;;[ICODE] ../libsdcc/fsadd.c:72:        iTemp33 [k50 lr36:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x1000 r0x1001 ] = iTemp26 [k41 lr34:84 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp2_1_22}[r0x1006 r0x1007 ] + 0x19 {int literal}
                      00373 ;       .line   72; "../libsdcc/fsadd.c"        if (exp1 > exp2 + 25)
008B   3C19           00374         MOVAI   0x19
008C   7C00           00375         ADDAR   r0x100D
008D   5600           00376         MOVRA   r0x100B
008E   7600           00377         CLRR    r0x100A
008F   5200           00378         RLR     r0x100A
0090   5800           00379         MOVAR   r0x100C
0091   7E00           00380         ADDRA   r0x100A
                      00381 ;;[ICODE] ../libsdcc/fsadd.c:72:        iTemp34 [k51 lr37:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp19 [k32 lr28:98 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ] > iTemp33 [k50 lr36:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x1000 r0x1001 ]
0092   5800           00382         MOVAR   r0x100A
0093   3F80           00383         ADDAI   0x80
0094   5600           00384         MOVRA   r0x1016
0095   5800           00385         MOVAR   r0x100E
0096   3F80           00386         ADDAI   0x80
0097   4800           00387         RSUBAR  r0x1016
0098   E5B7           00388         JBSET   STATUS,2
0099   A000           00389         GOTO    _00165_DS_
009A   5800           00390         MOVAR   r0x100F
009B   4800           00391         RSUBAR  r0x100B
009C                  00392 _00165_DS_
009C   F1B7           00393         JBCLR   STATUS,0
009D   A000           00394         GOTO    _00110_DS_
                      00395 ;;genSkipc:3192: created from rifx:00CC608C
                      00396 ;;[ICODE] ../libsdcc/fsadd.c:72:        if iTemp34 [k51 lr37:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($6)
                      00397 ;;[ICODE] ../libsdcc/fsadd.c:73:        iTemp35 [k52 lr39:40 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsadd_fl1_1_22 [k8 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00398 ;;[ICODE] ../libsdcc/fsadd.c:73:        iTemp37 [k55 lr40:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x100C r0x100D ] = @[iTemp35 [k52 lr39:40 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00399 ;       .line   73; "../libsdcc/fsadd.c"        return (fl1.f);
009E   5800           00400         MOVAR   (___fsadd_fl1_1_22 + 0)
009F   5600           00401         MOVRA   r0x100B
00A0   5800           00402         MOVAR   (___fsadd_fl1_1_22 + 1)
00A1   5600           00403         MOVRA   r0x100A
00A2   5800           00404         MOVAR   (___fsadd_fl1_1_22 + 2)
00A3   5600           00405         MOVRA   r0x1014
00A4   5800           00406         MOVAR   (___fsadd_fl1_1_22 + 3)
00A5   5600           00407         MOVRA   r0x1015
                      00408 ;;[ICODE] ../libsdcc/fsadd.c:73:        ret iTemp37 [k55 lr40:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x100C r0x100D ]
00A6   5800           00409         MOVAR   r0x100B
00A7   5600           00410         MOVRA   STK02
00A8   5800           00411         MOVAR   r0x100A
00A9   5600           00412         MOVRA   STK01
00AA   5800           00413         MOVAR   r0x1014
00AB   5600           00414         MOVRA   STK00
00AC   5800           00415         MOVAR   r0x1015
00AD   A000           00416         GOTO    _00133_DS_
                      00417 ;;[ICODE] ../libsdcc/fsadd.c:73:  _iffalse_2($6) :
                      00418 ;;[ICODE] ../libsdcc/fsadd.c:74:        iTemp38 [k56 lr43:44 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x1000 r0x1001 ] = iTemp19 [k32 lr28:98 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ] + 0x19 {int literal}
00AE                  00419 _00110_DS_
                      00420 ;       .line   74; "../libsdcc/fsadd.c"        if (exp2 > exp1 + 25)
00AE   3C19           00421         MOVAI   0x19
00AF   7C00           00422         ADDAR   r0x100F
00B0   5600           00423         MOVRA   r0x100B
00B1   7600           00424         CLRR    r0x100A
00B2   5200           00425         RLR     r0x100A
00B3   5800           00426         MOVAR   r0x100E
00B4   7E00           00427         ADDRA   r0x100A
                      00428 ;;[ICODE] ../libsdcc/fsadd.c:74:        iTemp39 [k57 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp26 [k41 lr34:84 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp2_1_22}[r0x1006 r0x1007 ] > iTemp38 [k56 lr43:44 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x1000 r0x1001 ]
00B5   5800           00429         MOVAR   r0x100A
00B6   3F80           00430         ADDAI   0x80
00B7   5600           00431         MOVRA   r0x1016
00B8   5800           00432         MOVAR   r0x100C
00B9   3F80           00433         ADDAI   0x80
00BA   4800           00434         RSUBAR  r0x1016
00BB   E5B7           00435         JBSET   STATUS,2
00BC   A000           00436         GOTO    _00166_DS_
00BD   5800           00437         MOVAR   r0x100D
00BE   4800           00438         RSUBAR  r0x100B
00BF                  00439 _00166_DS_
00BF   F1B7           00440         JBCLR   STATUS,0
00C0   A000           00441         GOTO    _00112_DS_
                      00442 ;;genSkipc:3192: created from rifx:00CC608C
                      00443 ;;[ICODE] ../libsdcc/fsadd.c:74:        if iTemp39 [k57 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_3($8)
                      00444 ;;[ICODE] ../libsdcc/fsadd.c:75:        iTemp40 [k58 lr46:47 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsadd_fl2_1_22 [k12 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00445 ;;[ICODE] ../libsdcc/fsadd.c:75:        iTemp42 [k61 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x100C r0x100D ] = @[iTemp40 [k58 lr46:47 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00446 ;       .line   75; "../libsdcc/fsadd.c"        return (fl2.f);
00C1   5800           00447         MOVAR   (___fsadd_fl2_1_22 + 0)
00C2   5600           00448         MOVRA   r0x100B
00C3   5800           00449         MOVAR   (___fsadd_fl2_1_22 + 1)
00C4   5600           00450         MOVRA   r0x100A
00C5   5800           00451         MOVAR   (___fsadd_fl2_1_22 + 2)
00C6   5600           00452         MOVRA   r0x1014
00C7   5800           00453         MOVAR   (___fsadd_fl2_1_22 + 3)
00C8   5600           00454         MOVRA   r0x1015
                      00455 ;;[ICODE] ../libsdcc/fsadd.c:75:        ret iTemp42 [k61 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x100C r0x100D ]
00C9   5800           00456         MOVAR   r0x100B
00CA   5600           00457         MOVRA   STK02
00CB   5800           00458         MOVAR   r0x100A
00CC   5600           00459         MOVRA   STK01
00CD   5800           00460         MOVAR   r0x1014
00CE   5600           00461         MOVRA   STK00
00CF   5800           00462         MOVAR   r0x1015
00D0   A000           00463         GOTO    _00133_DS_
                      00464 ;;[ICODE] ../libsdcc/fsadd.c:75:  _iffalse_3($8) :
                      00465 ;;[ICODE] ../libsdcc/fsadd.c:77:        iTemp44 [k64 lr50:51 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsadd_fl1_1_22 [k8 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00466 ;;[ICODE] ../libsdcc/fsadd.c:77:        iTemp46 [k67 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x100C r0x100D ] = @[iTemp44 [k64 lr50:51 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
00D1                  00467 _00112_DS_
                      00468 ;       .line   77; "../libsdcc/fsadd.c"        mant1 = MANT (fl1.l);
00D1   5800           00469         MOVAR   (___fsadd_fl1_1_22 + 0)
00D2   5600           00470         MOVRA   r0x100B
00D3   5800           00471         MOVAR   (___fsadd_fl1_1_22 + 1)
00D4   5600           00472         MOVRA   r0x100A
00D5   5800           00473         MOVAR   (___fsadd_fl1_1_22 + 2)
00D6   5600           00474         MOVRA   r0x1014
00D7   5800           00475         MOVAR   (___fsadd_fl1_1_22 + 3)
00D8   5600           00476         MOVRA   r0x1015
                      00477 ;;[ICODE] ../libsdcc/fsadd.c:77:        iTemp47 [k68 lr52:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1001 r0x100C r0x100D ] = iTemp46 [k67 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x100C r0x100D ] & 0x7fffff {unsigned-long-int literal}
00D9   DE00           00478         BCLR    r0x1014,7
00DA   7600           00479         CLRR    r0x1015
                      00480 ;;[ICODE] ../libsdcc/fsadd.c:77:        iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] = iTemp47 [k68 lr52:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1001 r0x100C r0x100D ] | 0x800000 {unsigned-long-int literal}
00DB   CE00           00481         BSET    r0x1014,7
                      00482 ;;[ICODE] ../libsdcc/fsadd.c:78:        iTemp50 [k72 lr55:56 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsadd_fl2_1_22 [k12 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00483 ;;[ICODE] ../libsdcc/fsadd.c:78:        iTemp52 [k75 lr56:57 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100E r0x100F r0x1010 r0x1011 ] = @[iTemp50 [k72 lr55:56 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00484 ;       .line   78; "../libsdcc/fsadd.c"        mant2 = MANT (fl2.l);
00DC   5800           00485         MOVAR   (___fsadd_fl2_1_22 + 0)
00DD   5600           00486         MOVRA   r0x1016
00DE   5800           00487         MOVAR   (___fsadd_fl2_1_22 + 1)
00DF   5600           00488         MOVRA   r0x1017
00E0   5800           00489         MOVAR   (___fsadd_fl2_1_22 + 2)
00E1   5600           00490         MOVRA   r0x1018
00E2   5800           00491         MOVAR   (___fsadd_fl2_1_22 + 3)
00E3   5600           00492         MOVRA   r0x1019
                      00493 ;;[ICODE] ../libsdcc/fsadd.c:78:        iTemp53 [k76 lr57:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x100E r0x100F r0x1010 r0x1011 ] = iTemp52 [k75 lr56:57 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100E r0x100F r0x1010 r0x1011 ] & 0x7fffff {unsigned-long-int literal}
00E4   DE00           00494         BCLR    r0x1018,7
00E5   7600           00495         CLRR    r0x1019
                      00496 ;;[ICODE] ../libsdcc/fsadd.c:78:        iTemp49 [k70 lr58:86 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant2_1_22}[r0x100E r0x100F r0x1010 r0x1011 ] = iTemp53 [k76 lr57:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x100E r0x100F r0x1010 r0x1011 ] | 0x800000 {unsigned-long-int literal}
00E6   CE00           00497         BSET    r0x1018,7
                      00498 ;;[ICODE] ../libsdcc/fsadd.c:80:        iTemp55 [k78 lr60:61 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsadd_fl1_1_22 [k8 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00499 ;;[ICODE] ../libsdcc/fsadd.c:80:        iTemp57 [k81 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1012 r0x1013 r0x1014 r0x1015 ] = @[iTemp55 [k78 lr60:61 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00500 ;       .line   80; "../libsdcc/fsadd.c"        if (SIGN (fl1.l))
00E7   5800           00501         MOVAR   (___fsadd_fl1_1_22 + 0)
00E8   5600           00502         MOVRA   r0x101A
00E9   5800           00503         MOVAR   (___fsadd_fl1_1_22 + 1)
00EA   5600           00504         MOVRA   r0x101B
00EB   5800           00505         MOVAR   (___fsadd_fl1_1_22 + 2)
00EC   5600           00506         MOVRA   r0x101C
00ED   5800           00507         MOVAR   (___fsadd_fl1_1_22 + 3)
00EE   5600           00508         MOVRA   r0x101D
                      00509 ;;[ICODE] ../libsdcc/fsadd.c:80:        iTemp58 [k82 lr62:63 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1016 ] = gabit iTemp57 [k81 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1012 r0x1013 r0x1014 r0x1015 ]
00EF   5800           00510         MOVAR   r0x101D
00F0   3E80           00511         ANDAI   0x80
00F1   E5B7           00512         JBSET   STATUS,2
00F2   3C01           00513         MOVAI   0x01
00F3   5600           00514         MOVRA   r0x101E
                      00515 ;;[ICODE] ../libsdcc/fsadd.c:80:        if iTemp58 [k82 lr62:63 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1016 ] == 0 goto _iffalse_4($10)
00F4   3C00           00516         MOVAI   0x00
00F5   5C00           00517         ORAR    r0x101E
00F6   F5B7           00518         JBCLR   STATUS,2
00F7   A000           00519         GOTO    _00114_DS_
                      00520 ;;[ICODE] ../libsdcc/fsadd.c:81:        iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] = - iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ]
                      00521 ;       .line   81; "../libsdcc/fsadd.c"        mant1 = -mant1;
00F8   7200           00522         COMR    r0x100B
00F9   7200           00523         COMR    r0x100A
00FA   7200           00524         COMR    r0x1014
00FB   7200           00525         COMR    r0x1015
00FC   6600           00526         INCR    r0x100B
00FD   F5B7           00527         JBCLR   STATUS,2
00FE   6600           00528         INCR    r0x100A
00FF   F5B7           00529         JBCLR   STATUS,2
0100   6600           00530         INCR    r0x1014
0101   F5B7           00531         JBCLR   STATUS,2
0102   6600           00532         INCR    r0x1015
                      00533 ;;[ICODE] ../libsdcc/fsadd.c:81:  _iffalse_4($10) :
                      00534 ;;[ICODE] ../libsdcc/fsadd.c:82:        iTemp60 [k84 lr67:68 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsadd_fl2_1_22 [k12 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00535 ;;[ICODE] ../libsdcc/fsadd.c:82:        iTemp62 [k87 lr68:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1012 r0x1013 r0x1014 r0x1015 ] = @[iTemp60 [k84 lr67:68 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0103                  00536 _00114_DS_
                      00537 ;       .line   82; "../libsdcc/fsadd.c"        if (SIGN (fl2.l))
0103   5800           00538         MOVAR   (___fsadd_fl2_1_22 + 0)
0104   5600           00539         MOVRA   r0x101A
0105   5800           00540         MOVAR   (___fsadd_fl2_1_22 + 1)
0106   5600           00541         MOVRA   r0x101B
0107   5800           00542         MOVAR   (___fsadd_fl2_1_22 + 2)
0108   5600           00543         MOVRA   r0x101C
0109   5800           00544         MOVAR   (___fsadd_fl2_1_22 + 3)
010A   5600           00545         MOVRA   r0x101D
                      00546 ;;[ICODE] ../libsdcc/fsadd.c:82:        iTemp63 [k88 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1016 ] = gabit iTemp62 [k87 lr68:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1012 r0x1013 r0x1014 r0x1015 ]
010B   5800           00547         MOVAR   r0x101D
010C   3E80           00548         ANDAI   0x80
010D   E5B7           00549         JBSET   STATUS,2
010E   3C01           00550         MOVAI   0x01
010F   5600           00551         MOVRA   r0x101E
                      00552 ;;[ICODE] ../libsdcc/fsadd.c:82:        if iTemp63 [k88 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1016 ] == 0 goto _iffalse_5($12)
0110   3C00           00553         MOVAI   0x00
0111   5C00           00554         ORAR    r0x101E
0112   F5B7           00555         JBCLR   STATUS,2
0113   A000           00556         GOTO    _00116_DS_
                      00557 ;;[ICODE] ../libsdcc/fsadd.c:83:        iTemp49 [k70 lr58:86 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant2_1_22}[r0x100E r0x100F r0x1010 r0x1011 ] = - iTemp49 [k70 lr58:86 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant2_1_22}[r0x100E r0x100F r0x1010 r0x1011 ]
                      00558 ;       .line   83; "../libsdcc/fsadd.c"        mant2 = -mant2;
0114   7200           00559         COMR    r0x1016
0115   7200           00560         COMR    r0x1017
0116   7200           00561         COMR    r0x1018
0117   7200           00562         COMR    r0x1019
0118   6600           00563         INCR    r0x1016
0119   F5B7           00564         JBCLR   STATUS,2
011A   6600           00565         INCR    r0x1017
011B   F5B7           00566         JBCLR   STATUS,2
011C   6600           00567         INCR    r0x1018
011D   F5B7           00568         JBCLR   STATUS,2
011E   6600           00569         INCR    r0x1019
                      00570 ;;[ICODE] ../libsdcc/fsadd.c:83:  _iffalse_5($12) :
                      00571 ;;[ICODE] ../libsdcc/fsadd.c:85:        iTemp65 [k90 lr74:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp19 [k32 lr28:98 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ] > iTemp26 [k41 lr34:84 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp2_1_22}[r0x1006 r0x1007 ]
011F                  00572 _00116_DS_
                      00573 ;       .line   85; "../libsdcc/fsadd.c"        if (exp1 > exp2)
011F   5800           00574         MOVAR   r0x100C
0120   3F80           00575         ADDAI   0x80
0121   5600           00576         MOVRA   r0x101F
0122   5800           00577         MOVAR   r0x100E
0123   3F80           00578         ADDAI   0x80
0124   4800           00579         RSUBAR  r0x101F
0125   E5B7           00580         JBSET   STATUS,2
0126   A000           00581         GOTO    _00167_DS_
0127   5800           00582         MOVAR   r0x100F
0128   4800           00583         RSUBAR  r0x100D
0129                  00584 _00167_DS_
0129   F1B7           00585         JBCLR   STATUS,0
012A   A000           00586         GOTO    _00118_DS_
                      00587 ;;genSkipc:3192: created from rifx:00CC608C
                      00588 ;;[ICODE] ../libsdcc/fsadd.c:85:        if iTemp65 [k90 lr74:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_6($14)
                      00589 ;;[ICODE] ../libsdcc/fsadd.c:87:        iTemp66 [k91 lr76:77 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x1012 r0x1013 ] = iTemp19 [k32 lr28:98 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ] - iTemp26 [k41 lr34:84 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp2_1_22}[r0x1006 r0x1007 ]
                      00590 ;       .line   87; "../libsdcc/fsadd.c"        mant2 >>= exp1 - exp2;
012B   5800           00591         MOVAR   r0x100D
012C   4800           00592         RSUBAR  r0x100F
012D   5600           00593         MOVRA   r0x101A
012E   5800           00594         MOVAR   r0x100C
012F   E1B7           00595         JBSET   STATUS,0
0130   6400           00596         INCAR   r0x100C
0131   4800           00597         RSUBAR  r0x100E
0132   5600           00598         MOVRA   r0x101B
                      00599 ;;[ICODE] ../libsdcc/fsadd.c:87:        iTemp49 [k70 lr58:86 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant2_1_22}[r0x100E r0x100F r0x1010 r0x1011 ] = iTemp49 [k70 lr58:86 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant2_1_22}[r0x100E r0x100F r0x1010 r0x1011 ] >> iTemp66 [k91 lr76:77 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x1012 r0x1013 ]
0133   5800           00600         MOVAR   r0x101A
0134   FE00           00601         JBCLR   r0x101A,7
0135   A000           00602         GOTO    _00170_DS_
0136   3A00           00603         ISUBAI  0x00
0137   F5B7           00604         JBCLR   STATUS,2
0138   A000           00605         GOTO    _00169_DS_
0139                  00606 _00168_DS_
0139   D1B7           00607         BCLR    STATUS,0
013A   FE00           00608         JBCLR   r0x1019,7
013B   C1B7           00609         BSET    STATUS,0
013C   4E00           00610         RRR     r0x1019
013D   4E00           00611         RRR     r0x1018
013E   4E00           00612         RRR     r0x1017
013F   4E00           00613         RRR     r0x1016
0140   3F01           00614         ADDAI   0x01
0141   E1B7           00615         JBSET   STATUS,0
0142   A000           00616         GOTO    _00168_DS_
0143   A000           00617         GOTO    _00169_DS_
0144                  00618 _00170_DS_
0144   D1B7           00619         BCLR    STATUS,0
0145                  00620 _00171_DS_
0145   5200           00621         RLR     r0x1016
0146   5200           00622         RLR     r0x1017
0147   5200           00623         RLR     r0x1018
0148   5200           00624         RLR     r0x1019
0149   3F01           00625         ADDAI   0x01
014A   E1B7           00626         JBSET   STATUS,0
014B   A000           00627         GOTO    _00171_DS_
                      00628 ;;[ICODE] ../libsdcc/fsadd.c:87:         goto _ifend_6($15)
014C                  00629 _00169_DS_
014C   A000           00630         GOTO    _00119_DS_
                      00631 ;;[ICODE] ../libsdcc/fsadd.c:87:  _iffalse_6($14) :
                      00632 ;;[ICODE] ../libsdcc/fsadd.c:91:        iTemp68 [k93 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x1012 r0x1013 ] = iTemp26 [k41 lr34:84 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp2_1_22}[r0x1006 r0x1007 ] - iTemp19 [k32 lr28:98 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ]
014D                  00633 _00118_DS_
                      00634 ;       .line   91; "../libsdcc/fsadd.c"        mant1 >>= exp2 - exp1;
014D   5800           00635         MOVAR   r0x100F
014E   4800           00636         RSUBAR  r0x100D
014F   5600           00637         MOVRA   r0x101A
0150   5800           00638         MOVAR   r0x100E
0151   E1B7           00639         JBSET   STATUS,0
0152   6400           00640         INCAR   r0x100E
0153   4800           00641         RSUBAR  r0x100C
0154   5600           00642         MOVRA   r0x101B
                      00643 ;;[ICODE] ../libsdcc/fsadd.c:91:        iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] = iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] >> iTemp68 [k93 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x1012 r0x1013 ]
0155   5800           00644         MOVAR   r0x101A
0156   FE00           00645         JBCLR   r0x101A,7
0157   A000           00646         GOTO    _00174_DS_
0158   3A00           00647         ISUBAI  0x00
0159   F5B7           00648         JBCLR   STATUS,2
015A   A000           00649         GOTO    _00173_DS_
015B                  00650 _00172_DS_
015B   D1B7           00651         BCLR    STATUS,0
015C   FE00           00652         JBCLR   r0x1015,7
015D   C1B7           00653         BSET    STATUS,0
015E   4E00           00654         RRR     r0x1015
015F   4E00           00655         RRR     r0x1014
0160   4E00           00656         RRR     r0x100A
0161   4E00           00657         RRR     r0x100B
0162   3F01           00658         ADDAI   0x01
0163   E1B7           00659         JBSET   STATUS,0
0164   A000           00660         GOTO    _00172_DS_
0165   A000           00661         GOTO    _00173_DS_
0166                  00662 _00174_DS_
0166   D1B7           00663         BCLR    STATUS,0
0167                  00664 _00175_DS_
0167   5200           00665         RLR     r0x100B
0168   5200           00666         RLR     r0x100A
0169   5200           00667         RLR     r0x1014
016A   5200           00668         RLR     r0x1015
016B   3F01           00669         ADDAI   0x01
016C   E1B7           00670         JBSET   STATUS,0
016D   A000           00671         GOTO    _00175_DS_
                      00672 ;;[ICODE] ../libsdcc/fsadd.c:92:        iTemp19 [k32 lr28:98 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ] := iTemp26 [k41 lr34:84 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp2_1_22}[r0x1006 r0x1007 ]
016E                  00673 _00173_DS_
                      00674 ;       .line   92; "../libsdcc/fsadd.c"        exp1 = exp2;
016E   5800           00675         MOVAR   r0x100D
016F   5600           00676         MOVRA   r0x100F
0170   5800           00677         MOVAR   r0x100C
0171   5600           00678         MOVRA   r0x100E
                      00679 ;;[ICODE] ../libsdcc/fsadd.c:92:  _ifend_6($15) :
                      00680 ;;[ICODE] ../libsdcc/fsadd.c:94:        iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] = iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] + iTemp49 [k70 lr58:86 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant2_1_22}[r0x100E r0x100F r0x1010 r0x1011 ]
0172                  00681 _00119_DS_
                      00682 ;       .line   94; "../libsdcc/fsadd.c"        mant1 += mant2;
0172   5800           00683         MOVAR   r0x1016
0173   7E00           00684         ADDRA   r0x100B
0174   5800           00685         MOVAR   r0x1017
0175   F1B7           00686         JBCLR   STATUS,0
0176   6000           00687         JZAR    r0x1017
0177   7E00           00688         ADDRA   r0x100A
0178   5800           00689         MOVAR   r0x1018
0179   F1B7           00690         JBCLR   STATUS,0
017A   6000           00691         JZAR    r0x1018
017B   7E00           00692         ADDRA   r0x1014
017C   5800           00693         MOVAR   r0x1019
017D   F1B7           00694         JBCLR   STATUS,0
017E   6000           00695         JZAR    r0x1019
017F   7E00           00696         ADDRA   r0x1015
                      00697 ;;[ICODE] ../libsdcc/fsadd.c:96:        iTemp71 [k96 lr88:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] < 0x0 {long-int literal}
                      00698 ;;signed compare: left < lit(0x0=0), size=4, mask=ffffffff
                      00699 ;       .line   96; "../libsdcc/fsadd.c"        if (mant1 < 0)
0180   C1B7           00700         BSET    STATUS,0
0181   EE00           00701         JBSET   r0x1015,7
0182   D1B7           00702         BCLR    STATUS,0
0183   E1B7           00703         JBSET   STATUS,0
0184   A000           00704         GOTO    _00123_DS_
                      00705 ;;genSkipc:3192: created from rifx:00CC608C
                      00706 ;;[ICODE] ../libsdcc/fsadd.c:96:        if iTemp71 [k96 lr88:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_8($19)
                      00707 ;;[ICODE] ../libsdcc/fsadd.c:98:        iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] = - iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ]
                      00708 ;       .line   98; "../libsdcc/fsadd.c"        mant1 = -mant1;
0185   7200           00709         COMR    r0x100B
0186   7200           00710         COMR    r0x100A
0187   7200           00711         COMR    r0x1014
0188   7200           00712         COMR    r0x1015
0189   6600           00713         INCR    r0x100B
018A   F5B7           00714         JBCLR   STATUS,2
018B   6600           00715         INCR    r0x100A
018C   F5B7           00716         JBCLR   STATUS,2
018D   6600           00717         INCR    r0x1014
018E   F5B7           00718         JBCLR   STATUS,2
018F   6600           00719         INCR    r0x1015
                      00720 ;;[ICODE] ../libsdcc/fsadd.c:99:        iTemp2 [k6 lr5:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsadd_sign_1_22}[r0x1008 r0x1009 r0x100A r0x100B ] := 0x80000000 {unsigned-long-int literal}
                      00721 ;       .line   99; "../libsdcc/fsadd.c"        sign = SIGNBIT;
0190   7600           00722         CLRR    r0x1010
0191   7600           00723         CLRR    r0x1011
0192   7600           00724         CLRR    r0x1012
0193   3C80           00725         MOVAI   0x80
0194   5600           00726         MOVRA   r0x1013
                      00727 ;;[ICODE] ../libsdcc/fsadd.c:99:         goto preHeaderLbl0($41)
0195   A000           00728         GOTO    _00125_DS_
                      00729 ;;[ICODE] ../libsdcc/fsadd.c:99:  _iffalse_8($19) :
                      00730 ;;[ICODE] ../libsdcc/fsadd.c:101:       if iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] != 0 goto preHeaderLbl0($41)
0196                  00731 _00123_DS_
                      00732 ;       .line   101; "../libsdcc/fsadd.c"       else if (!mant1)
0196   5800           00733         MOVAR   r0x100B
0197   5C00           00734         ORAR    r0x100A
0198   5C00           00735         ORAR    r0x1014
0199   5C00           00736         ORAR    r0x1015
019A   E5B7           00737         JBSET   STATUS,2
019B   A000           00738         GOTO    _00125_DS_
                      00739 ;;[ICODE] ../libsdcc/fsadd.c:102:       ret 0 {float literal}
                      00740 ;       .line   102; "../libsdcc/fsadd.c"       return (0);
019C   3C00           00741         MOVAI   0x00
019D   5600           00742         MOVRA   STK02
019E   3C00           00743         MOVAI   0x00
019F   5600           00744         MOVRA   STK01
01A0   3C00           00745         MOVAI   0x00
01A1   5600           00746         MOVRA   STK00
01A2   3C00           00747         MOVAI   0x00
01A3   A000           00748         GOTO    _00133_DS_
                      00749 ;;[ICODE] ../libsdcc/fsadd.c:105:  preHeaderLbl0($41) :
                      00750 ;;[ICODE] ../libsdcc/fsadd.c:105:       iTemp77 [k102 lr98:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x1004 r0x1005 ] := iTemp19 [k32 lr28:98 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ]
                      00751 ;;[ICODE] ../libsdcc/fsadd.c:105:  _whilecontinue_0($21) :
                      00752 ;;[ICODE] ../libsdcc/fsadd.c:105:       iTemp73 [k98 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1006 r0x1007 r0x100E r0x100F ] = (unsigned-long-int register)iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ]
01A4                  00753 _00125_DS_
                      00754 ;       .line   105; "../libsdcc/fsadd.c"       while (mant1<HIDDEN) {
01A4   5800           00755         MOVAR   r0x100B
01A5   5600           00756         MOVRA   r0x100D
01A6   5800           00757         MOVAR   r0x100A
01A7   5600           00758         MOVRA   r0x100C
                      00759 ;;112   MOVAR   r0x1014
01A8   5800           00760         MOVAR   r0x1015
01A9   5600           00761         MOVRA   r0x1017
                      00762 ;;[ICODE] ../libsdcc/fsadd.c:105:       iTemp74 [k99 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp73 [k98 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1006 r0x1007 r0x100E r0x100F ] & 0xff800000 {const-long-int literal}
                      00763 ;;111   MOVAR   r0x1016
01AA   5800           00764         MOVAR   r0x1014
01AB   5600           00765         MOVRA   r0x1016
01AC   FE00           00766         JBCLR   r0x1016,7
01AD   A000           00767         GOTO    _00130_DS_
01AE   5800           00768         MOVAR   r0x1017
01AF   3EFF           00769         ANDAI   0xff
01B0   E5B7           00770         JBSET   STATUS,2
01B1   A000           00771         GOTO    _00130_DS_
                      00772 ;;[ICODE] ../libsdcc/fsadd.c:105:       if iTemp74 [k99 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl1($44)
                      00773 ;;[ICODE] ../libsdcc/fsadd.c:106:       iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] = iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] << 0x1 {const-unsigned-char literal}
                      00774 ;       .line   106; "../libsdcc/fsadd.c"       mant1 <<= 1;
01B2   D1B7           00775         BCLR    STATUS,0
01B3   5200           00776         RLR     r0x100B
01B4   5200           00777         RLR     r0x100A
01B5   5200           00778         RLR     r0x1014
01B6   5200           00779         RLR     r0x1015
                      00780 ;;[ICODE] ../libsdcc/fsadd.c:107:       iTemp77 [k102 lr98:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x1004 r0x1005 ] = iTemp77 [k102 lr98:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x1004 r0x1005 ] - 0x1 {const-unsigned-char literal}
                      00781 ;       .line   107; "../libsdcc/fsadd.c"       exp1--;
01B7   3CFF           00782         MOVAI   0xff
01B8   7E00           00783         ADDRA   r0x100F
01B9   E1B7           00784         JBSET   STATUS,0
01BA   6E00           00785         DECR    r0x100E
                      00786 ;;[ICODE] ../libsdcc/fsadd.c:107:        goto _whilecontinue_0($21)
01BB   A000           00787         GOTO    _00125_DS_
                      00788 ;;[ICODE] ../libsdcc/fsadd.c:111:  preHeaderLbl1($44) :
                      00789 ;;[ICODE] ../libsdcc/fsadd.c:111:       iTemp84 [k109 lr109:128 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ] := iTemp77 [k102 lr98:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x1004 r0x1005 ]
                      00790 ;;[ICODE] ../libsdcc/fsadd.c:111:  _whilecontinue_1($26) :
                      00791 ;;[ICODE] ../libsdcc/fsadd.c:111:       iTemp78 [k103 lr112:125 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1006 r0x1007 r0x100E r0x100F ] = (unsigned-long-int register)iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ]
01BC                  00792 _00130_DS_
                      00793 ;       .line   111; "../libsdcc/fsadd.c"       while (mant1 & 0xff000000) {
01BC   5800           00794         MOVAR   r0x100B
01BD   5600           00795         MOVRA   r0x100D
01BE   5800           00796         MOVAR   r0x100A
01BF   5600           00797         MOVRA   r0x100C
01C0   5800           00798         MOVAR   r0x1014
01C1   5600           00799         MOVRA   r0x1016
                      00800 ;;114   MOVAR   r0x1015
                      00801 ;;[ICODE] ../libsdcc/fsadd.c:111:       iTemp79 [k104 lr113:114 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} = iTemp78 [k103 lr112:125 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1006 r0x1007 r0x100E r0x100F ] & 0xff000000 {const-unsigned-long-int literal}
                      00802 ;;113   MOVAR   r0x1017
01C2   5800           00803         MOVAR   r0x1015
01C3   5600           00804         MOVRA   r0x1017
01C4   3EFF           00805         ANDAI   0xff
01C5   F5B7           00806         JBCLR   STATUS,2
01C6   A000           00807         GOTO    _00132_DS_
                      00808 ;;[ICODE] ../libsdcc/fsadd.c:111:       if iTemp79 [k104 lr113:114 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} == 0 goto _whilebreak_1($28)
                      00809 ;;[ICODE] ../libsdcc/fsadd.c:112:       iTemp80 [k105 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int fixed} = iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] & 0x1 {long-int literal}
                      00810 ;       .line   112; "../libsdcc/fsadd.c"       if (mant1&1)
01C7   E000           00811         JBSET   r0x100B,0
01C8   A000           00812         GOTO    _00129_DS_
                      00813 ;;[ICODE] ../libsdcc/fsadd.c:112:       if iTemp80 [k105 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int fixed} == 0 goto _iffalse_9($25)
                      00814 ;;[ICODE] ../libsdcc/fsadd.c:113:       iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] = iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] + 0x2 {long-int literal}
                      00815 ;       .line   113; "../libsdcc/fsadd.c"       mant1 += 2;
01C9   3C02           00816         MOVAI   0x02
01CA   7E00           00817         ADDRA   r0x100B
01CB   F1B7           00818         JBCLR   STATUS,0
01CC   6600           00819         INCR    r0x100A
01CD   F5B7           00820         JBCLR   STATUS,2
01CE   6600           00821         INCR    r0x1014
01CF   F5B7           00822         JBCLR   STATUS,2
01D0   6600           00823         INCR    r0x1015
                      00824 ;;[ICODE] ../libsdcc/fsadd.c:113:  _iffalse_9($25) :
                      00825 ;;[ICODE] ../libsdcc/fsadd.c:114:       iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] = iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] >> 0x1 {const-unsigned-char literal}
                      00826 ;;shiftRight_Left2ResultLit:5213: shCount=1, size=4, sign=1, same=1, offr=0
01D1                  00827 _00129_DS_
                      00828 ;       .line   114; "../libsdcc/fsadd.c"       mant1 >>= 1 ;
01D1   D1B7           00829         BCLR    STATUS,0
01D2   FE00           00830         JBCLR   r0x1015,7
01D3   C1B7           00831         BSET    STATUS,0
01D4   4E00           00832         RRR     r0x1015
01D5   4E00           00833         RRR     r0x1014
01D6   4E00           00834         RRR     r0x100A
01D7   4E00           00835         RRR     r0x100B
                      00836 ;;[ICODE] ../libsdcc/fsadd.c:115:       iTemp84 [k109 lr109:128 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ] = iTemp84 [k109 lr109:128 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ] + 0x1 {const-unsigned-char literal}
                      00837 ;       .line   115; "../libsdcc/fsadd.c"       exp1++;
01D8   6600           00838         INCR    r0x100F
01D9   F5B7           00839         JBCLR   STATUS,2
01DA   6600           00840         INCR    r0x100E
                      00841 ;;[ICODE] ../libsdcc/fsadd.c:115:        goto _whilecontinue_1($26)
01DB   A000           00842         GOTO    _00130_DS_
                      00843 ;;[ICODE] ../libsdcc/fsadd.c:115:  _whilebreak_1($28) :
                      00844 ;;[ICODE] ../libsdcc/fsadd.c:119:       iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ] = iTemp78 [k103 lr112:125 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1006 r0x1007 r0x100E r0x100F ] & 0xff7fffff {unsigned-long-int literal}
01DC                  00845 _00132_DS_
                      00846 ;       .line   119; "../libsdcc/fsadd.c"       mant1 &= ~HIDDEN;
01DC   5800           00847         MOVAR   r0x100D
01DD   5600           00848         MOVRA   r0x100B
01DE   5800           00849         MOVAR   r0x100C
01DF   5600           00850         MOVRA   r0x100A
01E0   3C7F           00851         MOVAI   0x7f
01E1   7800           00852         ANDAR   r0x1016
01E2   5600           00853         MOVRA   r0x1014
01E3   5800           00854         MOVAR   r0x1017
01E4   5600           00855         MOVRA   r0x1015
                      00856 ;;[ICODE] ../libsdcc/fsadd.c:122:       iTemp87 [k112 lr127:133 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsadd_fl1_1_22 [k8 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00857 ;;[ICODE] ../libsdcc/fsadd.c:122:       iTemp89 [k115 lr128:129 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1006 r0x1007 r0x100E r0x100F ] = (unsigned-long-int fixed)iTemp84 [k109 lr109:128 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsadd_exp1_1_22}[r0x1004 r0x1005 ]
                      00858 ;       .line   122; "../libsdcc/fsadd.c"       fl1.l = PACK (sign, (unsigned long) exp1, mant1);
01E5   5800           00859         MOVAR   r0x100F
01E6   5600           00860         MOVRA   r0x100D
01E7   5800           00861         MOVAR   r0x100E
01E8   5600           00862         MOVRA   r0x100C
01E9   3C00           00863         MOVAI   0x00
01EA   FE00           00864         JBCLR   r0x100C,7
01EB   3CFF           00865         MOVAI   0xff
01EC   5600           00866         MOVRA   r0x1017
01ED   5600           00867         MOVRA   r0x1016
                      00868 ;;[ICODE] ../libsdcc/fsadd.c:122:       iTemp90 [k116 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1004 r0x1005 r0x1010 r0x1011 ] = iTemp89 [k115 lr128:129 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1006 r0x1007 r0x100E r0x100F ] << 0x17 {const-unsigned-char literal}
01EE   4C00           00869         RRAR    r0x100C
01EF   4C00           00870         RRAR    r0x100D
01F0   5600           00871         MOVRA   r0x1019
01F1   7600           00872         CLRR    r0x1018
01F2   4E00           00873         RRR     r0x1018
01F3   7600           00874         CLRR    r0x100E
01F4   7600           00875         CLRR    r0x100F
                      00876 ;;[ICODE] ../libsdcc/fsadd.c:122:       iTemp91 [k117 lr130:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1008 r0x1009 r0x100A r0x100B ] = iTemp2 [k6 lr5:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsadd_sign_1_22}[r0x1008 r0x1009 r0x100A r0x100B ] | iTemp90 [k116 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1004 r0x1005 r0x1010 r0x1011 ]
01F5   3C00           00877         MOVAI   0x00
01F6   5E00           00878         ORRA    r0x1010
01F7   3C00           00879         MOVAI   0x00
01F8   5E00           00880         ORRA    r0x1011
01F9   5800           00881         MOVAR   r0x1018
01FA   5E00           00882         ORRA    r0x1012
01FB   5800           00883         MOVAR   r0x1019
01FC   5E00           00884         ORRA    r0x1013
                      00885 ;;[ICODE] ../libsdcc/fsadd.c:122:       iTemp92 [k118 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] = (unsigned-long-int fixed)iTemp43 [k62 lr53:131 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ ___fsadd_mant1_1_22}[r0x1000 r0x1001 r0x100C r0x100D ]
                      00886 ;;102   MOVAR   r0x100B
                      00887 ;;104   MOVAR   r0x100A
                      00888 ;;106   MOVAR   r0x1014
                      00889 ;;108   MOVAR   r0x1015
                      00890 ;;[ICODE] ../libsdcc/fsadd.c:122:       iTemp93 [k119 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x100C r0x100D ] = iTemp91 [k117 lr130:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1008 r0x1009 r0x100A r0x100B ] | iTemp92 [k118 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ]
                      00891 ;;101   MOVAR   r0x100F
01FD   5800           00892         MOVAR   r0x100B
01FE   5600           00893         MOVRA   r0x100F
01FF   5C00           00894         ORAR    r0x1010
0200   5600           00895         MOVRA   (___fsadd_fl1_1_22 + 0)
0201   5600           00896         MOVRA   r0x100B
                      00897 ;;103   MOVAR   r0x100E
0202   5800           00898         MOVAR   r0x100A
0203   5600           00899         MOVRA   r0x100E
0204   5C00           00900         ORAR    r0x1011
0205   5600           00901         MOVRA   (___fsadd_fl1_1_22 + 1)
0206   5600           00902         MOVRA   r0x100A
                      00903 ;;105   MOVAR   r0x100D
0207   5800           00904         MOVAR   r0x1014
0208   5600           00905         MOVRA   r0x100D
0209   5C00           00906         ORAR    r0x1012
020A   5600           00907         MOVRA   (___fsadd_fl1_1_22 + 2)
020B   5600           00908         MOVRA   r0x1014
                      00909 ;;107   MOVAR   r0x100C
020C   5800           00910         MOVAR   r0x1015
020D   5600           00911         MOVRA   r0x100C
020E   5C00           00912         ORAR    r0x1013
020F   5600           00913         MOVRA   (___fsadd_fl1_1_22 + 3)
0210   5600           00914         MOVRA   r0x1015
                      00915 ;;[ICODE] ../libsdcc/fsadd.c:122:       *(iTemp87 [k112 lr127:133 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := iTemp93 [k119 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x100C r0x100D ]
                      00916 ;;gen.c:6371: size=3/4, offset=0, AOP_TYPE(res)=8
                      00917 ;;99    MOVAR   r0x100B
                      00918 ;;gen.c:6371: size=2/4, offset=1, AOP_TYPE(res)=8
                      00919 ;;100   MOVAR   r0x100A
                      00920 ;;gen.c:6371: size=1/4, offset=2, AOP_TYPE(res)=8
                      00921 ;;109   MOVAR   r0x1014
                      00922 ;;gen.c:6371: size=0/4, offset=3, AOP_TYPE(res)=8
                      00923 ;;110   MOVAR   r0x1015
                      00924 ;;[ICODE] ../libsdcc/fsadd.c:124:       iTemp94 [k120 lr134:135 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsadd_fl1_1_22 [k8 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00925 ;;[ICODE] ../libsdcc/fsadd.c:124:       iTemp96 [k123 lr135:136 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1004 r0x1005 ] = @[iTemp94 [k120 lr134:135 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00926 ;       .line   124; "../libsdcc/fsadd.c"       return (fl1.f);
0211   5800           00927         MOVAR   (___fsadd_fl1_1_22 + 0)
0212   5600           00928         MOVRA   r0x100B
0213   5800           00929         MOVAR   (___fsadd_fl1_1_22 + 1)
0214   5600           00930         MOVRA   r0x100A
0215   5800           00931         MOVAR   (___fsadd_fl1_1_22 + 2)
0216   5600           00932         MOVRA   r0x100F
0217   5800           00933         MOVAR   (___fsadd_fl1_1_22 + 3)
0218   5600           00934         MOVRA   r0x100E
                      00935 ;;[ICODE] ../libsdcc/fsadd.c:124:       ret iTemp96 [k123 lr135:136 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1004 r0x1005 ]
0219   5800           00936         MOVAR   r0x100B
021A   5600           00937         MOVRA   STK02
021B   5800           00938         MOVAR   r0x100A
021C   5600           00939         MOVRA   STK01
021D   5800           00940         MOVAR   r0x100F
021E   5600           00941         MOVRA   STK00
021F   5800           00942         MOVAR   r0x100E
                      00943 ;;[ICODE] ../libsdcc/fsadd.c:124:  _return($29) :
                      00944 ;;[ICODE] ../libsdcc/fsadd.c:124:       eproc ___fsadd [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0220                  00945 _00133_DS_
0220   000C           00946         RETURN  
                      00947 ; exit point of ___fsadd
                      00948 
                      00949 
                      00950 ;       code size estimation:
                      00951 ;         545+    0 =   545 instructions ( 1090 byte)
                      00952 
                      00953         end
gpasm-2.0.0_beta2 (Aug 27 2017)fsadd.asm          2017-9-12  18:09:51          PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

ADCR0                             000001EC
ADCR1                             000001ED
ADEOC                             00000001
ADIE                              00000006
ADIF                              00000006
ADIOS0                            00000000
ADIOS1                            00000001
ADIOS3                            00000003
ADIOS4                            00000004
ADIOS5                            00000005
ADIOS7                            00000007
ADOIS2                            00000002
ADOIS6                            00000006
ADON                              00000000
ADRH                              000001EE
ADRL                              000001EF
BUZ0OE                            00000005
BUZ1OE                            00000005
C                                 00000000
CLKS                              00000002
DC                                00000001
FSR                               000001B4
FSR0                              000001B4
FSR1                              000001B5
GIE                               00000007
HAAS                              00000006
HBB                               00000005
HCF                               00000007
HEN                               00000001
HFEN                              00000000
HIBYTE                            000001B3
HTX                               00000004
I2CADDR                           000001F1
I2CCR                             000001F0
I2CDATA                           000001F2
I2CIE                             00000005
I2CIF                             00000005
INDF                              000001B0
INDF0                             000001B0
INDF1                             000001B1
INDF2                             000001B2
INDF3                             000001B9
INT0IE                            00000002
INT0IF                            00000002
INT1IE                            00000003
INT1IF                            00000003
INTE                              000001BA
INTF                              000001BB
IOP0                              000001C0
IOP1                              000001C4
IOP2                              000001C8
IOP3                              000001CC
LFEN                              00000001
MCR                               000001B8
OEP0                              000001C1
OEP1                              000001C5
OEP2                              000001C9
OEP3                              000001CD
OSCM                              000001BC
P00                               00000000
P00OE                             00000000
P00PU                             00000000
P01                               00000001
P01OE                             00000001
P01PU                             00000001
P02                               00000002
P02OE                             00000002
P02PU                             00000002
P03                               00000003
P03OE                             00000003
P03PU                             00000003
P04                               00000004
P04OE                             00000004
P04PU                             00000004
P05                               00000005
P05OE                             00000005
P05PU                             00000005
P06                               00000006
P06OE                             00000006
P07                               00000007
P07OE                             00000007
P10                               00000000
P10OE                             00000000
P10PU                             00000000
P11                               00000001
P11OE                             00000001
P11PU                             00000001
P12                               00000002
P12OE                             00000002
P12PU                             00000002
P13                               00000003
P13OE                             00000003
P13PU                             00000003
P14                               00000004
P14OE                             00000004
P14PU                             00000004
P15                               00000005
P15OE                             00000005
P15PU                             00000005
P16                               00000006
P16OE                             00000006
P16PU                             00000006
P17                               00000007
P17OE                             00000007
P17PU                             00000007
P20                               00000000
P20OE                             00000000
P20PU                             00000000
P21                               00000001
P21OE                             00000001
P21PU                             00000001
P22                               00000002
P22OE                             00000002
P22PU                             00000002
P23                               00000003
P23OE                             00000003
P23PU                             00000003
P24                               00000004
P24OE                             00000004
P24PU                             00000004
P25                               00000005
P25OE                             00000005
P25PU                             00000005
P26                               00000006
P26OE                             00000006
P26PU                             00000006
P27                               00000007
P27OE                             00000007
P27PU                             00000007
P30                               00000000
P30OE                             00000000
P30PU                             00000000
P31                               00000001
P31OE                             00000001
P31PU                             00000001
PCL                               000001B6
PD                                00000004
PSAVE                             00000000
PUP0                              000001C2
PUP1                              000001C6
PUP2                              000001CA
PUP3                              000001CE
PWM0OE                            00000006
PWM1OE                            00000006
RXAK                              00000000
SRW                               00000002
SSAVE                             00000000
STATUS                            000001B7
STBH                              00000004
STBL                              00000005
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
STK07                             00000000
STK08                             00000000
STK09                             00000000
STK10                             00000000
STK11                             00000000
STK12                             00000000
T0CNT                             000001D1
T0CR                              000001D0
T0DATA                            000001D3
T0IE                              00000000
T0IF                              00000000
T0LOAD                            000001D2
T1CNT                             000001D5
T1CR                              000001D4
T1DATA                            000001D7
T1IE                              00000001
T1IF                              00000001
T1LOAD                            000001D6
T2CNTH                            000001D9
T2CNTL                            000001DA
T2CR                              000001D8
T2IE                              00000004
T2IF                              00000004
T2LOADH                           000001DB
T2LOADL                           000001DC
T2MOD                             00000005
TC0EN                             00000007
TC1EN                             00000007
TC2EN                             00000007
TK0CLR                            00000003
TK0CNTH                           000001E2
TK0CNTL                           000001E3
TK0CRH                            000001E0
TK0CRL                            000001E1
TK0IE                             00000006
TK0IF                             00000007
TK0JE                             00000005
TK0RCE                            00000004
TK1CLR                            00000003
TK1CNTH                           000001E6
TK1CNTL                           000001E7
TK1CRH                            000001E4
TK1CRL                            000001E5
TK1IE                             00000006
TK1IF                             00000007
TK1JE                             00000005
TK1RCE                            00000004
TK2CLR                            00000003
TK2CNTH                           000001EA
TK2CNTL                           000001EB
TK2CRH                            000001E8
TK2CRL                            000001E9
TK2IE                             00000006
TK2IF                             00000007
TK2JE                             00000005
TK2RCE                            00000004
TO                                00000005
TXAK                              00000003
WSAVE                             00000000
Z                                 00000002
_00106_DS_                        0000003F
_00108_DS_                        0000005D
_00110_DS_                        000000AE
_00112_DS_                        000000D1
_00114_DS_                        00000103
_00116_DS_                        0000011F
_00118_DS_                        0000014D
_00119_DS_                        00000172
_00123_DS_                        00000196
_00125_DS_                        000001A4
_00129_DS_                        000001D1
_00130_DS_                        000001BC
_00132_DS_                        000001DC
_00133_DS_                        00000220
_00165_DS_                        0000009C
_00166_DS_                        000000BF
_00167_DS_                        00000129
_00168_DS_                        00000139
_00169_DS_                        0000014C
_00170_DS_                        00000144
_00171_DS_                        00000145
_00172_DS_                        0000015B
_00173_DS_                        0000016E
_00174_DS_                        00000166
_00175_DS_                        00000167
_CONFIG0                          00008000
_CONFIG1                          00008001
_CP_ALL                           00007FFF
_FCPU_128T                        0000FFEF
_FCPU_16T                         0000FFBF
_FCPU_256T                        0000FFFF
_FCPU_2T                          0000FF8F
_FCPU_32T                         0000FFCF
_FCPU_4T                          0000FF9F
_FCPU_64T                         0000FFDF
_FCPU_8T                          0000FFAF
_HRC_LRC                          0000FCFF
_HRC_LXT                          0000FDFF
_HXT_LRC                          0000FEFF
_MCLR_OFF                         0000FF7F
_MCLR_ON                          0000FFFF
_PTWRT_16_1024                    0000FFF7
_PTWRT_16_16                      0000DFF7
_PTWRT_256_256                    0000DFFF
_PTWRT_256_4096                   0000FFFF
_PTWRT_4_4                        0000DFF3
_PTWRT_4_512                      0000FFF3
_PTWRT_64_2048                    0000FFFB
_PTWRT_64_64                      0000DFFB
_VLVR_160                         0000E3FF
_VLVR_185                         0000E7FF
_VLVR_205                         0000EBFF
_VLVR_218                         0000EFFF
_VLVR_232                         0000F3FF
_VLVR_245                         0000F7FF
_VLVR_305                         0000FBFF
_VLVR_360                         0000FFFF
_WDT_ALWAYS_OFF                   0000FFFC
_WDT_ALWAYS_ON                    0000FFFF
_WDT_SLEEP_OFF                    0000FFFD
__32P64                           00000001
___fs2schar                       00000000
___fs2sint                        00000000
___fs2slong                       00000000
___fs2uchar                       00000000
___fs2uint                        00000000
___fs2ulong                       00000000
___fsadd                          00000000
___fsadd_fl1_1_22                 00000018
___fsadd_fl2_1_22                 0000001C
___fsdiv                          00000000
___fseq                           00000000
___fsgt                           00000000
___fslt                           00000000
___fsmul                          00000000
___fsneq                          00000000
___fssub                          00000000
___schar2fs                       00000000
___sint2fs                        00000000
___slong2fs                       00000000
___uchar2fs                       00000000
___uint2fs                        00000000
___ulong2fs                       00000000
r0x1008                           00000003
r0x1009                           00000002
r0x100A                           00000001
r0x100B                           00000000
r0x100C                           00000007
r0x100D                           00000006
r0x100E                           00000005
r0x100F                           00000004
r0x1010                           00000008
r0x1011                           00000009
r0x1012                           0000000A
r0x1013                           0000000B
r0x1014                           0000000C
r0x1015                           0000000D
r0x1016                           0000000E
r0x1017                           0000000F
r0x1018                           00000010
r0x1019                           00000011
r0x101A                           00000012
r0x101B                           00000013
r0x101C                           00000014
r0x101D                           00000015
r0x101E                           00000016
r0x101F                           00000017

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

