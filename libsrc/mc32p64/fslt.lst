gpasm-2.0.0_beta2 (Nov  6 2017)fslt.asm           2017-12-7  13:58:41          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : SinoMCU ANSI-C Compiler
                      00003 ; Version 1.0.0 (Sep 28 2017) (MINGW32)
                      00004 ; This file was generated Thu Dec 07 13:58:41 2017
                      00005 ;--------------------------------------------------------
                      00006 ; MC30/MC32 port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc/fslt.c"
                      00009         list    p=3264
                      00010         radix dec
                      00011         include "3264.inc"
                      00001                 LIST
                      00002 ;mc32p64.inc    Standard Header File, Version 1.00 by Sinomcu
                      00374                 LIST
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015         extern  ___uchar2fs
                      00016         extern  ___schar2fs
                      00017         extern  ___uint2fs
                      00018         extern  ___sint2fs
                      00019         extern  ___ulong2fs
                      00020         extern  ___slong2fs
                      00021         extern  ___fs2uchar
                      00022         extern  ___fs2schar
                      00023         extern  ___fs2uint
                      00024         extern  ___fs2sint
                      00025         extern  ___fs2ulong
                      00026         extern  ___fs2slong
                      00027         extern  ___fsadd
                      00028         extern  ___fssub
                      00029         extern  ___fsmul
                      00030         extern  ___fsdiv
                      00031         extern  ___fseq
                      00032         extern  ___fsneq
                      00033         extern  ___fsgt
                      00034 
                      00035         extern STK06
                      00036         extern STK05
                      00037         extern STK04
                      00038         extern STK03
                      00039         extern STK02
                      00040         extern STK01
                      00041         extern STK00
                      00042 ;--------------------------------------------------------
                      00043 ; global declarations
                      00044 ;--------------------------------------------------------
                      00045         global  ___fslt
                      00046 
                      00047 ;--------------------------------------------------------
                      00048 ; global definitions
                      00049 ;--------------------------------------------------------
                      00050 ;--------------------------------------------------------
                      00051 ; absolute symbol definitions
                      00052 ;--------------------------------------------------------
                      00053 ;--------------------------------------------------------
                      00054 ; compiler-defined variables
                      00055 ;--------------------------------------------------------
                      00056 UDL_fslt_0      udata
0000                  00057 r0x100B res     1
0000                  00058 r0x100A res     1
0001                  00059 r0x1009 res     1
0001                  00060 r0x1008 res     1
0002                  00061 r0x100F res     1
0002                  00062 r0x100E res     1
0003                  00063 r0x100D res     1
0003                  00064 r0x100C res     1
0004                  00065 r0x1010 res     1
0004                  00066 ___fslt_fl1_1_22        res     4
0006                  00067 ___fslt_fl2_1_22        res     4
                      00068 ;--------------------------------------------------------
                      00069 ; initialized data
                      00070 ;--------------------------------------------------------
                      00071 
                      00072 ;@Allocation info for local variables in function '__fslt'
                      00073 ;@__fslt __uchar2fs                Allocated to registers ;size:2
                      00074 ;@__fslt __schar2fs                Allocated to registers ;size:2
                      00075 ;@__fslt __uint2fs                 Allocated to registers ;size:2
                      00076 ;@__fslt __sint2fs                 Allocated to registers ;size:2
                      00077 ;@__fslt __ulong2fs                Allocated to registers ;size:2
                      00078 ;@__fslt __slong2fs                Allocated to registers ;size:2
                      00079 ;@__fslt __fs2uchar                Allocated to registers ;size:2
                      00080 ;@__fslt __fs2schar                Allocated to registers ;size:2
                      00081 ;@__fslt __fs2uint                 Allocated to registers ;size:2
                      00082 ;@__fslt __fs2sint                 Allocated to registers ;size:2
                      00083 ;@__fslt __fs2ulong                Allocated to registers ;size:2
                      00084 ;@__fslt __fs2slong                Allocated to registers ;size:2
                      00085 ;@__fslt __fsadd                   Allocated to registers ;size:2
                      00086 ;@__fslt __fssub                   Allocated to registers ;size:2
                      00087 ;@__fslt __fsmul                   Allocated to registers ;size:2
                      00088 ;@__fslt __fsdiv                   Allocated to registers ;size:2
                      00089 ;@__fslt __fseq                    Allocated to registers ;size:2
                      00090 ;@__fslt __fsneq                   Allocated to registers ;size:2
                      00091 ;@__fslt __fsgt                    Allocated to registers ;size:2
                      00092 ;@__fslt a2                        Allocated to registers r0x100F r0x100E r0x100D r0x100C ;size:4
                      00093 ;@__fslt a1                        Allocated to registers r0x100B r0x100A r0x1009 r0x1008 ;size:4
                      00094 ;@__fslt fl1                       Allocated to registers ;size:4
                      00095 ;@__fslt fl2                       Allocated to registers ;size:4
                      00096 ;@end Allocation info for local variables in function '__fslt';
                      00097 
                      00098 ;--------------------------------------------------------
                      00099 ; overlayable items in internal ram 
                      00100 ;--------------------------------------------------------
                      00101 ;       udata_ovr
                      00102 ;--------------------------------------------------------
                      00103 ; code
                      00104 ;--------------------------------------------------------
                      00105 code_fslt       code
                      00106 ;***
                      00107 ;  pBlock Stats: dbName = C
                      00108 ;***
                      00109 ;entry:  ___fslt        ;Function start
                      00110 ; 2 exit points
                      00111 ;has an exit
                      00112 ;16 compiler assigned registers:
                      00113 ;   r0x1008
                      00114 ;   STK00
                      00115 ;   r0x1009
                      00116 ;   STK01
                      00117 ;   r0x100A
                      00118 ;   STK02
                      00119 ;   r0x100B
                      00120 ;   STK03
                      00121 ;   r0x100C
                      00122 ;   STK04
                      00123 ;   r0x100D
                      00124 ;   STK05
                      00125 ;   r0x100E
                      00126 ;   STK06
                      00127 ;   r0x100F
                      00128 ;   r0x1010
                      00129 ;; Starting pCode block
                      00130 ;;[ICODE] ../libsdcc/fslt.c:55:  _entry($9) :
                      00131 ;;[ICODE] ../libsdcc/fslt.c:55:         proc ___fslt [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
0000                  00132 ___fslt ;Function start
                      00133 ; 2 exit points
                      00134 ;;[ICODE] ../libsdcc/fslt.c:55: iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fslt_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ] = recv ___fslt [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
                      00135 ;       .line   55; "../libsdcc/fslt.c" char __fslt (float a1, float a2) _FS_REENTRANT
0000   5600           00136         MOVRA   r0x1008
0001   5800           00137         MOVAR   STK00
0002   5600           00138         MOVRA   r0x1009
0003   5800           00139         MOVAR   STK01
0004   5600           00140         MOVRA   r0x100A
0005   5800           00141         MOVAR   STK02
0006   5600           00142         MOVRA   (___fslt_fl1_1_22 + 0)
0007   5600           00143         MOVRA   r0x100B
                      00144 ;;[ICODE] ../libsdcc/fslt.c:55: iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fslt_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ] = recv ___fslt [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
0008   5800           00145         MOVAR   STK03
0009   5600           00146         MOVRA   r0x100C
000A   5800           00147         MOVAR   STK04
000B   5600           00148         MOVRA   r0x100D
000C   5800           00149         MOVAR   STK05
000D   5600           00150         MOVRA   r0x100E
000E   5800           00151         MOVAR   STK06
000F   5600           00152         MOVRA   r0x100F
                      00153 ;;[ICODE] ../libsdcc/fslt.c:59:         iTemp2 [k7 lr5:6 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fslt_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00154 ;;[ICODE] ../libsdcc/fslt.c:59:         *(iTemp2 [k7 lr5:6 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fslt_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00155 ;;gen.c:6373: size=3/4, offset=0, AOP_TYPE(res)=8
                      00156 ;;99    MOVAR   r0x100B
                      00157 ;;gen.c:6373: size=2/4, offset=1, AOP_TYPE(res)=8
                      00158 ;       .line   59; "../libsdcc/fslt.c" fl1.f = a1;
0010   5800           00159         MOVAR   r0x100A
0011   5600           00160         MOVRA   (___fslt_fl1_1_22 + 1)
                      00161 ;;gen.c:6373: size=1/4, offset=2, AOP_TYPE(res)=8
0012   5800           00162         MOVAR   r0x1009
0013   5600           00163         MOVRA   (___fslt_fl1_1_22 + 2)
                      00164 ;;gen.c:6373: size=0/4, offset=3, AOP_TYPE(res)=8
0014   5800           00165         MOVAR   r0x1008
0015   5600           00166         MOVRA   (___fslt_fl1_1_22 + 3)
                      00167 ;;[ICODE] ../libsdcc/fslt.c:60:         iTemp4 [k11 lr7:8 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fslt_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00168 ;;[ICODE] ../libsdcc/fslt.c:60:         *(iTemp4 [k11 lr7:8 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fslt_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ]
                      00169 ;;gen.c:6373: size=3/4, offset=0, AOP_TYPE(res)=8
                      00170 ;       .line   60; "../libsdcc/fslt.c" fl2.f = a2;
0016   5800           00171         MOVAR   r0x100F
0017   5600           00172         MOVRA   (___fslt_fl2_1_22 + 0)
                      00173 ;;gen.c:6373: size=2/4, offset=1, AOP_TYPE(res)=8
0018   5800           00174         MOVAR   r0x100E
0019   5600           00175         MOVRA   (___fslt_fl2_1_22 + 1)
                      00176 ;;gen.c:6373: size=1/4, offset=2, AOP_TYPE(res)=8
001A   5800           00177         MOVAR   r0x100D
001B   5600           00178         MOVRA   (___fslt_fl2_1_22 + 2)
                      00179 ;;gen.c:6373: size=0/4, offset=3, AOP_TYPE(res)=8
001C   5800           00180         MOVAR   r0x100C
001D   5600           00181         MOVRA   (___fslt_fl2_1_22 + 3)
                      00182 ;;[ICODE] ../libsdcc/fslt.c:62:         iTemp6 [k14 lr9:10 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fslt_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00183 ;;[ICODE] ../libsdcc/fslt.c:62:         iTemp8 [k17 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp6 [k14 lr9:10 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00184 ;       .line   62; "../libsdcc/fslt.c" if (fl1.l<0 && fl2.l<0) {
001E   5800           00185         MOVAR   (___fslt_fl1_1_22 + 0)
001F   5600           00186         MOVRA   r0x100B
0020   5800           00187         MOVAR   (___fslt_fl1_1_22 + 1)
0021   5600           00188         MOVRA   r0x100A
0022   5800           00189         MOVAR   (___fslt_fl1_1_22 + 2)
0023   5600           00190         MOVRA   r0x1009
0024   5800           00191         MOVAR   (___fslt_fl1_1_22 + 3)
0025   5600           00192         MOVRA   r0x1008
                      00193 ;;[ICODE] ../libsdcc/fslt.c:62:         iTemp9 [k18 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp8 [k17 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] < 0x0 {volatile-long-int literal}
                      00194 ;;signed compare: left < lit(0x0=0), size=4, mask=ffffffff
0026   C1B7           00195         BSET    STATUS,0
0027   EE00           00196         JBSET   r0x1008,7
0028   D1B7           00197         BCLR    STATUS,0
0029   E1B7           00198         JBSET   STATUS,0
002A   A000           00199         GOTO    _00108_DS_
                      00200 ;;genSkipc:3194: created from rifx:00D5608C
                      00201 ;;[ICODE] ../libsdcc/fslt.c:62:         if iTemp9 [k18 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_1($4)
                      00202 ;;[ICODE] ../libsdcc/fslt.c:62:         iTemp10 [k19 lr13:14 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fslt_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00203 ;;[ICODE] ../libsdcc/fslt.c:62:         iTemp12 [k22 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp10 [k19 lr13:14 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
002B   5800           00204         MOVAR   (___fslt_fl2_1_22 + 0)
002C   5600           00205         MOVRA   r0x100B
002D   5800           00206         MOVAR   (___fslt_fl2_1_22 + 1)
002E   5600           00207         MOVRA   r0x100A
002F   5800           00208         MOVAR   (___fslt_fl2_1_22 + 2)
0030   5600           00209         MOVRA   r0x1009
0031   5800           00210         MOVAR   (___fslt_fl2_1_22 + 3)
0032   5600           00211         MOVRA   r0x1008
                      00212 ;;[ICODE] ../libsdcc/fslt.c:62:         iTemp13 [k23 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp12 [k22 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] < 0x0 {volatile-long-int literal}
                      00213 ;;signed compare: left < lit(0x0=0), size=4, mask=ffffffff
0033   C1B7           00214         BSET    STATUS,0
0034   EE00           00215         JBSET   r0x1008,7
0035   D1B7           00216         BCLR    STATUS,0
0036   E1B7           00217         JBSET   STATUS,0
0037   A000           00218         GOTO    _00108_DS_
                      00219 ;;genSkipc:3194: created from rifx:00D5608C
                      00220 ;;[ICODE] ../libsdcc/fslt.c:62:         if iTemp13 [k23 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_1($4)
                      00221 ;;[ICODE] ../libsdcc/fslt.c:63:         iTemp14 [k24 lr17:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fslt_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00222 ;;[ICODE] ../libsdcc/fslt.c:63:         iTemp16 [k27 lr18:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp14 [k24 lr17:18 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00223 ;       .line   63; "../libsdcc/fslt.c" if (fl2.l < fl1.l)
0038   5800           00224         MOVAR   (___fslt_fl2_1_22 + 0)
0039   5600           00225         MOVRA   r0x100B
003A   5800           00226         MOVAR   (___fslt_fl2_1_22 + 1)
003B   5600           00227         MOVRA   r0x100A
003C   5800           00228         MOVAR   (___fslt_fl2_1_22 + 2)
003D   5600           00229         MOVRA   r0x1009
003E   5800           00230         MOVAR   (___fslt_fl2_1_22 + 3)
003F   5600           00231         MOVRA   r0x1008
                      00232 ;;[ICODE] ../libsdcc/fslt.c:63:         iTemp17 [k28 lr19:20 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fslt_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00233 ;;[ICODE] ../libsdcc/fslt.c:63:         iTemp19 [k31 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] = @[iTemp17 [k28 lr19:20 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0040   5800           00234         MOVAR   (___fslt_fl1_1_22 + 0)
0041   5600           00235         MOVRA   r0x100F
0042   5800           00236         MOVAR   (___fslt_fl1_1_22 + 1)
0043   5600           00237         MOVRA   r0x100E
0044   5800           00238         MOVAR   (___fslt_fl1_1_22 + 2)
0045   5600           00239         MOVRA   r0x100D
0046   5800           00240         MOVAR   (___fslt_fl1_1_22 + 3)
0047   5600           00241         MOVRA   r0x100C
                      00242 ;;[ICODE] ../libsdcc/fslt.c:63:         iTemp20 [k32 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp16 [k27 lr18:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] < iTemp19 [k31 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ]
0048   5800           00243         MOVAR   r0x1008
0049   3F80           00244         ADDAI   0x80
004A   5600           00245         MOVRA   r0x1010
004B   5800           00246         MOVAR   r0x100C
004C   3F80           00247         ADDAI   0x80
004D   4800           00248         RSUBAR  r0x1010
004E   E5B7           00249         JBSET   STATUS,2
004F   A000           00250         GOTO    _00122_DS_
0050   5800           00251         MOVAR   r0x100D
0051   4800           00252         RSUBAR  r0x1009
0052   E5B7           00253         JBSET   STATUS,2
0053   A000           00254         GOTO    _00122_DS_
0054   5800           00255         MOVAR   r0x100E
0055   4800           00256         RSUBAR  r0x100A
0056   E5B7           00257         JBSET   STATUS,2
0057   A000           00258         GOTO    _00122_DS_
0058   5800           00259         MOVAR   r0x100F
0059   4800           00260         RSUBAR  r0x100B
005A                  00261 _00122_DS_
005A   F1B7           00262         JBCLR   STATUS,0
005B   A000           00263         GOTO    _00106_DS_
                      00264 ;;genSkipc:3194: created from rifx:00D5608C
                      00265 ;;[ICODE] ../libsdcc/fslt.c:63:         if iTemp20 [k32 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_0($2)
                      00266 ;;[ICODE] ../libsdcc/fslt.c:64:         ret 0x1 {const-unsigned-char literal}
                      00267 ;       .line   64; "../libsdcc/fslt.c" return (1);
005C   3C01           00268         MOVAI   0x01
005D   A000           00269         GOTO    _00112_DS_
                      00270 ;;[ICODE] ../libsdcc/fslt.c:64:  _iffalse_0($2) :
                      00271 ;;[ICODE] ../libsdcc/fslt.c:65:         ret 0x0 {const-unsigned-char literal}
005E                  00272 _00106_DS_
                      00273 ;       .line   65; "../libsdcc/fslt.c" return (0);
005E   3C00           00274         MOVAI   0x00
005F   A000           00275         GOTO    _00112_DS_
                      00276 ;;[ICODE] ../libsdcc/fslt.c:65:  _iffalse_1($4) :
                      00277 ;;[ICODE] ../libsdcc/fslt.c:68:         iTemp21 [k33 lr27:28 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fslt_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00278 ;;[ICODE] ../libsdcc/fslt.c:68:         iTemp23 [k36 lr28:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp21 [k33 lr27:28 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0060                  00279 _00108_DS_
                      00280 ;       .line   68; "../libsdcc/fslt.c" if (fl1.l < fl2.l)
0060   5800           00281         MOVAR   (___fslt_fl1_1_22 + 0)
0061   5600           00282         MOVRA   r0x100B
0062   5800           00283         MOVAR   (___fslt_fl1_1_22 + 1)
0063   5600           00284         MOVRA   r0x100A
0064   5800           00285         MOVAR   (___fslt_fl1_1_22 + 2)
0065   5600           00286         MOVRA   r0x1009
0066   5800           00287         MOVAR   (___fslt_fl1_1_22 + 3)
0067   5600           00288         MOVRA   r0x1008
                      00289 ;;[ICODE] ../libsdcc/fslt.c:68:         iTemp24 [k37 lr29:30 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fslt_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00290 ;;[ICODE] ../libsdcc/fslt.c:68:         iTemp26 [k40 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] = @[iTemp24 [k37 lr29:30 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0068   5800           00291         MOVAR   (___fslt_fl2_1_22 + 0)
0069   5600           00292         MOVRA   r0x100F
006A   5800           00293         MOVAR   (___fslt_fl2_1_22 + 1)
006B   5600           00294         MOVRA   r0x100E
006C   5800           00295         MOVAR   (___fslt_fl2_1_22 + 2)
006D   5600           00296         MOVRA   r0x100D
006E   5800           00297         MOVAR   (___fslt_fl2_1_22 + 3)
006F   5600           00298         MOVRA   r0x100C
                      00299 ;;[ICODE] ../libsdcc/fslt.c:68:         iTemp27 [k41 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp23 [k36 lr28:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] < iTemp26 [k40 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ]
0070   5800           00300         MOVAR   r0x1008
0071   3F80           00301         ADDAI   0x80
0072   5600           00302         MOVRA   r0x1010
0073   5800           00303         MOVAR   r0x100C
0074   3F80           00304         ADDAI   0x80
0075   4800           00305         RSUBAR  r0x1010
0076   E5B7           00306         JBSET   STATUS,2
0077   A000           00307         GOTO    _00123_DS_
0078   5800           00308         MOVAR   r0x100D
0079   4800           00309         RSUBAR  r0x1009
007A   E5B7           00310         JBSET   STATUS,2
007B   A000           00311         GOTO    _00123_DS_
007C   5800           00312         MOVAR   r0x100E
007D   4800           00313         RSUBAR  r0x100A
007E   E5B7           00314         JBSET   STATUS,2
007F   A000           00315         GOTO    _00123_DS_
0080   5800           00316         MOVAR   r0x100F
0081   4800           00317         RSUBAR  r0x100B
0082                  00318 _00123_DS_
0082   F1B7           00319         JBCLR   STATUS,0
0083   A000           00320         GOTO    _00111_DS_
                      00321 ;;genSkipc:3194: created from rifx:00D5608C
                      00322 ;;[ICODE] ../libsdcc/fslt.c:68:         if iTemp27 [k41 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($7)
                      00323 ;;[ICODE] ../libsdcc/fslt.c:69:         ret 0x1 {const-unsigned-char literal}
                      00324 ;       .line   69; "../libsdcc/fslt.c" return (1);
0084   3C01           00325         MOVAI   0x01
0085   A000           00326         GOTO    _00112_DS_
                      00327 ;;[ICODE] ../libsdcc/fslt.c:69:  _iffalse_2($7) :
                      00328 ;;[ICODE] ../libsdcc/fslt.c:70:         ret 0x0 {const-unsigned-char literal}
0086                  00329 _00111_DS_
                      00330 ;       .line   70; "../libsdcc/fslt.c" return (0);
0086   3C00           00331         MOVAI   0x00
                      00332 ;;[ICODE] ../libsdcc/fslt.c:70:  _return($8) :
                      00333 ;;[ICODE] ../libsdcc/fslt.c:70:         eproc ___fslt [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
0087                  00334 _00112_DS_
0087   000C           00335         RETURN  
                      00336 ; exit point of ___fslt
                      00337 
                      00338 
                      00339 ;       code size estimation:
                      00340 ;         136+    0 =   136 instructions (  272 byte)
                      00341 
                      00342         end
gpasm-2.0.0_beta2 (Nov  6 2017)fslt.asm           2017-12-7  13:58:41          PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

ADCR0                             000001EC
ADCR1                             000001ED
ADEOC                             00000001
ADIE                              00000006
ADIF                              00000006
ADIOS0                            00000000
ADIOS1                            00000001
ADIOS3                            00000003
ADIOS4                            00000004
ADIOS5                            00000005
ADIOS7                            00000007
ADOIS2                            00000002
ADOIS6                            00000006
ADON                              00000000
ADRH                              000001EE
ADRL                              000001EF
BUZ0OE                            00000005
BUZ1OE                            00000005
C                                 00000000
CLKS                              00000002
DC                                00000001
FSR                               000001B4
FSR0                              000001B4
FSR1                              000001B5
GIE                               00000007
HAAS                              00000006
HBB                               00000005
HCF                               00000007
HEN                               00000001
HFEN                              00000000
HIBYTE                            000001B3
HTX                               00000004
I2CADDR                           000001F1
I2CCR                             000001F0
I2CDATA                           000001F2
I2CIE                             00000005
I2CIF                             00000005
INDF                              000001B0
INDF0                             000001B0
INDF1                             000001B1
INDF2                             000001B2
INDF3                             000001B9
INT0IE                            00000002
INT0IF                            00000002
INT1IE                            00000003
INT1IF                            00000003
INTE                              000001BA
INTF                              000001BB
IOP0                              000001C0
IOP1                              000001C4
IOP2                              000001C8
IOP3                              000001CC
LFEN                              00000001
MCR                               000001B8
OEP0                              000001C1
OEP1                              000001C5
OEP2                              000001C9
OEP3                              000001CD
OSCM                              000001BC
P00                               00000000
P00OE                             00000000
P00PU                             00000000
P01                               00000001
P01OE                             00000001
P01PU                             00000001
P02                               00000002
P02OE                             00000002
P02PU                             00000002
P03                               00000003
P03OE                             00000003
P03PU                             00000003
P04                               00000004
P04OE                             00000004
P04PU                             00000004
P05                               00000005
P05OE                             00000005
P05PU                             00000005
P06                               00000006
P06OE                             00000006
P07                               00000007
P07OE                             00000007
P10                               00000000
P10OE                             00000000
P10PU                             00000000
P11                               00000001
P11OE                             00000001
P11PU                             00000001
P12                               00000002
P12OE                             00000002
P12PU                             00000002
P13                               00000003
P13OE                             00000003
P13PU                             00000003
P14                               00000004
P14OE                             00000004
P14PU                             00000004
P15                               00000005
P15OE                             00000005
P15PU                             00000005
P16                               00000006
P16OE                             00000006
P16PU                             00000006
P17                               00000007
P17OE                             00000007
P17PU                             00000007
P20                               00000000
P20OE                             00000000
P20PU                             00000000
P21                               00000001
P21OE                             00000001
P21PU                             00000001
P22                               00000002
P22OE                             00000002
P22PU                             00000002
P23                               00000003
P23OE                             00000003
P23PU                             00000003
P24                               00000004
P24OE                             00000004
P24PU                             00000004
P25                               00000005
P25OE                             00000005
P25PU                             00000005
P26                               00000006
P26OE                             00000006
P26PU                             00000006
P27                               00000007
P27OE                             00000007
P27PU                             00000007
P30                               00000000
P30OE                             00000000
P30PU                             00000000
P31                               00000001
P31OE                             00000001
P31PU                             00000001
PCL                               000001B6
PD                                00000004
PUP0                              000001C2
PUP1                              000001C6
PUP2                              000001CA
PUP3                              000001CE
PWM0OE                            00000006
PWM1OE                            00000006
RXAK                              00000000
SRW                               00000002
STATUS                            000001B7
STBH                              00000004
STBL                              00000005
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
T0CNT                             000001D1
T0CR                              000001D0
T0DATA                            000001D3
T0IE                              00000000
T0IF                              00000000
T0LOAD                            000001D2
T1CNT                             000001D5
T1CR                              000001D4
T1DATA                            000001D7
T1IE                              00000001
T1IF                              00000001
T1LOAD                            000001D6
T2CNTH                            000001D9
T2CNTL                            000001DA
T2CR                              000001D8
T2IE                              00000004
T2IF                              00000004
T2LOADH                           000001DB
T2LOADL                           000001DC
T2MOD                             00000005
TC0EN                             00000007
TC1EN                             00000007
TC2EN                             00000007
TK0CLR                            00000003
TK0CNTH                           000001E2
TK0CNTL                           000001E3
TK0CRH                            000001E0
TK0CRL                            000001E1
TK0IE                             00000006
TK0IF                             00000007
TK0JE                             00000005
TK0RCE                            00000004
TK1CLR                            00000003
TK1CNTH                           000001E6
TK1CNTL                           000001E7
TK1CRH                            000001E4
TK1CRL                            000001E5
TK1IE                             00000006
TK1IF                             00000007
TK1JE                             00000005
TK1RCE                            00000004
TK2CLR                            00000003
TK2CNTH                           000001EA
TK2CNTL                           000001EB
TK2CRH                            000001E8
TK2CRL                            000001E9
TK2IE                             00000006
TK2IF                             00000007
TK2JE                             00000005
TK2RCE                            00000004
TO                                00000005
TXAK                              00000003
Z                                 00000002
_00106_DS_                        0000005E
_00108_DS_                        00000060
_00111_DS_                        00000086
_00112_DS_                        00000087
_00122_DS_                        0000005A
_00123_DS_                        00000082
_CONFIG0                          00008000
_CONFIG1                          00008001
_CP_ALL                           00007FFF
_FCPU_128T                        0000FFEF
_FCPU_16T                         0000FFBF
_FCPU_256T                        0000FFFF
_FCPU_2T                          0000FF8F
_FCPU_32T                         0000FFCF
_FCPU_4T                          0000FF9F
_FCPU_64T                         0000FFDF
_FCPU_8T                          0000FFAF
_HRC_LRC                          0000FCFF
_HRC_LXT                          0000FDFF
_HXT_LRC                          0000FEFF
_MCLR_OFF                         0000FF7F
_MCLR_ON                          0000FFFF
_PTWRT_16_1024                    0000FFF7
_PTWRT_16_16                      0000DFF7
_PTWRT_256_256                    0000DFFF
_PTWRT_256_4096                   0000FFFF
_PTWRT_4_4                        0000DFF3
_PTWRT_4_512                      0000FFF3
_PTWRT_64_2048                    0000FFFB
_PTWRT_64_64                      0000DFFB
_VLVR_160                         0000E3FF
_VLVR_185                         0000E7FF
_VLVR_205                         0000EBFF
_VLVR_218                         0000EFFF
_VLVR_232                         0000F3FF
_VLVR_245                         0000F7FF
_VLVR_305                         0000FBFF
_VLVR_360                         0000FFFF
_WDT_ALWAYS_OFF                   0000FFFC
_WDT_ALWAYS_ON                    0000FFFF
_WDT_SLEEP_OFF                    0000FFFD
__32P64                           00000001
___fs2schar                       00000000
___fs2sint                        00000000
___fs2slong                       00000000
___fs2uchar                       00000000
___fs2uint                        00000000
___fs2ulong                       00000000
___fsadd                          00000000
___fsdiv                          00000000
___fseq                           00000000
___fsgt                           00000000
___fslt                           00000000
___fslt_fl1_1_22                  00000009
___fslt_fl2_1_22                  0000000D
___fsmul                          00000000
___fsneq                          00000000
___fssub                          00000000
___schar2fs                       00000000
___sint2fs                        00000000
___slong2fs                       00000000
___uchar2fs                       00000000
___uint2fs                        00000000
___ulong2fs                       00000000
r0x1008                           00000003
r0x1009                           00000002
r0x100A                           00000001
r0x100B                           00000000
r0x100C                           00000007
r0x100D                           00000006
r0x100E                           00000005
r0x100F                           00000004
r0x1010                           00000008

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

