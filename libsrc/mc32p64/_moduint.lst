gpasm-2.0.0_beta2 (Nov  6 2017)_moduint.asm       2017-12-7  13:58:45          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : SinoMCU ANSI-C Compiler
                      00003 ; Version 1.0.0 (Sep 28 2017) (MINGW32)
                      00004 ; This file was generated Thu Dec 07 13:58:45 2017
                      00005 ;--------------------------------------------------------
                      00006 ; MC30/MC32 port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc/_moduint.c"
                      00009         list    p=3264
                      00010         radix dec
                      00011         include "3264.inc"
                      00001                 LIST
                      00002 ;mc32p64.inc    Standard Header File, Version 1.00 by Sinomcu
                      00374                 LIST
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015 
                      00016         extern STK06
                      00017         extern STK05
                      00018         extern STK04
                      00019         extern STK03
                      00020         extern STK02
                      00021         extern STK01
                      00022         extern STK00
                      00023 ;--------------------------------------------------------
                      00024 ; global declarations
                      00025 ;--------------------------------------------------------
                      00026         global  __moduint
                      00027 
                      00028 ;--------------------------------------------------------
                      00029 ; global definitions
                      00030 ;--------------------------------------------------------
                      00031 ;--------------------------------------------------------
                      00032 ; absolute symbol definitions
                      00033 ;--------------------------------------------------------
                      00034 ;--------------------------------------------------------
                      00035 ; compiler-defined variables
                      00036 ;--------------------------------------------------------
                      00037 UDL__moduint_0  udata
0000                  00038 r0x1001 res     1
0000                  00039 r0x1000 res     1
0001                  00040 r0x1003 res     1
0001                  00041 r0x1002 res     1
0002                  00042 r0x1004 res     1
0002                  00043 r0x1006 res     1
                      00044 ;--------------------------------------------------------
                      00045 ; initialized data
                      00046 ;--------------------------------------------------------
                      00047 
                      00048 ;@Allocation info for local variables in function '_moduint'
                      00049 ;@_moduint b                         Allocated to registers r0x1003 r0x1002 ;size:2
                      00050 ;@_moduint a                         Allocated to registers r0x1001 r0x1000 ;size:2
                      00051 ;@_moduint count                     Allocated to registers r0x1004 ;size:1
                      00052 ;@end Allocation info for local variables in function '_moduint';
                      00053 
                      00054 ;--------------------------------------------------------
                      00055 ; overlayable items in internal ram 
                      00056 ;--------------------------------------------------------
                      00057 ;       udata_ovr
                      00058 ;--------------------------------------------------------
                      00059 ; code
                      00060 ;--------------------------------------------------------
                      00061 code__moduint   code
                      00062 ;***
                      00063 ;  pBlock Stats: dbName = C
                      00064 ;***
                      00065 ;entry:  __moduint      ;Function start
                      00066 ; 2 exit points
                      00067 ;has an exit
                      00068 ;12 compiler assigned registers:
                      00069 ;   r0x1000
                      00070 ;   STK00
                      00071 ;   r0x1001
                      00072 ;   STK01
                      00073 ;   r0x1002
                      00074 ;   STK02
                      00075 ;   r0x1003
                      00076 ;   r0x1004
                      00077 ;   r0x1005
                      00078 ;   r0x1006
                      00079 ;   r0x1007
                      00080 ;   r0x1008
                      00081 ;; Starting pCode block
                      00082 ;;[ICODE] ../libsdcc/_moduint.c:30:  _entry($12) :
                      00083 ;;[ICODE] ../libsdcc/_moduint.c:30:     proc __moduint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int function ( unsigned-int fixed, unsigned-int fixed) fixed}
0000                  00084 __moduint       ;Function start
                      00085 ; 2 exit points
                      00086 ;;[ICODE] ../libsdcc/_moduint.c:30: iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_a_1_1}[r0x1000 r0x1001 ] = recv __moduint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int function ( unsigned-int fixed, unsigned-int fixed) fixed}
                      00087 ;       .line   30; "../libsdcc/_moduint.c"     _moduint (unsigned int a, unsigned int b)
0000   5600           00088         MOVRA   r0x1000
0001   5800           00089         MOVAR   STK00
0002   5600           00090         MOVRA   r0x1001
                      00091 ;;[ICODE] ../libsdcc/_moduint.c:30: iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ] = recv __moduint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int function ( unsigned-int fixed, unsigned-int fixed) fixed}
0003   5800           00092         MOVAR   STK01
0004   5600           00093         MOVRA   r0x1002
0005   5800           00094         MOVAR   STK02
0006   5600           00095         MOVRA   r0x1003
                      00096 ;;[ICODE] ../libsdcc/_moduint.c:35:     if iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ] != 0 goto preHeaderLbl0($15)
                      00097 ;       .line   35; "../libsdcc/_moduint.c"     if (!b) return (unsigned int)-1;
0007   5800           00098         MOVAR   r0x1003
0008   5C00           00099         ORAR    r0x1002
0009   E5B7           00100         JBSET   STATUS,2
000A   A000           00101         GOTO    _00119_DS_
                      00102 ;;[ICODE] ../libsdcc/_moduint.c:35:     ret 0xffff {unsigned-int literal}
000B   3CFF           00103         MOVAI   0xff
000C   5600           00104         MOVRA   STK00
000D   3CFF           00105         MOVAI   0xff
000E   A000           00106         GOTO    _00115_DS_
                      00107 ;;[ICODE] ../libsdcc/_moduint.c:39:  preHeaderLbl0($15) :
                      00108 ;;[ICODE] ../libsdcc/_moduint.c:39:     iTemp6 [k11 lr8:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] := 0x1 {const-unsigned-char literal}
000F                  00109 _00119_DS_
                      00110 ;       .line   39; "../libsdcc/_moduint.c"     while (!(b & (1UL << (8*sizeof(unsigned int)-1)))) {
000F   3C01           00111         MOVAI   0x01
0010   5600           00112         MOVRA   r0x1004
                      00113 ;;[ICODE] ../libsdcc/_moduint.c:39:  _whilecontinue_0($3) :
                      00114 ;;[ICODE] ../libsdcc/_moduint.c:39:     iTemp3 [k8 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1005 r0x1006 r0x1007 r0x1008 ] = (unsigned-long-int register)iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ]
0011                  00115 _00107_DS_
0011   5800           00116         MOVAR   r0x1003
                      00117 ;;1     MOVRA   r0x1005
0012   5800           00118         MOVAR   r0x1002
0013   5600           00119         MOVRA   r0x1006
                      00120 ;;1     CLRR    r0x1007
                      00121 ;;1     CLRR    r0x1008
                      00122 ;;[ICODE] ../libsdcc/_moduint.c:39:     iTemp4 [k9 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} = iTemp3 [k8 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1005 r0x1006 r0x1007 r0x1008 ] & 0x8000 {unsigned-long-int literal}
0014   FE00           00123         JBCLR   r0x1006,7
0015   A000           00124         GOTO    _00112_DS_
                      00125 ;;[ICODE] ../libsdcc/_moduint.c:39:     if iTemp4 [k9 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} != 0 goto preHeaderLbl1($18)
                      00126 ;;[ICODE] ../libsdcc/_moduint.c:40:     iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ] = iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ] << 0x1 {const-unsigned-char literal}
                      00127 ;       .line   40; "../libsdcc/_moduint.c"     b <<= 1;
0016   D1B7           00128         BCLR    STATUS,0
0017   5200           00129         RLR     r0x1003
0018   5200           00130         RLR     r0x1002
                      00131 ;;[ICODE] ../libsdcc/_moduint.c:41:     iTemp6 [k11 lr8:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] = iTemp6 [k11 lr8:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] + 0x1 {const-unsigned-char literal}
                      00132 ;       .line   41; "../libsdcc/_moduint.c"     ++count;
0019   6600           00133         INCR    r0x1004
                      00134 ;;[ICODE] ../libsdcc/_moduint.c:41:      goto _whilecontinue_0($3)
001A   A000           00135         GOTO    _00107_DS_
                      00136 ;;[ICODE] ../libsdcc/_moduint.c:45:  preHeaderLbl1($18) :
                      00137 ;;[ICODE] ../libsdcc/_moduint.c:45:     iTemp10 [k15 lr19:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] := iTemp6 [k11 lr8:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ]
                      00138 ;;[ICODE] ../libsdcc/_moduint.c:45:  _whilecontinue_1($8) :
                      00139 ;;[ICODE] ../libsdcc/_moduint.c:45:     if iTemp10 [k15 lr19:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] == 0 goto _whilebreak_1($10)
001B                  00140 _00112_DS_
                      00141 ;       .line   45; "../libsdcc/_moduint.c"     while (count) {
001B   3C00           00142         MOVAI   0x00
001C   5C00           00143         ORAR    r0x1004
001D   F5B7           00144         JBCLR   STATUS,2
001E   A000           00145         GOTO    _00114_DS_
                      00146 ;;[ICODE] ../libsdcc/_moduint.c:46:     iTemp7 [k12 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_a_1_1}[r0x1000 r0x1001 ] < iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ]
                      00147 ;       .line   46; "../libsdcc/_moduint.c"     if (a >= b) {
001F   5800           00148         MOVAR   r0x1002
0020   4800           00149         RSUBAR  r0x1000
0021   E5B7           00150         JBSET   STATUS,2
0022   A000           00151         GOTO    _00131_DS_
0023   5800           00152         MOVAR   r0x1003
0024   4800           00153         RSUBAR  r0x1001
0025                  00154 _00131_DS_
0025   E1B7           00155         JBSET   STATUS,0
0026   A000           00156         GOTO    _00111_DS_
                      00157 ;;genSkipc:3194: created from rifx:00D5608C
                      00158 ;;[ICODE] ../libsdcc/_moduint.c:46:     if iTemp7 [k12 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_1($7)
                      00159 ;;[ICODE] ../libsdcc/_moduint.c:47:     iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_a_1_1}[r0x1000 r0x1001 ] = iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_a_1_1}[r0x1000 r0x1001 ] - iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ]
                      00160 ;       .line   47; "../libsdcc/_moduint.c"     a -= b;
0027   5800           00161         MOVAR   r0x1003
0028   4A00           00162         RSUBRA  r0x1001
0029   5800           00163         MOVAR   r0x1002
002A   E1B7           00164         JBSET   STATUS,0
002B   6000           00165         JZAR    r0x1002
002C   4A00           00166         RSUBRA  r0x1000
                      00167 ;;[ICODE] ../libsdcc/_moduint.c:47:  _iffalse_1($7) :
                      00168 ;;[ICODE] ../libsdcc/_moduint.c:49:     iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ] = iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_b_1_1}[r0x1002 r0x1003 ] >> 0x1 {const-unsigned-char literal}
                      00169 ;;shiftRight_Left2ResultLit:5215: shCount=1, size=2, sign=0, same=1, offr=0
002D                  00170 _00111_DS_
                      00171 ;       .line   49; "../libsdcc/_moduint.c"     b >>= 1;
002D   D1B7           00172         BCLR    STATUS,0
002E   4E00           00173         RRR     r0x1002
002F   4E00           00174         RRR     r0x1003
                      00175 ;;[ICODE] ../libsdcc/_moduint.c:50:     iTemp10 [k15 lr19:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] = iTemp10 [k15 lr19:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __moduint_count_1_2}[r0x1004 ] - 0x1 {const-unsigned-char literal}
                      00176 ;       .line   50; "../libsdcc/_moduint.c"     --count;
0030   6E00           00177         DECR    r0x1004
                      00178 ;;[ICODE] ../libsdcc/_moduint.c:50:      goto _whilecontinue_1($8)
0031   A000           00179         GOTO    _00112_DS_
                      00180 ;;[ICODE] ../libsdcc/_moduint.c:50:  _whilebreak_1($10) :
                      00181 ;;[ICODE] ../libsdcc/_moduint.c:53:     ret iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ __moduint_a_1_1}[r0x1000 r0x1001 ]
0032                  00182 _00114_DS_
                      00183 ;       .line   53; "../libsdcc/_moduint.c"     return a;
0032   5800           00184         MOVAR   r0x1001
0033   5600           00185         MOVRA   STK00
0034   5800           00186         MOVAR   r0x1000
                      00187 ;;[ICODE] ../libsdcc/_moduint.c:53:  _return($11) :
                      00188 ;;[ICODE] ../libsdcc/_moduint.c:53:     eproc __moduint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int function ( unsigned-int fixed, unsigned-int fixed) fixed}
0035                  00189 _00115_DS_
0035   000C           00190         RETURN  
                      00191 ; exit point of __moduint
                      00192 
                      00193 
                      00194 ;       code size estimation:
                      00195 ;          54+    0 =    54 instructions (  108 byte)
                      00196 
                      00197         end
gpasm-2.0.0_beta2 (Nov  6 2017)_moduint.asm       2017-12-7  13:58:45          PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

ADCR0                             000001EC
ADCR1                             000001ED
ADEOC                             00000001
ADIE                              00000006
ADIF                              00000006
ADIOS0                            00000000
ADIOS1                            00000001
ADIOS3                            00000003
ADIOS4                            00000004
ADIOS5                            00000005
ADIOS7                            00000007
ADOIS2                            00000002
ADOIS6                            00000006
ADON                              00000000
ADRH                              000001EE
ADRL                              000001EF
BUZ0OE                            00000005
BUZ1OE                            00000005
C                                 00000000
CLKS                              00000002
DC                                00000001
FSR                               000001B4
FSR0                              000001B4
FSR1                              000001B5
GIE                               00000007
HAAS                              00000006
HBB                               00000005
HCF                               00000007
HEN                               00000001
HFEN                              00000000
HIBYTE                            000001B3
HTX                               00000004
I2CADDR                           000001F1
I2CCR                             000001F0
I2CDATA                           000001F2
I2CIE                             00000005
I2CIF                             00000005
INDF                              000001B0
INDF0                             000001B0
INDF1                             000001B1
INDF2                             000001B2
INDF3                             000001B9
INT0IE                            00000002
INT0IF                            00000002
INT1IE                            00000003
INT1IF                            00000003
INTE                              000001BA
INTF                              000001BB
IOP0                              000001C0
IOP1                              000001C4
IOP2                              000001C8
IOP3                              000001CC
LFEN                              00000001
MCR                               000001B8
OEP0                              000001C1
OEP1                              000001C5
OEP2                              000001C9
OEP3                              000001CD
OSCM                              000001BC
P00                               00000000
P00OE                             00000000
P00PU                             00000000
P01                               00000001
P01OE                             00000001
P01PU                             00000001
P02                               00000002
P02OE                             00000002
P02PU                             00000002
P03                               00000003
P03OE                             00000003
P03PU                             00000003
P04                               00000004
P04OE                             00000004
P04PU                             00000004
P05                               00000005
P05OE                             00000005
P05PU                             00000005
P06                               00000006
P06OE                             00000006
P07                               00000007
P07OE                             00000007
P10                               00000000
P10OE                             00000000
P10PU                             00000000
P11                               00000001
P11OE                             00000001
P11PU                             00000001
P12                               00000002
P12OE                             00000002
P12PU                             00000002
P13                               00000003
P13OE                             00000003
P13PU                             00000003
P14                               00000004
P14OE                             00000004
P14PU                             00000004
P15                               00000005
P15OE                             00000005
P15PU                             00000005
P16                               00000006
P16OE                             00000006
P16PU                             00000006
P17                               00000007
P17OE                             00000007
P17PU                             00000007
P20                               00000000
P20OE                             00000000
P20PU                             00000000
P21                               00000001
P21OE                             00000001
P21PU                             00000001
P22                               00000002
P22OE                             00000002
P22PU                             00000002
P23                               00000003
P23OE                             00000003
P23PU                             00000003
P24                               00000004
P24OE                             00000004
P24PU                             00000004
P25                               00000005
P25OE                             00000005
P25PU                             00000005
P26                               00000006
P26OE                             00000006
P26PU                             00000006
P27                               00000007
P27OE                             00000007
P27PU                             00000007
P30                               00000000
P30OE                             00000000
P30PU                             00000000
P31                               00000001
P31OE                             00000001
P31PU                             00000001
PCL                               000001B6
PD                                00000004
PUP0                              000001C2
PUP1                              000001C6
PUP2                              000001CA
PUP3                              000001CE
PWM0OE                            00000006
PWM1OE                            00000006
RXAK                              00000000
SRW                               00000002
STATUS                            000001B7
STBH                              00000004
STBL                              00000005
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
T0CNT                             000001D1
T0CR                              000001D0
T0DATA                            000001D3
T0IE                              00000000
T0IF                              00000000
T0LOAD                            000001D2
T1CNT                             000001D5
T1CR                              000001D4
T1DATA                            000001D7
T1IE                              00000001
T1IF                              00000001
T1LOAD                            000001D6
T2CNTH                            000001D9
T2CNTL                            000001DA
T2CR                              000001D8
T2IE                              00000004
T2IF                              00000004
T2LOADH                           000001DB
T2LOADL                           000001DC
T2MOD                             00000005
TC0EN                             00000007
TC1EN                             00000007
TC2EN                             00000007
TK0CLR                            00000003
TK0CNTH                           000001E2
TK0CNTL                           000001E3
TK0CRH                            000001E0
TK0CRL                            000001E1
TK0IE                             00000006
TK0IF                             00000007
TK0JE                             00000005
TK0RCE                            00000004
TK1CLR                            00000003
TK1CNTH                           000001E6
TK1CNTL                           000001E7
TK1CRH                            000001E4
TK1CRL                            000001E5
TK1IE                             00000006
TK1IF                             00000007
TK1JE                             00000005
TK1RCE                            00000004
TK2CLR                            00000003
TK2CNTH                           000001EA
TK2CNTL                           000001EB
TK2CRH                            000001E8
TK2CRL                            000001E9
TK2IE                             00000006
TK2IF                             00000007
TK2JE                             00000005
TK2RCE                            00000004
TO                                00000005
TXAK                              00000003
Z                                 00000002
_00107_DS_                        00000011
_00111_DS_                        0000002D
_00112_DS_                        0000001B
_00114_DS_                        00000032
_00115_DS_                        00000035
_00119_DS_                        0000000F
_00131_DS_                        00000025
_CONFIG0                          00008000
_CONFIG1                          00008001
_CP_ALL                           00007FFF
_FCPU_128T                        0000FFEF
_FCPU_16T                         0000FFBF
_FCPU_256T                        0000FFFF
_FCPU_2T                          0000FF8F
_FCPU_32T                         0000FFCF
_FCPU_4T                          0000FF9F
_FCPU_64T                         0000FFDF
_FCPU_8T                          0000FFAF
_HRC_LRC                          0000FCFF
_HRC_LXT                          0000FDFF
_HXT_LRC                          0000FEFF
_MCLR_OFF                         0000FF7F
_MCLR_ON                          0000FFFF
_PTWRT_16_1024                    0000FFF7
_PTWRT_16_16                      0000DFF7
_PTWRT_256_256                    0000DFFF
_PTWRT_256_4096                   0000FFFF
_PTWRT_4_4                        0000DFF3
_PTWRT_4_512                      0000FFF3
_PTWRT_64_2048                    0000FFFB
_PTWRT_64_64                      0000DFFB
_VLVR_160                         0000E3FF
_VLVR_185                         0000E7FF
_VLVR_205                         0000EBFF
_VLVR_218                         0000EFFF
_VLVR_232                         0000F3FF
_VLVR_245                         0000F7FF
_VLVR_305                         0000FBFF
_VLVR_360                         0000FFFF
_WDT_ALWAYS_OFF                   0000FFFC
_WDT_ALWAYS_ON                    0000FFFF
_WDT_SLEEP_OFF                    0000FFFD
__32P64                           00000001
__moduint                         00000000
r0x1000                           00000001
r0x1001                           00000000
r0x1002                           00000003
r0x1003                           00000002
r0x1004                           00000004
r0x1006                           00000005

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

