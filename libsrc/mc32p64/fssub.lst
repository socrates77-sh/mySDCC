gpasm-2.0.0_beta2 (Aug 27 2017)fssub.asm          2017-9-12  18:09:53          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : SinoMCU ANSI-C Compiler
                      00003 ; Version 1.0.0 (Sep 11 2017) (MINGW32)
                      00004 ; This file was generated Tue Sep 12 18:09:53 2017
                      00005 ;--------------------------------------------------------
                      00006 ; MC30/MC32 port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc/fssub.c"
                      00009         list    p=3264
                      00010         radix dec
                      00011         include "3264.inc"
                      00001                 LIST
                      00002 ;mc32p64.inc    Standard Header File, Version 1.00 by Sinomcu
                      00374                 LIST
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015         extern  ___uchar2fs
                      00016         extern  ___schar2fs
                      00017         extern  ___uint2fs
                      00018         extern  ___sint2fs
                      00019         extern  ___ulong2fs
                      00020         extern  ___slong2fs
                      00021         extern  ___fs2uchar
                      00022         extern  ___fs2schar
                      00023         extern  ___fs2uint
                      00024         extern  ___fs2sint
                      00025         extern  ___fs2ulong
                      00026         extern  ___fs2slong
                      00027         extern  ___fsadd
                      00028         extern  ___fsmul
                      00029         extern  ___fsdiv
                      00030         extern  ___fslt
                      00031         extern  ___fseq
                      00032         extern  ___fsneq
                      00033         extern  ___fsgt
                      00034 
                      00035         extern PSAVE
                      00036         extern SSAVE
                      00037         extern WSAVE
                      00038         extern STK12
                      00039         extern STK11
                      00040         extern STK10
                      00041         extern STK09
                      00042         extern STK08
                      00043         extern STK07
                      00044         extern STK06
                      00045         extern STK05
                      00046         extern STK04
                      00047         extern STK03
                      00048         extern STK02
                      00049         extern STK01
                      00050         extern STK00
                      00051 ;--------------------------------------------------------
                      00052 ; global declarations
                      00053 ;--------------------------------------------------------
                      00054         global  ___fssub
                      00055 
                      00056 ;--------------------------------------------------------
                      00057 ; global definitions
                      00058 ;--------------------------------------------------------
                      00059 ;--------------------------------------------------------
                      00060 ; absolute symbol definitions
                      00061 ;--------------------------------------------------------
                      00062 ;--------------------------------------------------------
                      00063 ; compiler-defined variables
                      00064 ;--------------------------------------------------------
                      00065 UDL_fssub_0     udata
0000                  00066 r0x100B res     1
0000                  00067 r0x100A res     1
0001                  00068 r0x1009 res     1
0001                  00069 r0x1008 res     1
0002                  00070 r0x100F res     1
0002                  00071 r0x100E res     1
0003                  00072 r0x100D res     1
0003                  00073 r0x100C res     1
0004                  00074 ___fssub_fl1_1_22       res     4
0006                  00075 ___fssub_fl2_1_22       res     4
                      00076 ;--------------------------------------------------------
                      00077 ; initialized data
                      00078 ;--------------------------------------------------------
                      00079 
                      00080 ;@Allocation info for local variables in function '__fssub'
                      00081 ;@__fssub __uchar2fs                Allocated to registers ;size:2
                      00082 ;@__fssub __schar2fs                Allocated to registers ;size:2
                      00083 ;@__fssub __uint2fs                 Allocated to registers ;size:2
                      00084 ;@__fssub __sint2fs                 Allocated to registers ;size:2
                      00085 ;@__fssub __ulong2fs                Allocated to registers ;size:2
                      00086 ;@__fssub __slong2fs                Allocated to registers ;size:2
                      00087 ;@__fssub __fs2uchar                Allocated to registers ;size:2
                      00088 ;@__fssub __fs2schar                Allocated to registers ;size:2
                      00089 ;@__fssub __fs2uint                 Allocated to registers ;size:2
                      00090 ;@__fssub __fs2sint                 Allocated to registers ;size:2
                      00091 ;@__fssub __fs2ulong                Allocated to registers ;size:2
                      00092 ;@__fssub __fs2slong                Allocated to registers ;size:2
                      00093 ;@__fssub __fsadd                   Allocated to registers ;size:2
                      00094 ;@__fssub __fsmul                   Allocated to registers ;size:2
                      00095 ;@__fssub __fsdiv                   Allocated to registers ;size:2
                      00096 ;@__fssub __fslt                    Allocated to registers ;size:2
                      00097 ;@__fssub __fseq                    Allocated to registers ;size:2
                      00098 ;@__fssub __fsneq                   Allocated to registers ;size:2
                      00099 ;@__fssub __fsgt                    Allocated to registers ;size:2
                      00100 ;@__fssub __fsadd                   Allocated to registers ;size:2
                      00101 ;@__fssub a2                        Allocated to registers r0x100F r0x100E r0x100D r0x100C ;size:4
                      00102 ;@__fssub a1                        Allocated to registers r0x100B r0x100A r0x1009 r0x1008 ;size:4
                      00103 ;@__fssub fl1                       Allocated to registers ;size:4
                      00104 ;@__fssub fl2                       Allocated to registers ;size:4
                      00105 ;@end Allocation info for local variables in function '__fssub';
                      00106 
                      00107 ;--------------------------------------------------------
                      00108 ; overlayable items in internal ram 
                      00109 ;--------------------------------------------------------
                      00110 ;       udata_ovr
                      00111 ;--------------------------------------------------------
                      00112 ; code
                      00113 ;--------------------------------------------------------
                      00114 code_fssub      code
                      00115 ;***
                      00116 ;  pBlock Stats: dbName = C
                      00117 ;***
                      00118 ;entry:  ___fssub       ;Function start
                      00119 ; 2 exit points
                      00120 ;has an exit
                      00121 ;functions called:
                      00122 ;   ___fsadd
                      00123 ;   ___fsadd
                      00124 ;15 compiler assigned registers:
                      00125 ;   r0x1008
                      00126 ;   STK00
                      00127 ;   r0x1009
                      00128 ;   STK01
                      00129 ;   r0x100A
                      00130 ;   STK02
                      00131 ;   r0x100B
                      00132 ;   STK03
                      00133 ;   r0x100C
                      00134 ;   STK04
                      00135 ;   r0x100D
                      00136 ;   STK05
                      00137 ;   r0x100E
                      00138 ;   STK06
                      00139 ;   r0x100F
                      00140 ;; Starting pCode block
                      00141 ;;[ICODE] ../libsdcc/fssub.c:55:  _entry($6) :
                      00142 ;;[ICODE] ../libsdcc/fssub.c:55:        proc ___fssub [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0000                  00143 ___fssub        ;Function start
                      00144 ; 2 exit points
                      00145 ;;[ICODE] ../libsdcc/fssub.c:55: iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fssub_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ] = recv ___fssub [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
                      00146 ;       .line   55; "../libsdcc/fssub.c"        float __fssub (float a1, float a2) _FS_REENTRANT
0000   5600           00147         MOVRA   r0x1008
0001   5800           00148         MOVAR   STK00
0002   5600           00149         MOVRA   r0x1009
0003   5800           00150         MOVAR   STK01
0004   5600           00151         MOVRA   r0x100A
0005   5800           00152         MOVAR   STK02
0006   5600           00153         MOVRA   (___fssub_fl1_1_22 + 0)
0007   5600           00154         MOVRA   r0x100B
                      00155 ;;[ICODE] ../libsdcc/fssub.c:55: iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fssub_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ] = recv ___fssub [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0008   5800           00156         MOVAR   STK03
0009   5600           00157         MOVRA   r0x100C
000A   5800           00158         MOVAR   STK04
000B   5600           00159         MOVRA   r0x100D
000C   5800           00160         MOVAR   STK05
000D   5600           00161         MOVRA   r0x100E
000E   5800           00162         MOVAR   STK06
000F   5600           00163         MOVRA   r0x100F
                      00164 ;;[ICODE] ../libsdcc/fssub.c:59:        iTemp2 [k7 lr5:6 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fssub_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00165 ;;[ICODE] ../libsdcc/fssub.c:59:        *(iTemp2 [k7 lr5:6 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fssub_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00166 ;;gen.c:6371: size=3/4, offset=0, AOP_TYPE(res)=8
                      00167 ;;109   MOVAR   r0x100B
                      00168 ;;gen.c:6371: size=2/4, offset=1, AOP_TYPE(res)=8
                      00169 ;       .line   59; "../libsdcc/fssub.c"        fl1.f = a1;
0010   5800           00170         MOVAR   r0x100A
0011   5600           00171         MOVRA   (___fssub_fl1_1_22 + 1)
                      00172 ;;gen.c:6371: size=1/4, offset=2, AOP_TYPE(res)=8
0012   5800           00173         MOVAR   r0x1009
0013   5600           00174         MOVRA   (___fssub_fl1_1_22 + 2)
                      00175 ;;gen.c:6371: size=0/4, offset=3, AOP_TYPE(res)=8
0014   5800           00176         MOVAR   r0x1008
0015   5600           00177         MOVRA   (___fssub_fl1_1_22 + 3)
                      00178 ;;[ICODE] ../libsdcc/fssub.c:60:        iTemp4 [k11 lr7:8 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fssub_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00179 ;;[ICODE] ../libsdcc/fssub.c:60:        *(iTemp4 [k11 lr7:8 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fssub_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ]
                      00180 ;;gen.c:6371: size=3/4, offset=0, AOP_TYPE(res)=8
                      00181 ;       .line   60; "../libsdcc/fssub.c"        fl2.f = a2;
0016   5800           00182         MOVAR   r0x100F
0017   5600           00183         MOVRA   (___fssub_fl2_1_22 + 0)
                      00184 ;;gen.c:6371: size=2/4, offset=1, AOP_TYPE(res)=8
0018   5800           00185         MOVAR   r0x100E
0019   5600           00186         MOVRA   (___fssub_fl2_1_22 + 1)
                      00187 ;;gen.c:6371: size=1/4, offset=2, AOP_TYPE(res)=8
001A   5800           00188         MOVAR   r0x100D
001B   5600           00189         MOVRA   (___fssub_fl2_1_22 + 2)
                      00190 ;;gen.c:6371: size=0/4, offset=3, AOP_TYPE(res)=8
001C   5800           00191         MOVAR   r0x100C
001D   5600           00192         MOVRA   (___fssub_fl2_1_22 + 3)
                      00193 ;;[ICODE] ../libsdcc/fssub.c:63:        iTemp6 [k14 lr9:10 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fssub_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00194 ;;[ICODE] ../libsdcc/fssub.c:63:        iTemp8 [k17 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp6 [k14 lr9:10 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00195 ;       .line   63; "../libsdcc/fssub.c"        if (!fl2.l)
001E   5800           00196         MOVAR   (___fssub_fl2_1_22 + 0)
001F   5600           00197         MOVRA   r0x100B
0020   5800           00198         MOVAR   (___fssub_fl2_1_22 + 1)
0021   5600           00199         MOVRA   r0x100A
0022   5800           00200         MOVAR   (___fssub_fl2_1_22 + 2)
0023   5600           00201         MOVRA   r0x1009
0024   5800           00202         MOVAR   (___fssub_fl2_1_22 + 3)
0025   5600           00203         MOVRA   r0x1008
                      00204 ;;[ICODE] ../libsdcc/fssub.c:63:        if iTemp8 [k17 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] != 0 goto _iffalse_0($2)
0026   5800           00205         MOVAR   r0x100B
0027   5C00           00206         ORAR    r0x100A
0028   5C00           00207         ORAR    r0x1009
0029   5C00           00208         ORAR    r0x1008
002A   E5B7           00209         JBSET   STATUS,2
002B   A000           00210         GOTO    _00106_DS_
                      00211 ;;[ICODE] ../libsdcc/fssub.c:64:        iTemp9 [k18 lr12:13 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fssub_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00212 ;;[ICODE] ../libsdcc/fssub.c:64:        iTemp11 [k21 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp9 [k18 lr12:13 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00213 ;       .line   64; "../libsdcc/fssub.c"        return (fl1.f);
002C   5800           00214         MOVAR   (___fssub_fl1_1_22 + 0)
002D   5600           00215         MOVRA   r0x100B
002E   5800           00216         MOVAR   (___fssub_fl1_1_22 + 1)
002F   5600           00217         MOVRA   r0x100A
0030   5800           00218         MOVAR   (___fssub_fl1_1_22 + 2)
0031   5600           00219         MOVRA   r0x1009
0032   5800           00220         MOVAR   (___fssub_fl1_1_22 + 3)
0033   5600           00221         MOVRA   r0x1008
                      00222 ;;[ICODE] ../libsdcc/fssub.c:64:        ret iTemp11 [k21 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0034   5800           00223         MOVAR   r0x100B
0035   5600           00224         MOVRA   STK02
0036   5800           00225         MOVAR   r0x100A
0037   5600           00226         MOVRA   STK01
0038   5800           00227         MOVAR   r0x1009
0039   5600           00228         MOVRA   STK00
003A   5800           00229         MOVAR   r0x1008
003B   A000           00230         GOTO    _00109_DS_
                      00231 ;;[ICODE] ../libsdcc/fssub.c:64:  _iffalse_0($2) :
                      00232 ;;[ICODE] ../libsdcc/fssub.c:65:        iTemp12 [k22 lr16:17 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fssub_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00233 ;;[ICODE] ../libsdcc/fssub.c:65:        iTemp14 [k25 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp12 [k22 lr16:17 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
003C                  00234 _00106_DS_
                      00235 ;       .line   65; "../libsdcc/fssub.c"        if (!fl1.l)
003C   5800           00236         MOVAR   (___fssub_fl1_1_22 + 0)
003D   5600           00237         MOVRA   r0x100B
003E   5800           00238         MOVAR   (___fssub_fl1_1_22 + 1)
003F   5600           00239         MOVRA   r0x100A
0040   5800           00240         MOVAR   (___fssub_fl1_1_22 + 2)
0041   5600           00241         MOVRA   r0x1009
0042   5800           00242         MOVAR   (___fssub_fl1_1_22 + 3)
0043   5600           00243         MOVRA   r0x1008
                      00244 ;;[ICODE] ../libsdcc/fssub.c:65:        if iTemp14 [k25 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] != 0 goto _iffalse_1($4)
0044   5800           00245         MOVAR   r0x100B
0045   5C00           00246         ORAR    r0x100A
0046   5C00           00247         ORAR    r0x1009
0047   5C00           00248         ORAR    r0x1008
0048   E5B7           00249         JBSET   STATUS,2
0049   A000           00250         GOTO    _00108_DS_
                      00251 ;;[ICODE] ../libsdcc/fssub.c:66:        iTemp15 [k26 lr19:20 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fssub_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00252 ;;[ICODE] ../libsdcc/fssub.c:66:        iTemp17 [k29 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp15 [k26 lr19:20 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00253 ;       .line   66; "../libsdcc/fssub.c"        return (-fl2.f);
004A   5800           00254         MOVAR   (___fssub_fl2_1_22 + 0)
004B   5600           00255         MOVRA   r0x100B
004C   5800           00256         MOVAR   (___fssub_fl2_1_22 + 1)
004D   5600           00257         MOVRA   r0x100A
004E   5800           00258         MOVAR   (___fssub_fl2_1_22 + 2)
004F   5600           00259         MOVRA   r0x1009
0050   5800           00260         MOVAR   (___fssub_fl2_1_22 + 3)
0051   5600           00261         MOVRA   r0x1008
                      00262 ;;[ICODE] ../libsdcc/fssub.c:66:        iTemp18 [k30 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = - iTemp17 [k29 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0052   5800           00263         MOVAR   r0x1008
0053   3980           00264         XORAI   0x80
0054   5600           00265         MOVRA   r0x1008
0055   5800           00266         MOVAR   r0x1009
0056   5600           00267         MOVRA   r0x1009
0057   5800           00268         MOVAR   r0x100A
0058   5600           00269         MOVRA   r0x100A
0059   5800           00270         MOVAR   r0x100B
005A   5600           00271         MOVRA   r0x100B
                      00272 ;;[ICODE] ../libsdcc/fssub.c:66:        ret iTemp18 [k30 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
005B   5800           00273         MOVAR   r0x100B
005C   5600           00274         MOVRA   STK02
005D   5800           00275         MOVAR   r0x100A
005E   5600           00276         MOVRA   STK01
005F   5800           00277         MOVAR   r0x1009
0060   5600           00278         MOVRA   STK00
0061   5800           00279         MOVAR   r0x1008
0062   A000           00280         GOTO    _00109_DS_
                      00281 ;;[ICODE] ../libsdcc/fssub.c:66:  _iffalse_1($4) :
                      00282 ;;[ICODE] ../libsdcc/fssub.c:69:        iTemp19 [k31 lr24:29 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fssub_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00283 ;;[ICODE] ../libsdcc/fssub.c:69:        iTemp21 [k34 lr25:26 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fssub_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00284 ;;[ICODE] ../libsdcc/fssub.c:69:        iTemp23 [k37 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp21 [k34 lr25:26 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0063                  00285 _00108_DS_
                      00286 ;       .line   69; "../libsdcc/fssub.c"        fl2.l ^= SIGNBIT;
0063   5800           00287         MOVAR   (___fssub_fl2_1_22 + 0)
0064   5600           00288         MOVRA   r0x100F
0065   5600           00289         MOVRA   r0x100B
0066   5800           00290         MOVAR   (___fssub_fl2_1_22 + 1)
0067   5600           00291         MOVRA   r0x100E
0068   5600           00292         MOVRA   r0x100A
0069   5800           00293         MOVAR   (___fssub_fl2_1_22 + 2)
006A   5600           00294         MOVRA   r0x100D
006B   5600           00295         MOVRA   r0x1009
006C   5800           00296         MOVAR   (___fssub_fl2_1_22 + 3)
006D   5600           00297         MOVRA   r0x100C
006E   5600           00298         MOVRA   r0x1008
                      00299 ;;[ICODE] ../libsdcc/fssub.c:69:        iTemp24 [k38 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1004 r0x1005 r0x1006 r0x1007 ] = (unsigned-long-int register)iTemp23 [k37 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00300 ;;106   MOVAR   r0x100B
                      00301 ;;107   MOVAR   r0x100A
                      00302 ;;108   MOVAR   r0x1009
                      00303 ;;105   MOVAR   r0x1008
                      00304 ;;[ICODE] ../libsdcc/fssub.c:69:        iTemp25 [k39 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1001 r0x1002 r0x1003 ] = iTemp24 [k38 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1004 r0x1005 r0x1006 r0x1007 ] ^ 0x80000000 {unsigned-long-int literal}
                      00305 ;;100   MOVAR   r0x100F
                      00306 ;;102   MOVAR   r0x100E
                      00307 ;;104   MOVAR   r0x100D
006F   3C80           00308         MOVAI   0x80
0070   4000           00309         XORAR   r0x100C
0071   5600           00310         MOVRA   r0x1008
                      00311 ;;[ICODE] ../libsdcc/fssub.c:69:        *(iTemp19 [k31 lr24:29 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat]) := iTemp25 [k39 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00312 ;;gen.c:6371: size=3/4, offset=0, AOP_TYPE(res)=8
                      00313 ;;99    MOVAR   r0x100B
0072   5800           00314         MOVAR   r0x100F
0073   5600           00315         MOVRA   r0x100B
0074   5600           00316         MOVRA   (___fssub_fl2_1_22 + 0)
                      00317 ;;gen.c:6371: size=2/4, offset=1, AOP_TYPE(res)=8
                      00318 ;;101   MOVAR   r0x100A
0075   5800           00319         MOVAR   r0x100E
0076   5600           00320         MOVRA   r0x100A
0077   5600           00321         MOVRA   (___fssub_fl2_1_22 + 1)
                      00322 ;;gen.c:6371: size=1/4, offset=2, AOP_TYPE(res)=8
                      00323 ;;103   MOVAR   r0x1009
0078   5800           00324         MOVAR   r0x100D
0079   5600           00325         MOVRA   r0x1009
007A   5600           00326         MOVRA   (___fssub_fl2_1_22 + 2)
                      00327 ;;gen.c:6371: size=0/4, offset=3, AOP_TYPE(res)=8
007B   5800           00328         MOVAR   r0x1008
007C   5600           00329         MOVRA   (___fssub_fl2_1_22 + 3)
                      00330 ;;[ICODE] ../libsdcc/fssub.c:70:        iTemp26 [k40 lr30:31 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fssub_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00331 ;;[ICODE] ../libsdcc/fssub.c:70:        iTemp28 [k43 lr31:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp26 [k40 lr30:31 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00332 ;       .line   70; "../libsdcc/fssub.c"        return fl1.f + fl2.f; 
007D   5800           00333         MOVAR   (___fssub_fl1_1_22 + 0)
007E   5600           00334         MOVRA   r0x100B
007F   5800           00335         MOVAR   (___fssub_fl1_1_22 + 1)
0080   5600           00336         MOVRA   r0x100A
0081   5800           00337         MOVAR   (___fssub_fl1_1_22 + 2)
0082   5600           00338         MOVRA   r0x1009
0083   5800           00339         MOVAR   (___fssub_fl1_1_22 + 3)
0084   5600           00340         MOVRA   r0x1008
                      00341 ;;[ICODE] ../libsdcc/fssub.c:70:        iTemp29 [k44 lr32:33 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fssub_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00342 ;;[ICODE] ../libsdcc/fssub.c:70:        iTemp31 [k47 lr33:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-float fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] = @[iTemp29 [k44 lr32:33 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0085   5800           00343         MOVAR   (___fssub_fl2_1_22 + 0)
0086   5600           00344         MOVRA   r0x100F
0087   5800           00345         MOVAR   (___fssub_fl2_1_22 + 1)
0088   5600           00346         MOVRA   r0x100E
0089   5800           00347         MOVAR   (___fssub_fl2_1_22 + 2)
008A   5600           00348         MOVRA   r0x100D
008B   5800           00349         MOVAR   (___fssub_fl2_1_22 + 3)
008C   5600           00350         MOVRA   r0x100C
                      00351 ;;[ICODE] ../libsdcc/fssub.c:70:        send iTemp28 [k43 lr31:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]{argreg = 1}
                      00352 ;;[ICODE] ../libsdcc/fssub.c:70:        send iTemp31 [k47 lr33:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-float fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ]{argreg = 1}
                      00353 ;;[ICODE] ../libsdcc/fssub.c:70:        iTemp32 [k48 lr36:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = call ___fsadd [k49 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
008D   5800           00354         MOVAR   r0x100F
008E   5600           00355         MOVRA   STK06
008F   5800           00356         MOVAR   r0x100E
0090   5600           00357         MOVRA   STK05
0091   5800           00358         MOVAR   r0x100D
0092   5600           00359         MOVRA   STK04
0093   5800           00360         MOVAR   r0x100C
0094   5600           00361         MOVRA   STK03
0095   5800           00362         MOVAR   r0x100B
0096   5600           00363         MOVRA   STK02
0097   5800           00364         MOVAR   r0x100A
0098   5600           00365         MOVRA   STK01
0099   5800           00366         MOVAR   r0x1009
009A   5600           00367         MOVRA   STK00
009B   5800           00368         MOVAR   r0x1008
009C   8000           00369         CALL    ___fsadd
009D   5600           00370         MOVRA   r0x1008
009E   5800           00371         MOVAR   STK00
009F   5600           00372         MOVRA   r0x1009
00A0   5800           00373         MOVAR   STK01
00A1   5600           00374         MOVRA   r0x100A
00A2   5800           00375         MOVAR   STK02
00A3   5600           00376         MOVRA   r0x100B
                      00377 ;;[ICODE] ../libsdcc/fssub.c:70:        ret iTemp32 [k48 lr36:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
00A4   5800           00378         MOVAR   r0x100B
00A5   5600           00379         MOVRA   STK02
00A6   5800           00380         MOVAR   r0x100A
00A7   5600           00381         MOVRA   STK01
00A8   5800           00382         MOVAR   r0x1009
00A9   5600           00383         MOVRA   STK00
00AA   5800           00384         MOVAR   r0x1008
                      00385 ;;[ICODE] ../libsdcc/fssub.c:70:  _return($5) :
                      00386 ;;[ICODE] ../libsdcc/fssub.c:70:        eproc ___fssub [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
00AB                  00387 _00109_DS_
00AB   000C           00388         RETURN  
                      00389 ; exit point of ___fssub
                      00390 
                      00391 
                      00392 ;       code size estimation:
                      00393 ;         172+    0 =   172 instructions (  344 byte)
                      00394 
                      00395         end
gpasm-2.0.0_beta2 (Aug 27 2017)fssub.asm          2017-9-12  18:09:53          PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

ADCR0                             000001EC
ADCR1                             000001ED
ADEOC                             00000001
ADIE                              00000006
ADIF                              00000006
ADIOS0                            00000000
ADIOS1                            00000001
ADIOS3                            00000003
ADIOS4                            00000004
ADIOS5                            00000005
ADIOS7                            00000007
ADOIS2                            00000002
ADOIS6                            00000006
ADON                              00000000
ADRH                              000001EE
ADRL                              000001EF
BUZ0OE                            00000005
BUZ1OE                            00000005
C                                 00000000
CLKS                              00000002
DC                                00000001
FSR                               000001B4
FSR0                              000001B4
FSR1                              000001B5
GIE                               00000007
HAAS                              00000006
HBB                               00000005
HCF                               00000007
HEN                               00000001
HFEN                              00000000
HIBYTE                            000001B3
HTX                               00000004
I2CADDR                           000001F1
I2CCR                             000001F0
I2CDATA                           000001F2
I2CIE                             00000005
I2CIF                             00000005
INDF                              000001B0
INDF0                             000001B0
INDF1                             000001B1
INDF2                             000001B2
INDF3                             000001B9
INT0IE                            00000002
INT0IF                            00000002
INT1IE                            00000003
INT1IF                            00000003
INTE                              000001BA
INTF                              000001BB
IOP0                              000001C0
IOP1                              000001C4
IOP2                              000001C8
IOP3                              000001CC
LFEN                              00000001
MCR                               000001B8
OEP0                              000001C1
OEP1                              000001C5
OEP2                              000001C9
OEP3                              000001CD
OSCM                              000001BC
P00                               00000000
P00OE                             00000000
P00PU                             00000000
P01                               00000001
P01OE                             00000001
P01PU                             00000001
P02                               00000002
P02OE                             00000002
P02PU                             00000002
P03                               00000003
P03OE                             00000003
P03PU                             00000003
P04                               00000004
P04OE                             00000004
P04PU                             00000004
P05                               00000005
P05OE                             00000005
P05PU                             00000005
P06                               00000006
P06OE                             00000006
P07                               00000007
P07OE                             00000007
P10                               00000000
P10OE                             00000000
P10PU                             00000000
P11                               00000001
P11OE                             00000001
P11PU                             00000001
P12                               00000002
P12OE                             00000002
P12PU                             00000002
P13                               00000003
P13OE                             00000003
P13PU                             00000003
P14                               00000004
P14OE                             00000004
P14PU                             00000004
P15                               00000005
P15OE                             00000005
P15PU                             00000005
P16                               00000006
P16OE                             00000006
P16PU                             00000006
P17                               00000007
P17OE                             00000007
P17PU                             00000007
P20                               00000000
P20OE                             00000000
P20PU                             00000000
P21                               00000001
P21OE                             00000001
P21PU                             00000001
P22                               00000002
P22OE                             00000002
P22PU                             00000002
P23                               00000003
P23OE                             00000003
P23PU                             00000003
P24                               00000004
P24OE                             00000004
P24PU                             00000004
P25                               00000005
P25OE                             00000005
P25PU                             00000005
P26                               00000006
P26OE                             00000006
P26PU                             00000006
P27                               00000007
P27OE                             00000007
P27PU                             00000007
P30                               00000000
P30OE                             00000000
P30PU                             00000000
P31                               00000001
P31OE                             00000001
P31PU                             00000001
PCL                               000001B6
PD                                00000004
PSAVE                             00000000
PUP0                              000001C2
PUP1                              000001C6
PUP2                              000001CA
PUP3                              000001CE
PWM0OE                            00000006
PWM1OE                            00000006
RXAK                              00000000
SRW                               00000002
SSAVE                             00000000
STATUS                            000001B7
STBH                              00000004
STBL                              00000005
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
STK07                             00000000
STK08                             00000000
STK09                             00000000
STK10                             00000000
STK11                             00000000
STK12                             00000000
T0CNT                             000001D1
T0CR                              000001D0
T0DATA                            000001D3
T0IE                              00000000
T0IF                              00000000
T0LOAD                            000001D2
T1CNT                             000001D5
T1CR                              000001D4
T1DATA                            000001D7
T1IE                              00000001
T1IF                              00000001
T1LOAD                            000001D6
T2CNTH                            000001D9
T2CNTL                            000001DA
T2CR                              000001D8
T2IE                              00000004
T2IF                              00000004
T2LOADH                           000001DB
T2LOADL                           000001DC
T2MOD                             00000005
TC0EN                             00000007
TC1EN                             00000007
TC2EN                             00000007
TK0CLR                            00000003
TK0CNTH                           000001E2
TK0CNTL                           000001E3
TK0CRH                            000001E0
TK0CRL                            000001E1
TK0IE                             00000006
TK0IF                             00000007
TK0JE                             00000005
TK0RCE                            00000004
TK1CLR                            00000003
TK1CNTH                           000001E6
TK1CNTL                           000001E7
TK1CRH                            000001E4
TK1CRL                            000001E5
TK1IE                             00000006
TK1IF                             00000007
TK1JE                             00000005
TK1RCE                            00000004
TK2CLR                            00000003
TK2CNTH                           000001EA
TK2CNTL                           000001EB
TK2CRH                            000001E8
TK2CRL                            000001E9
TK2IE                             00000006
TK2IF                             00000007
TK2JE                             00000005
TK2RCE                            00000004
TO                                00000005
TXAK                              00000003
WSAVE                             00000000
Z                                 00000002
_00106_DS_                        0000003C
_00108_DS_                        00000063
_00109_DS_                        000000AB
_CONFIG0                          00008000
_CONFIG1                          00008001
_CP_ALL                           00007FFF
_FCPU_128T                        0000FFEF
_FCPU_16T                         0000FFBF
_FCPU_256T                        0000FFFF
_FCPU_2T                          0000FF8F
_FCPU_32T                         0000FFCF
_FCPU_4T                          0000FF9F
_FCPU_64T                         0000FFDF
_FCPU_8T                          0000FFAF
_HRC_LRC                          0000FCFF
_HRC_LXT                          0000FDFF
_HXT_LRC                          0000FEFF
_MCLR_OFF                         0000FF7F
_MCLR_ON                          0000FFFF
_PTWRT_16_1024                    0000FFF7
_PTWRT_16_16                      0000DFF7
_PTWRT_256_256                    0000DFFF
_PTWRT_256_4096                   0000FFFF
_PTWRT_4_4                        0000DFF3
_PTWRT_4_512                      0000FFF3
_PTWRT_64_2048                    0000FFFB
_PTWRT_64_64                      0000DFFB
_VLVR_160                         0000E3FF
_VLVR_185                         0000E7FF
_VLVR_205                         0000EBFF
_VLVR_218                         0000EFFF
_VLVR_232                         0000F3FF
_VLVR_245                         0000F7FF
_VLVR_305                         0000FBFF
_VLVR_360                         0000FFFF
_WDT_ALWAYS_OFF                   0000FFFC
_WDT_ALWAYS_ON                    0000FFFF
_WDT_SLEEP_OFF                    0000FFFD
__32P64                           00000001
___fs2schar                       00000000
___fs2sint                        00000000
___fs2slong                       00000000
___fs2uchar                       00000000
___fs2uint                        00000000
___fs2ulong                       00000000
___fsadd                          00000000
___fsdiv                          00000000
___fseq                           00000000
___fsgt                           00000000
___fslt                           00000000
___fsmul                          00000000
___fsneq                          00000000
___fssub                          00000000
___fssub_fl1_1_22                 00000008
___fssub_fl2_1_22                 0000000C
___schar2fs                       00000000
___sint2fs                        00000000
___slong2fs                       00000000
___uchar2fs                       00000000
___uint2fs                        00000000
___ulong2fs                       00000000
r0x1008                           00000003
r0x1009                           00000002
r0x100A                           00000001
r0x100B                           00000000
r0x100C                           00000007
r0x100D                           00000006
r0x100E                           00000005
r0x100F                           00000004

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

