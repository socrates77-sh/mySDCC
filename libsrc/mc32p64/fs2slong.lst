gpasm-2.0.0_beta2 (Nov  6 2017)fs2slong.asm       2017-12-7  13:58:38          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : SinoMCU ANSI-C Compiler
                      00003 ; Version 1.0.0 (Sep 28 2017) (MINGW32)
                      00004 ; This file was generated Thu Dec 07 13:58:37 2017
                      00005 ;--------------------------------------------------------
                      00006 ; MC30/MC32 port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc/fs2slong.c"
                      00009         list    p=3264
                      00010         radix dec
                      00011         include "3264.inc"
                      00001                 LIST
                      00002 ;mc32p64.inc    Standard Header File, Version 1.00 by Sinomcu
                      00374                 LIST
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015         extern  ___uchar2fs
                      00016         extern  ___schar2fs
                      00017         extern  ___uint2fs
                      00018         extern  ___sint2fs
                      00019         extern  ___ulong2fs
                      00020         extern  ___slong2fs
                      00021         extern  ___fs2uchar
                      00022         extern  ___fs2schar
                      00023         extern  ___fs2uint
                      00024         extern  ___fs2sint
                      00025         extern  ___fs2ulong
                      00026         extern  ___fsadd
                      00027         extern  ___fssub
                      00028         extern  ___fsmul
                      00029         extern  ___fsdiv
                      00030         extern  ___fslt
                      00031         extern  ___fseq
                      00032         extern  ___fsneq
                      00033         extern  ___fsgt
                      00034 
                      00035         extern STK06
                      00036         extern STK05
                      00037         extern STK04
                      00038         extern STK03
                      00039         extern STK02
                      00040         extern STK01
                      00041         extern STK00
                      00042 ;--------------------------------------------------------
                      00043 ; global declarations
                      00044 ;--------------------------------------------------------
                      00045         global  ___fs2slong
                      00046 
                      00047 ;--------------------------------------------------------
                      00048 ; global definitions
                      00049 ;--------------------------------------------------------
                      00050 ;--------------------------------------------------------
                      00051 ; absolute symbol definitions
                      00052 ;--------------------------------------------------------
                      00053 ;--------------------------------------------------------
                      00054 ; compiler-defined variables
                      00055 ;--------------------------------------------------------
                      00056 UDL_fs2slong_0  udata
0000                  00057 r0x1003 res     1
0000                  00058 r0x1002 res     1
0001                  00059 r0x1001 res     1
0001                  00060 r0x1000 res     1
0002                  00061 r0x1004 res     1
0002                  00062 r0x1007 res     1
0003                  00063 r0x1006 res     1
0003                  00064 r0x1005 res     1
                      00065 ;--------------------------------------------------------
                      00066 ; initialized data
                      00067 ;--------------------------------------------------------
                      00068 
                      00069 ;@Allocation info for local variables in function '__fs2slong'
                      00070 ;@__fs2slong __uchar2fs                Allocated to registers ;size:2
                      00071 ;@__fs2slong __schar2fs                Allocated to registers ;size:2
                      00072 ;@__fs2slong __uint2fs                 Allocated to registers ;size:2
                      00073 ;@__fs2slong __sint2fs                 Allocated to registers ;size:2
                      00074 ;@__fs2slong __ulong2fs                Allocated to registers ;size:2
                      00075 ;@__fs2slong __slong2fs                Allocated to registers ;size:2
                      00076 ;@__fs2slong __fs2uchar                Allocated to registers ;size:2
                      00077 ;@__fs2slong __fs2schar                Allocated to registers ;size:2
                      00078 ;@__fs2slong __fs2uint                 Allocated to registers ;size:2
                      00079 ;@__fs2slong __fs2sint                 Allocated to registers ;size:2
                      00080 ;@__fs2slong __fs2ulong                Allocated to registers ;size:2
                      00081 ;@__fs2slong __fsadd                   Allocated to registers ;size:2
                      00082 ;@__fs2slong __fssub                   Allocated to registers ;size:2
                      00083 ;@__fs2slong __fsmul                   Allocated to registers ;size:2
                      00084 ;@__fs2slong __fsdiv                   Allocated to registers ;size:2
                      00085 ;@__fs2slong __fslt                    Allocated to registers ;size:2
                      00086 ;@__fs2slong __fseq                    Allocated to registers ;size:2
                      00087 ;@__fs2slong __fsneq                   Allocated to registers ;size:2
                      00088 ;@__fs2slong __fsgt                    Allocated to registers ;size:2
                      00089 ;@__fs2slong __fslt                    Allocated to registers ;size:2
                      00090 ;@__fs2slong f                         Allocated to registers r0x1003 r0x1002 r0x1001 r0x1000 ;size:4
                      00091 ;@end Allocation info for local variables in function '__fs2slong';
                      00092 
                      00093 ;--------------------------------------------------------
                      00094 ; overlayable items in internal ram 
                      00095 ;--------------------------------------------------------
                      00096 ;       udata_ovr
                      00097 ;--------------------------------------------------------
                      00098 ; code
                      00099 ;--------------------------------------------------------
                      00100 code_fs2slong   code
                      00101 ;***
                      00102 ;  pBlock Stats: dbName = C
                      00103 ;***
                      00104 ;entry:  ___fs2slong    ;Function start
                      00105 ; 2 exit points
                      00106 ;has an exit
                      00107 ;functions called:
                      00108 ;   ___fslt
                      00109 ;   ___fs2ulong
                      00110 ;   ___fs2ulong
                      00111 ;   ___fslt
                      00112 ;   ___fs2ulong
                      00113 ;   ___fs2ulong
                      00114 ;15 compiler assigned registers:
                      00115 ;   r0x1000
                      00116 ;   STK00
                      00117 ;   r0x1001
                      00118 ;   STK01
                      00119 ;   r0x1002
                      00120 ;   STK02
                      00121 ;   r0x1003
                      00122 ;   STK06
                      00123 ;   STK05
                      00124 ;   STK04
                      00125 ;   STK03
                      00126 ;   r0x1004
                      00127 ;   r0x1005
                      00128 ;   r0x1006
                      00129 ;   r0x1007
                      00130 ;; Starting pCode block
                      00131 ;;[ICODE] ../libsdcc/fs2slong.c:33:  _entry($7) :
                      00132 ;;[ICODE] ../libsdcc/fs2slong.c:33:     proc ___fs2slong [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( float fixed) fixed}
0000                  00133 ___fs2slong     ;Function start
                      00134 ; 2 exit points
                      00135 ;;[ICODE] ../libsdcc/fs2slong.c:33: iTemp0 [k2 lr3:17 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fs2slong_f_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ] = recv ___fs2slong [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( float fixed) fixed}
                      00136 ;       .line   33; "../libsdcc/fs2slong.c"     signed long __fs2slong (float f) _FS_REENTRANT
0000   5600           00137         MOVRA   r0x1000
0001   5800           00138         MOVAR   STK00
0002   5600           00139         MOVRA   r0x1001
0003   5800           00140         MOVAR   STK01
0004   5600           00141         MOVRA   r0x1002
0005   5800           00142         MOVAR   STK02
0006   5600           00143         MOVRA   r0x1003
                      00144 ;;[ICODE] ../libsdcc/fs2slong.c:36:     if iTemp0 [k2 lr3:17 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fs2slong_f_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ] != 0 goto _iffalse_0($2)
                      00145 ;       .line   36; "../libsdcc/fs2slong.c"     if (!f)
0007   5800           00146         MOVAR   r0x1003
0008   5C00           00147         ORAR    r0x1002
0009   5C00           00148         ORAR    r0x1001
000A   5C00           00149         ORAR    r0x1000
000B   E5B7           00150         JBSET   STATUS,2
000C   A000           00151         GOTO    _00106_DS_
                      00152 ;;[ICODE] ../libsdcc/fs2slong.c:37:     ret 0x0 {long-int literal}
                      00153 ;       .line   37; "../libsdcc/fs2slong.c"     return 0;
000D   3C00           00154         MOVAI   0x00
000E   5600           00155         MOVRA   STK02
000F   3C00           00156         MOVAI   0x00
0010   5600           00157         MOVRA   STK01
0011   3C00           00158         MOVAI   0x00
0012   5600           00159         MOVRA   STK00
0013   3C00           00160         MOVAI   0x00
0014   A000           00161         GOTO    _00110_DS_
                      00162 ;;[ICODE] ../libsdcc/fs2slong.c:37:  _iffalse_0($2) :
                      00163 ;;[ICODE] ../libsdcc/fs2slong.c:39:     send iTemp0 [k2 lr3:17 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fs2slong_f_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ]{argreg = 1}
                      00164 ;;[ICODE] ../libsdcc/fs2slong.c:39:     send 0 {float literal}{argreg = 1}
                      00165 ;;[ICODE] ../libsdcc/fs2slong.c:39:     iTemp1 [k4 lr9:10 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1004 ] = call ___fslt [k11 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
0015                  00166 _00106_DS_
                      00167 ;       .line   39; "../libsdcc/fs2slong.c"     if (f<0) {
0015   3C00           00168         MOVAI   0x00
0016   5600           00169         MOVRA   STK06
0017   3C00           00170         MOVAI   0x00
0018   5600           00171         MOVRA   STK05
0019   3C00           00172         MOVAI   0x00
001A   5600           00173         MOVRA   STK04
001B   3C00           00174         MOVAI   0x00
001C   5600           00175         MOVRA   STK03
001D   5800           00176         MOVAR   r0x1003
001E   5600           00177         MOVRA   STK02
001F   5800           00178         MOVAR   r0x1002
0020   5600           00179         MOVRA   STK01
0021   5800           00180         MOVAR   r0x1001
0022   5600           00181         MOVRA   STK00
0023   5800           00182         MOVAR   r0x1000
0024   8000           00183         CALL    ___fslt
0025   5600           00184         MOVRA   r0x1004
                      00185 ;;[ICODE] ../libsdcc/fs2slong.c:39:     if iTemp1 [k4 lr9:10 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1004 ] == 0 goto _iffalse_1($4)
0026   3C00           00186         MOVAI   0x00
0027   5C00           00187         ORAR    r0x1004
0028   F5B7           00188         JBCLR   STATUS,2
0029   A000           00189         GOTO    _00108_DS_
                      00190 ;;[ICODE] ../libsdcc/fs2slong.c:40:     iTemp2 [k6 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{float fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] = - iTemp0 [k2 lr3:17 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fs2slong_f_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00191 ;       .line   40; "../libsdcc/fs2slong.c"     return -__fs2ulong(-f);
002A   5800           00192         MOVAR   r0x1000
002B   3980           00193         XORAI   0x80
002C   5600           00194         MOVRA   r0x1005
                      00195 ;;104   MOVAR   r0x1001
                      00196 ;;102   MOVAR   r0x1002
                      00197 ;;100   MOVAR   r0x1003
                      00198 ;;[ICODE] ../libsdcc/fs2slong.c:40:     send iTemp2 [k6 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{float fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ]{argreg = 1}
                      00199 ;;[ICODE] ../libsdcc/fs2slong.c:40:     iTemp3 [k8 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] = call ___fs2ulong [k5 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int function ( float fixed) fixed}
                      00200 ;;99    MOVAR   r0x1004
002D   5800           00201         MOVAR   r0x1003
002E   5600           00202         MOVRA   r0x1004
002F   5600           00203         MOVRA   STK02
                      00204 ;;101   MOVAR   r0x1007
0030   5800           00205         MOVAR   r0x1002
0031   5600           00206         MOVRA   r0x1007
0032   5600           00207         MOVRA   STK01
                      00208 ;;103   MOVAR   r0x1006
0033   5800           00209         MOVAR   r0x1001
0034   5600           00210         MOVRA   r0x1006
0035   5600           00211         MOVRA   STK00
0036   5800           00212         MOVAR   r0x1005
0037   8000           00213         CALL    ___fs2ulong
0038   5600           00214         MOVRA   r0x1005
0039   5800           00215         MOVAR   STK00
003A   5600           00216         MOVRA   r0x1006
003B   5800           00217         MOVAR   STK01
003C   5600           00218         MOVRA   r0x1007
003D   5800           00219         MOVAR   STK02
003E   5600           00220         MOVRA   r0x1004
                      00221 ;;[ICODE] ../libsdcc/fs2slong.c:40:     iTemp4 [k9 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] = - iTemp3 [k8 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ]
003F   7200           00222         COMR    r0x1004
0040   7200           00223         COMR    r0x1007
0041   7200           00224         COMR    r0x1006
0042   7200           00225         COMR    r0x1005
0043   6600           00226         INCR    r0x1004
0044   F5B7           00227         JBCLR   STATUS,2
0045   6600           00228         INCR    r0x1007
0046   F5B7           00229         JBCLR   STATUS,2
0047   6600           00230         INCR    r0x1006
0048   F5B7           00231         JBCLR   STATUS,2
0049   6600           00232         INCR    r0x1005
                      00233 ;;[ICODE] ../libsdcc/fs2slong.c:40:     ret iTemp4 [k9 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ]
004A   5800           00234         MOVAR   r0x1004
004B   5600           00235         MOVRA   STK02
004C   5800           00236         MOVAR   r0x1007
004D   5600           00237         MOVRA   STK01
004E   5800           00238         MOVAR   r0x1006
004F   5600           00239         MOVRA   STK00
0050   5800           00240         MOVAR   r0x1005
0051   A000           00241         GOTO    _00110_DS_
                      00242 ;;[ICODE] ../libsdcc/fs2slong.c:40:  _iffalse_1($4) :
                      00243 ;;[ICODE] ../libsdcc/fs2slong.c:42:     send iTemp0 [k2 lr3:17 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fs2slong_f_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ]{argreg = 1}
                      00244 ;;[ICODE] ../libsdcc/fs2slong.c:42:     iTemp5 [k10 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = call ___fs2ulong [k5 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int function ( float fixed) fixed}
0052                  00245 _00108_DS_
                      00246 ;       .line   42; "../libsdcc/fs2slong.c"     return __fs2ulong(f);
0052   5800           00247         MOVAR   r0x1003
0053   5600           00248         MOVRA   STK02
0054   5800           00249         MOVAR   r0x1002
0055   5600           00250         MOVRA   STK01
0056   5800           00251         MOVAR   r0x1001
0057   5600           00252         MOVRA   STK00
0058   5800           00253         MOVAR   r0x1000
0059   8000           00254         CALL    ___fs2ulong
005A   5600           00255         MOVRA   r0x1000
005B   5800           00256         MOVAR   STK00
005C   5600           00257         MOVRA   r0x1001
005D   5800           00258         MOVAR   STK01
005E   5600           00259         MOVRA   r0x1002
005F   5800           00260         MOVAR   STK02
0060   5600           00261         MOVRA   r0x1003
                      00262 ;;[ICODE] ../libsdcc/fs2slong.c:42:     ret iTemp5 [k10 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0061   5800           00263         MOVAR   r0x1003
0062   5600           00264         MOVRA   STK02
0063   5800           00265         MOVAR   r0x1002
0064   5600           00266         MOVRA   STK01
0065   5800           00267         MOVAR   r0x1001
0066   5600           00268         MOVRA   STK00
0067   5800           00269         MOVAR   r0x1000
                      00270 ;;[ICODE] ../libsdcc/fs2slong.c:42:  _return($6) :
                      00271 ;;[ICODE] ../libsdcc/fs2slong.c:42:     eproc ___fs2slong [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( float fixed) fixed}
0068                  00272 _00110_DS_
0068   000C           00273         RETURN  
                      00274 ; exit point of ___fs2slong
                      00275 
                      00276 
                      00277 ;       code size estimation:
                      00278 ;         105+    0 =   105 instructions (  210 byte)
                      00279 
                      00280         end
gpasm-2.0.0_beta2 (Nov  6 2017)fs2slong.asm       2017-12-7  13:58:38          PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

ADCR0                             000001EC
ADCR1                             000001ED
ADEOC                             00000001
ADIE                              00000006
ADIF                              00000006
ADIOS0                            00000000
ADIOS1                            00000001
ADIOS3                            00000003
ADIOS4                            00000004
ADIOS5                            00000005
ADIOS7                            00000007
ADOIS2                            00000002
ADOIS6                            00000006
ADON                              00000000
ADRH                              000001EE
ADRL                              000001EF
BUZ0OE                            00000005
BUZ1OE                            00000005
C                                 00000000
CLKS                              00000002
DC                                00000001
FSR                               000001B4
FSR0                              000001B4
FSR1                              000001B5
GIE                               00000007
HAAS                              00000006
HBB                               00000005
HCF                               00000007
HEN                               00000001
HFEN                              00000000
HIBYTE                            000001B3
HTX                               00000004
I2CADDR                           000001F1
I2CCR                             000001F0
I2CDATA                           000001F2
I2CIE                             00000005
I2CIF                             00000005
INDF                              000001B0
INDF0                             000001B0
INDF1                             000001B1
INDF2                             000001B2
INDF3                             000001B9
INT0IE                            00000002
INT0IF                            00000002
INT1IE                            00000003
INT1IF                            00000003
INTE                              000001BA
INTF                              000001BB
IOP0                              000001C0
IOP1                              000001C4
IOP2                              000001C8
IOP3                              000001CC
LFEN                              00000001
MCR                               000001B8
OEP0                              000001C1
OEP1                              000001C5
OEP2                              000001C9
OEP3                              000001CD
OSCM                              000001BC
P00                               00000000
P00OE                             00000000
P00PU                             00000000
P01                               00000001
P01OE                             00000001
P01PU                             00000001
P02                               00000002
P02OE                             00000002
P02PU                             00000002
P03                               00000003
P03OE                             00000003
P03PU                             00000003
P04                               00000004
P04OE                             00000004
P04PU                             00000004
P05                               00000005
P05OE                             00000005
P05PU                             00000005
P06                               00000006
P06OE                             00000006
P07                               00000007
P07OE                             00000007
P10                               00000000
P10OE                             00000000
P10PU                             00000000
P11                               00000001
P11OE                             00000001
P11PU                             00000001
P12                               00000002
P12OE                             00000002
P12PU                             00000002
P13                               00000003
P13OE                             00000003
P13PU                             00000003
P14                               00000004
P14OE                             00000004
P14PU                             00000004
P15                               00000005
P15OE                             00000005
P15PU                             00000005
P16                               00000006
P16OE                             00000006
P16PU                             00000006
P17                               00000007
P17OE                             00000007
P17PU                             00000007
P20                               00000000
P20OE                             00000000
P20PU                             00000000
P21                               00000001
P21OE                             00000001
P21PU                             00000001
P22                               00000002
P22OE                             00000002
P22PU                             00000002
P23                               00000003
P23OE                             00000003
P23PU                             00000003
P24                               00000004
P24OE                             00000004
P24PU                             00000004
P25                               00000005
P25OE                             00000005
P25PU                             00000005
P26                               00000006
P26OE                             00000006
P26PU                             00000006
P27                               00000007
P27OE                             00000007
P27PU                             00000007
P30                               00000000
P30OE                             00000000
P30PU                             00000000
P31                               00000001
P31OE                             00000001
P31PU                             00000001
PCL                               000001B6
PD                                00000004
PUP0                              000001C2
PUP1                              000001C6
PUP2                              000001CA
PUP3                              000001CE
PWM0OE                            00000006
PWM1OE                            00000006
RXAK                              00000000
SRW                               00000002
STATUS                            000001B7
STBH                              00000004
STBL                              00000005
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
T0CNT                             000001D1
T0CR                              000001D0
T0DATA                            000001D3
T0IE                              00000000
T0IF                              00000000
T0LOAD                            000001D2
T1CNT                             000001D5
T1CR                              000001D4
T1DATA                            000001D7
T1IE                              00000001
T1IF                              00000001
T1LOAD                            000001D6
T2CNTH                            000001D9
T2CNTL                            000001DA
T2CR                              000001D8
T2IE                              00000004
T2IF                              00000004
T2LOADH                           000001DB
T2LOADL                           000001DC
T2MOD                             00000005
TC0EN                             00000007
TC1EN                             00000007
TC2EN                             00000007
TK0CLR                            00000003
TK0CNTH                           000001E2
TK0CNTL                           000001E3
TK0CRH                            000001E0
TK0CRL                            000001E1
TK0IE                             00000006
TK0IF                             00000007
TK0JE                             00000005
TK0RCE                            00000004
TK1CLR                            00000003
TK1CNTH                           000001E6
TK1CNTL                           000001E7
TK1CRH                            000001E4
TK1CRL                            000001E5
TK1IE                             00000006
TK1IF                             00000007
TK1JE                             00000005
TK1RCE                            00000004
TK2CLR                            00000003
TK2CNTH                           000001EA
TK2CNTL                           000001EB
TK2CRH                            000001E8
TK2CRL                            000001E9
TK2IE                             00000006
TK2IF                             00000007
TK2JE                             00000005
TK2RCE                            00000004
TO                                00000005
TXAK                              00000003
Z                                 00000002
_00106_DS_                        00000015
_00108_DS_                        00000052
_00110_DS_                        00000068
_CONFIG0                          00008000
_CONFIG1                          00008001
_CP_ALL                           00007FFF
_FCPU_128T                        0000FFEF
_FCPU_16T                         0000FFBF
_FCPU_256T                        0000FFFF
_FCPU_2T                          0000FF8F
_FCPU_32T                         0000FFCF
_FCPU_4T                          0000FF9F
_FCPU_64T                         0000FFDF
_FCPU_8T                          0000FFAF
_HRC_LRC                          0000FCFF
_HRC_LXT                          0000FDFF
_HXT_LRC                          0000FEFF
_MCLR_OFF                         0000FF7F
_MCLR_ON                          0000FFFF
_PTWRT_16_1024                    0000FFF7
_PTWRT_16_16                      0000DFF7
_PTWRT_256_256                    0000DFFF
_PTWRT_256_4096                   0000FFFF
_PTWRT_4_4                        0000DFF3
_PTWRT_4_512                      0000FFF3
_PTWRT_64_2048                    0000FFFB
_PTWRT_64_64                      0000DFFB
_VLVR_160                         0000E3FF
_VLVR_185                         0000E7FF
_VLVR_205                         0000EBFF
_VLVR_218                         0000EFFF
_VLVR_232                         0000F3FF
_VLVR_245                         0000F7FF
_VLVR_305                         0000FBFF
_VLVR_360                         0000FFFF
_WDT_ALWAYS_OFF                   0000FFFC
_WDT_ALWAYS_ON                    0000FFFF
_WDT_SLEEP_OFF                    0000FFFD
__32P64                           00000001
___fs2schar                       00000000
___fs2sint                        00000000
___fs2slong                       00000000
___fs2uchar                       00000000
___fs2uint                        00000000
___fs2ulong                       00000000
___fsadd                          00000000
___fsdiv                          00000000
___fseq                           00000000
___fsgt                           00000000
___fslt                           00000000
___fsmul                          00000000
___fsneq                          00000000
___fssub                          00000000
___schar2fs                       00000000
___sint2fs                        00000000
___slong2fs                       00000000
___uchar2fs                       00000000
___uint2fs                        00000000
___ulong2fs                       00000000
r0x1000                           00000003
r0x1001                           00000002
r0x1002                           00000001
r0x1003                           00000000
r0x1004                           00000004
r0x1005                           00000007
r0x1006                           00000006
r0x1007                           00000005

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

