gpasm-2.0.0_beta2 (Aug 27 2017)_mulint.asm        2017-9-12  18:09:56          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : SinoMCU ANSI-C Compiler
                      00003 ; Version 1.0.0 (Sep 11 2017) (MINGW32)
                      00004 ; This file was generated Tue Sep 12 18:09:56 2017
                      00005 ;--------------------------------------------------------
                      00006 ; MC30/MC32 port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../libsdcc/_mulint.c"
                      00009         list    p=3264
                      00010         radix dec
                      00011         include "3264.inc"
                      00001                 LIST
                      00002 ;mc32p64.inc    Standard Header File, Version 1.00 by Sinomcu
                      00374                 LIST
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015 
                      00016         extern PSAVE
                      00017         extern SSAVE
                      00018         extern WSAVE
                      00019         extern STK12
                      00020         extern STK11
                      00021         extern STK10
                      00022         extern STK09
                      00023         extern STK08
                      00024         extern STK07
                      00025         extern STK06
                      00026         extern STK05
                      00027         extern STK04
                      00028         extern STK03
                      00029         extern STK02
                      00030         extern STK01
                      00031         extern STK00
                      00032 ;--------------------------------------------------------
                      00033 ; global declarations
                      00034 ;--------------------------------------------------------
                      00035         global  __mulint
                      00036 
                      00037 ;--------------------------------------------------------
                      00038 ; global definitions
                      00039 ;--------------------------------------------------------
                      00040 ;--------------------------------------------------------
                      00041 ; absolute symbol definitions
                      00042 ;--------------------------------------------------------
                      00043 ;--------------------------------------------------------
                      00044 ; compiler-defined variables
                      00045 ;--------------------------------------------------------
                      00046 UDL__mulint_0   udata
0000                  00047 r0x1001 res     1
0000                  00048 r0x1000 res     1
0001                  00049 r0x1003 res     1
0001                  00050 r0x1002 res     1
0002                  00051 r0x1004 res     1
0002                  00052 r0x1005 res     1
0003                  00053 r0x1006 res     1
0003                  00054 r0x1007 res     1
0004                  00055 r0x1008 res     1
0004                  00056 r0x100A res     1
0005                  00057 r0x1009 res     1
                      00058 ;--------------------------------------------------------
                      00059 ; initialized data
                      00060 ;--------------------------------------------------------
                      00061 
                      00062 ;@Allocation info for local variables in function '_mulint'
                      00063 ;@_mulint b                         Allocated to registers r0x1003 r0x1002 ;size:2
                      00064 ;@_mulint a                         Allocated to registers r0x1001 r0x1000 ;size:2
                      00065 ;@_mulint result                    Allocated to registers r0x1004 r0x1005 ;size:2
                      00066 ;@_mulint i                         Allocated to registers r0x1006 ;size:1
                      00067 ;@end Allocation info for local variables in function '_mulint';
                      00068 
                      00069 ;--------------------------------------------------------
                      00070 ; overlayable items in internal ram 
                      00071 ;--------------------------------------------------------
                      00072 ;       udata_ovr
                      00073 ;--------------------------------------------------------
                      00074 ; code
                      00075 ;--------------------------------------------------------
                      00076 code__mulint    code
                      00077 ;***
                      00078 ;  pBlock Stats: dbName = C
                      00079 ;***
                      00080 ;entry:  __mulint       ;Function start
                      00081 ; 2 exit points
                      00082 ;has an exit
                      00083 ;14 compiler assigned registers:
                      00084 ;   r0x1000
                      00085 ;   STK00
                      00086 ;   r0x1001
                      00087 ;   STK01
                      00088 ;   r0x1002
                      00089 ;   STK02
                      00090 ;   r0x1003
                      00091 ;   r0x1004
                      00092 ;   r0x1005
                      00093 ;   r0x1006
                      00094 ;   r0x1007
                      00095 ;   r0x1008
                      00096 ;   r0x1009
                      00097 ;   r0x100A
                      00098 ;; Starting pCode block
                      00099 ;;[ICODE] ../libsdcc/_mulint.c:33:  _entry($16) :
                      00100 ;;[ICODE] ../libsdcc/_mulint.c:33:      proc __mulint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
0000                  00101 __mulint        ;Function start
                      00102 ; 2 exit points
                      00103 ;;[ICODE] ../libsdcc/_mulint.c:33: iTemp0 [k2 lr3:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_a_1_1}[r0x1000 r0x1001 ] = recv __mulint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
                      00104 ;       .line   33; "../libsdcc/_mulint.c"      _mulint (int a, int b)
0000   5600           00105         MOVRA   r0x1000
0001   5800           00106         MOVAR   STK00
0002   5600           00107         MOVRA   r0x1001
                      00108 ;;[ICODE] ../libsdcc/_mulint.c:33: iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_b_1_1}[r0x1002 r0x1003 ] = recv __mulint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
0003   5800           00109         MOVAR   STK01
0004   5600           00110         MOVRA   r0x1002
0005   5800           00111         MOVAR   STK02
0006   5600           00112         MOVRA   r0x1003
                      00113 ;;[ICODE] ../libsdcc/_mulint.c:35:      iTemp2 [k6 lr5:32 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_result_1_2}[r0x1004 r0x1005 ] := 0x0 {int literal}
                      00114 ;       .line   35; "../libsdcc/_mulint.c"      int result = 0;
0007   7600           00115         CLRR    r0x1004
0008   7600           00116         CLRR    r0x1005
                      00117 ;;[ICODE] ../libsdcc/_mulint.c:39:      iTemp3 [k8 lr6:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __mulint_i_1_2}[r0x1006 ] := 0x8 {unsigned-char literal}
                      00118 ;       .line   39; "../libsdcc/_mulint.c"      for (i = 0; i < 8u; i++) {
0009   3C08           00119         MOVAI   0x08
000A   5600           00120         MOVRA   r0x1006
                      00121 ;;[ICODE] ../libsdcc/_mulint.c:39:  _forcontinue_0($14) :
                      00122 ;;[ICODE] ../libsdcc/_mulint.c:41:      iTemp4 [k10 lr9:10 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x1007 r0x1008 ] = (unsigned-int register)iTemp0 [k2 lr3:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_a_1_1}[r0x1000 r0x1001 ]
000B                  00123 _00118_DS_
                      00124 ;       .line   41; "../libsdcc/_mulint.c"      if (a & 0x0001u) result += b;
000B   5800           00125         MOVAR   r0x1001
000C   5600           00126         MOVRA   r0x1007
000D   5800           00127         MOVAR   r0x1000
000E   5600           00128         MOVRA   r0x1008
                      00129 ;;[ICODE] ../libsdcc/_mulint.c:41:      iTemp5 [k11 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} = iTemp4 [k10 lr9:10 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x1007 r0x1008 ] & 0x1 {const-unsigned-int literal}
000F   E000           00130         JBSET   r0x1007,0
0010   A000           00131         GOTO    _00109_DS_
                      00132 ;;[ICODE] ../libsdcc/_mulint.c:41:      if iTemp5 [k11 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} == 0 goto _andif_0($5)
                      00133 ;;[ICODE] ../libsdcc/_mulint.c:41:      iTemp2 [k6 lr5:32 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_result_1_2}[r0x1004 r0x1005 ] = iTemp2 [k6 lr5:32 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_result_1_2}[r0x1004 r0x1005 ] + iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_b_1_1}[r0x1002 r0x1003 ]
0011   5800           00134         MOVAR   r0x1003
0012   7E00           00135         ADDRA   r0x1004
0013   5800           00136         MOVAR   r0x1002
0014   F1B7           00137         JBCLR   STATUS,0
0015   6000           00138         JZAR    r0x1002
0016   7E00           00139         ADDRA   r0x1005
                      00140 ;;[ICODE] ../libsdcc/_mulint.c:42:  _andif_0($5) :
                      00141 ;;[ICODE] ../libsdcc/_mulint.c:42:      iTemp7 [k13 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] = (unsigned-long-int register)iTemp0 [k2 lr3:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_a_1_1}[r0x1000 r0x1001 ]
0017                  00142 _00109_DS_
                      00143 ;       .line   42; "../libsdcc/_mulint.c"      if (sizeof (a) > 1 && (a & 0x00000100ul)) result += (b << 8u);
0017   5800           00144         MOVAR   r0x1001
0018   5600           00145         MOVRA   r0x1007
0019   5800           00146         MOVAR   r0x1000
001A   5600           00147         MOVRA   r0x1008
001B   3C00           00148         MOVAI   0x00
001C   FE00           00149         JBCLR   r0x1008,7
001D   3CFF           00150         MOVAI   0xff
001E   5600           00151         MOVRA   r0x1009
001F   5600           00152         MOVRA   r0x100A
                      00153 ;;[ICODE] ../libsdcc/_mulint.c:42:      iTemp8 [k14 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} = iTemp7 [k13 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] & 0x100 {const-unsigned-long-int literal}
0020   E000           00154         JBSET   r0x1008,0
0021   A000           00155         GOTO    _00114_DS_
                      00156 ;;[ICODE] ../libsdcc/_mulint.c:42:      if iTemp8 [k14 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} == 0 goto _iffalse_3($10)
                      00157 ;;[ICODE] ../libsdcc/_mulint.c:42:      iTemp10 [k16 lr18:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x1007 r0x1008 ] = iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_b_1_1}[r0x1002 r0x1003 ] << 0x8 {const-unsigned-int literal}
                      00158 ;;100   MOVAR   r0x1003
0022   7600           00159         CLRR    r0x1007
                      00160 ;;[ICODE] ../libsdcc/_mulint.c:42:      iTemp11 [k17 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x1009 r0x100A ] = (unsigned-int register)iTemp2 [k6 lr5:32 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_result_1_2}[r0x1004 r0x1005 ]
0023   5800           00161         MOVAR   r0x1004
0024   5600           00162         MOVRA   r0x100A
0025   5800           00163         MOVAR   r0x1005
0026   5600           00164         MOVRA   r0x1005
0027   5600           00165         MOVRA   r0x1009
                      00166 ;;[ICODE] ../libsdcc/_mulint.c:42:      iTemp2 [k6 lr5:32 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_result_1_2}[r0x1004 r0x1005 ] = iTemp11 [k17 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x1009 r0x100A ] + iTemp10 [k16 lr18:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x1007 r0x1008 ]
0028   3C00           00167         MOVAI   0x00
0029   7C00           00168         ADDAR   r0x100A
002A   5600           00169         MOVRA   r0x1004
                      00170 ;;101   MOVAR   r0x1009
                      00171 ;;99    MOVAR   r0x1008
002B   5800           00172         MOVAR   r0x1003
002C   5600           00173         MOVRA   r0x1008
002D   F1B7           00174         JBCLR   STATUS,0
002E   6000           00175         JZAR    r0x1008
002F   7E00           00176         ADDRA   r0x1005
                      00177 ;;[ICODE] ../libsdcc/_mulint.c:44:  _iffalse_3($10) :
                      00178 ;;[ICODE] ../libsdcc/_mulint.c:45:      iTemp19 [k25 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x1007 r0x1008 ] = (unsigned-int fixed)iTemp0 [k2 lr3:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_a_1_1}[r0x1000 r0x1001 ]
0030                  00179 _00114_DS_
                      00180 ;       .line   45; "../libsdcc/_mulint.c"      a = ((unsigned int)a) >> 1u;
0030   5800           00181         MOVAR   r0x1001
0031   5600           00182         MOVRA   r0x1007
0032   5800           00183         MOVAR   r0x1000
0033   5600           00184         MOVRA   r0x1008
                      00185 ;;[ICODE] ../libsdcc/_mulint.c:45:      iTemp0 [k2 lr3:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_a_1_1}[r0x1000 r0x1001 ] = iTemp19 [k25 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x1007 r0x1008 ] >> 0x1 {const-unsigned-int literal}
                      00186 ;;shiftRight_Left2ResultLit:5213: shCount=1, size=2, sign=0, same=0, offr=0
0034   D1B7           00187         BCLR    STATUS,0
0035   4C00           00188         RRAR    r0x1008
0036   5600           00189         MOVRA   r0x1000
0037   4C00           00190         RRAR    r0x1007
0038   5600           00191         MOVRA   r0x1001
                      00192 ;;[ICODE] ../libsdcc/_mulint.c:46:      iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_b_1_1}[r0x1002 r0x1003 ] = iTemp1 [k4 lr4:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_b_1_1}[r0x1002 r0x1003 ] << 0x1 {const-unsigned-int literal}
                      00193 ;       .line   46; "../libsdcc/_mulint.c"      b <<= 1u;
0039   D1B7           00194         BCLR    STATUS,0
003A   5200           00195         RLR     r0x1003
003B   5200           00196         RLR     r0x1002
                      00197 ;;[ICODE] ../libsdcc/_mulint.c:46:      iTemp23 [k29 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x1007 ] = (char register)iTemp3 [k8 lr6:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __mulint_i_1_2}[r0x1006 ]
003C   5800           00198         MOVAR   r0x1006
003D   5600           00199         MOVRA   r0x1007
                      00200 ;;[ICODE] ../libsdcc/_mulint.c:46:      iTemp3 [k8 lr6:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __mulint_i_1_2}[r0x1006 ] = iTemp23 [k29 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x1007 ] - 0x1 {const-char literal}
003E   6C00           00201         DECAR   r0x1007
003F   5600           00202         MOVRA   r0x1006
                      00203 ;;[ICODE] ../libsdcc/_mulint.c:39:      if iTemp3 [k8 lr6:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ __mulint_i_1_2}[r0x1006 ] != 0 goto _forcontinue_0($14)
                      00204 ;       .line   39; "../libsdcc/_mulint.c"      for (i = 0; i < 8u; i++) {
0040   3C00           00205         MOVAI   0x00
0041   5C00           00206         ORAR    r0x1006
0042   E5B7           00207         JBSET   STATUS,2
0043   A000           00208         GOTO    _00118_DS_
                      00209 ;;[ICODE] ../libsdcc/_mulint.c:49:      ret iTemp2 [k6 lr5:32 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ __mulint_result_1_2}[r0x1004 r0x1005 ]
                      00210 ;       .line   49; "../libsdcc/_mulint.c"      return result;
0044   5800           00211         MOVAR   r0x1004
0045   5600           00212         MOVRA   STK00
0046   5800           00213         MOVAR   r0x1005
                      00214 ;;[ICODE] ../libsdcc/_mulint.c:49:  _return($15) :
                      00215 ;;[ICODE] ../libsdcc/_mulint.c:49:      eproc __mulint [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
0047   000C           00216         RETURN  
                      00217 ; exit point of __mulint
                      00218 
                      00219 
                      00220 ;       code size estimation:
                      00221 ;          72+    0 =    72 instructions (  144 byte)
                      00222 
                      00223         end
gpasm-2.0.0_beta2 (Aug 27 2017)_mulint.asm        2017-9-12  18:09:56          PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

ADCR0                             000001EC
ADCR1                             000001ED
ADEOC                             00000001
ADIE                              00000006
ADIF                              00000006
ADIOS0                            00000000
ADIOS1                            00000001
ADIOS3                            00000003
ADIOS4                            00000004
ADIOS5                            00000005
ADIOS7                            00000007
ADOIS2                            00000002
ADOIS6                            00000006
ADON                              00000000
ADRH                              000001EE
ADRL                              000001EF
BUZ0OE                            00000005
BUZ1OE                            00000005
C                                 00000000
CLKS                              00000002
DC                                00000001
FSR                               000001B4
FSR0                              000001B4
FSR1                              000001B5
GIE                               00000007
HAAS                              00000006
HBB                               00000005
HCF                               00000007
HEN                               00000001
HFEN                              00000000
HIBYTE                            000001B3
HTX                               00000004
I2CADDR                           000001F1
I2CCR                             000001F0
I2CDATA                           000001F2
I2CIE                             00000005
I2CIF                             00000005
INDF                              000001B0
INDF0                             000001B0
INDF1                             000001B1
INDF2                             000001B2
INDF3                             000001B9
INT0IE                            00000002
INT0IF                            00000002
INT1IE                            00000003
INT1IF                            00000003
INTE                              000001BA
INTF                              000001BB
IOP0                              000001C0
IOP1                              000001C4
IOP2                              000001C8
IOP3                              000001CC
LFEN                              00000001
MCR                               000001B8
OEP0                              000001C1
OEP1                              000001C5
OEP2                              000001C9
OEP3                              000001CD
OSCM                              000001BC
P00                               00000000
P00OE                             00000000
P00PU                             00000000
P01                               00000001
P01OE                             00000001
P01PU                             00000001
P02                               00000002
P02OE                             00000002
P02PU                             00000002
P03                               00000003
P03OE                             00000003
P03PU                             00000003
P04                               00000004
P04OE                             00000004
P04PU                             00000004
P05                               00000005
P05OE                             00000005
P05PU                             00000005
P06                               00000006
P06OE                             00000006
P07                               00000007
P07OE                             00000007
P10                               00000000
P10OE                             00000000
P10PU                             00000000
P11                               00000001
P11OE                             00000001
P11PU                             00000001
P12                               00000002
P12OE                             00000002
P12PU                             00000002
P13                               00000003
P13OE                             00000003
P13PU                             00000003
P14                               00000004
P14OE                             00000004
P14PU                             00000004
P15                               00000005
P15OE                             00000005
P15PU                             00000005
P16                               00000006
P16OE                             00000006
P16PU                             00000006
P17                               00000007
P17OE                             00000007
P17PU                             00000007
P20                               00000000
P20OE                             00000000
P20PU                             00000000
P21                               00000001
P21OE                             00000001
P21PU                             00000001
P22                               00000002
P22OE                             00000002
P22PU                             00000002
P23                               00000003
P23OE                             00000003
P23PU                             00000003
P24                               00000004
P24OE                             00000004
P24PU                             00000004
P25                               00000005
P25OE                             00000005
P25PU                             00000005
P26                               00000006
P26OE                             00000006
P26PU                             00000006
P27                               00000007
P27OE                             00000007
P27PU                             00000007
P30                               00000000
P30OE                             00000000
P30PU                             00000000
P31                               00000001
P31OE                             00000001
P31PU                             00000001
PCL                               000001B6
PD                                00000004
PSAVE                             00000000
PUP0                              000001C2
PUP1                              000001C6
PUP2                              000001CA
PUP3                              000001CE
PWM0OE                            00000006
PWM1OE                            00000006
RXAK                              00000000
SRW                               00000002
SSAVE                             00000000
STATUS                            000001B7
STBH                              00000004
STBL                              00000005
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
STK07                             00000000
STK08                             00000000
STK09                             00000000
STK10                             00000000
STK11                             00000000
STK12                             00000000
T0CNT                             000001D1
T0CR                              000001D0
T0DATA                            000001D3
T0IE                              00000000
T0IF                              00000000
T0LOAD                            000001D2
T1CNT                             000001D5
T1CR                              000001D4
T1DATA                            000001D7
T1IE                              00000001
T1IF                              00000001
T1LOAD                            000001D6
T2CNTH                            000001D9
T2CNTL                            000001DA
T2CR                              000001D8
T2IE                              00000004
T2IF                              00000004
T2LOADH                           000001DB
T2LOADL                           000001DC
T2MOD                             00000005
TC0EN                             00000007
TC1EN                             00000007
TC2EN                             00000007
TK0CLR                            00000003
TK0CNTH                           000001E2
TK0CNTL                           000001E3
TK0CRH                            000001E0
TK0CRL                            000001E1
TK0IE                             00000006
TK0IF                             00000007
TK0JE                             00000005
TK0RCE                            00000004
TK1CLR                            00000003
TK1CNTH                           000001E6
TK1CNTL                           000001E7
TK1CRH                            000001E4
TK1CRL                            000001E5
TK1IE                             00000006
TK1IF                             00000007
TK1JE                             00000005
TK1RCE                            00000004
TK2CLR                            00000003
TK2CNTH                           000001EA
TK2CNTL                           000001EB
TK2CRH                            000001E8
TK2CRL                            000001E9
TK2IE                             00000006
TK2IF                             00000007
TK2JE                             00000005
TK2RCE                            00000004
TO                                00000005
TXAK                              00000003
WSAVE                             00000000
Z                                 00000002
_00109_DS_                        00000017
_00114_DS_                        00000030
_00118_DS_                        0000000B
_CONFIG0                          00008000
_CONFIG1                          00008001
_CP_ALL                           00007FFF
_FCPU_128T                        0000FFEF
_FCPU_16T                         0000FFBF
_FCPU_256T                        0000FFFF
_FCPU_2T                          0000FF8F
_FCPU_32T                         0000FFCF
_FCPU_4T                          0000FF9F
_FCPU_64T                         0000FFDF
_FCPU_8T                          0000FFAF
_HRC_LRC                          0000FCFF
_HRC_LXT                          0000FDFF
_HXT_LRC                          0000FEFF
_MCLR_OFF                         0000FF7F
_MCLR_ON                          0000FFFF
_PTWRT_16_1024                    0000FFF7
_PTWRT_16_16                      0000DFF7
_PTWRT_256_256                    0000DFFF
_PTWRT_256_4096                   0000FFFF
_PTWRT_4_4                        0000DFF3
_PTWRT_4_512                      0000FFF3
_PTWRT_64_2048                    0000FFFB
_PTWRT_64_64                      0000DFFB
_VLVR_160                         0000E3FF
_VLVR_185                         0000E7FF
_VLVR_205                         0000EBFF
_VLVR_218                         0000EFFF
_VLVR_232                         0000F3FF
_VLVR_245                         0000F7FF
_VLVR_305                         0000FBFF
_VLVR_360                         0000FFFF
_WDT_ALWAYS_OFF                   0000FFFC
_WDT_ALWAYS_ON                    0000FFFF
_WDT_SLEEP_OFF                    0000FFFD
__32P64                           00000001
__mulint                          00000000
r0x1000                           00000001
r0x1001                           00000000
r0x1002                           00000003
r0x1003                           00000002
r0x1004                           00000004
r0x1005                           00000005
r0x1006                           00000006
r0x1007                           00000007
r0x1008                           00000008
r0x1009                           0000000A
r0x100A                           00000009

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

